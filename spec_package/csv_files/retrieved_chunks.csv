query_text,retrieved_chunk_1,retrieved_chunk_2,retrieved_chunk_3,retrieved_chunk_4,retrieved_chunk_5,retrieved_chunk_6,retrieved_chunk_7,retrieved_chunk_8,retrieved_chunk_9,retrieved_chunk_10,min_required_chunks
"What is some of the major topics Paul Graham discusses in his essays about startups, programming, and wealth creation?","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","What's the equivalent for startups? How do you keep your 
options maximally open?
One thing you can do while you're still in school is to learn how startups work. Unfortunately 
that's not easy . Few if any colleges have classes about startups. There may be business school 
classes on entrepreneurship, as they call it over there, but these are likely to be a waste of time. 
Business schools like to talk about startups, but philosophically they're at the opposite end of 
the spectrum. Most books on startups also seem to be useless. I've looked at a few and none 
get it right. Books in most fields are written by people who know the subject from experience, 
but for startups there's a unique problem: by definition the founders of successful startups don't 
need to write books to make money . As a result most books on the subject end up being written 
by people who don't understand it.","Now he's cofounder of a startup called Friendfeed. It's only a year old, but already everyone in 
the Valley is watching them. Someone responsible for three of the biggest ideas at Google is 
going to come up with more.
5. Sam Altman
I was told I shouldn't mention founders of YC-funded companies in this list. But Sam Altman 
can't be stopped by such flimsy rules. If he wants to be on this list, he's going to be.
Honestly , Sam is, along with Steve Jobs, the founder I refer to most when I'm advising startups. 
On questions of design, I ask ""What would Steve do?"" but on questions of strategy or ambition I 
ask ""What would Sama do?""
What I learned from meeting Sama is that the doctrine of the elect applies to startups.","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.","Unfortunately the constraint probably has to be self-imposed. If you're expected to do more 
with less, then you're being starved, not eating virtuously .
[6] Without the prospect of publication, the closest most people come to writing essays is to write in a journal. I find I 
never get as deeply into subjects as I do in proper essays. As the name implies, you don't go back and rewrite journal 
entries over and over for two weeks.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Sarah Harlin, Jessica Livingston, Jackie McDonough, 
Robert Morris, Olin Shivers, and Chris Small for reading drafts of this, and to Chris Small and Chad Fowler for 
inviting me to speak. 
Why Startups Condense in America - # 62
May 2006
(This essay is derived from a keynote at Xtech.)
Startups happen in clusters.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","Get funded by Y Combinator. 
 October 2005
(This essay is derived from a talk at the 2005 Startup School.)
How do you get good ideas for startups? That's probably the number one question people ask 
me.
I'd like to reply with another question: why do people think it's hard to come up with ideas for 
startups?
That might seem a stupid thing to ask. Why do they think it's hard? If people can't do it, then it is 
hard, at least for them. Right?
Well, maybe not. What people usually say is not that they can't think of ideas, but that they don't 
have any . That's not quite the same thing. It could be the reason they don't have any is that they 
haven't tried to generate them.
I think this is often the case.","[7] What makes most suburbs so demoralizing is that there's no center to walk to.
Thanks to Justin Kan, Jessica Livingston, Robert Morris, Alexis Ohanian, Emmet Shear, and Fred Wilson for reading 
drafts of this.
 Comment on this essay .
Startups in 13 Sentences - # 104
 Want to start a startup? Get funded by Y Combinator. 
 Watch how this essay was written. 
 February 2009
One of the things I always tell startups is a principle I learned from Paul Buchheit: it's better to 
make a few people really happy than to make a lot of people semi-happy . I was saying recently 
to a reporter that if I could only tell startups 10 things, this would be one of them. Then I 
thought: what would the other 9 be?
When I made the list there turned out to be 13: 1.","What's special about startup ideas? 
Startup ideas are ideas for companies, and companies have to make money . And the way to 
make money is to make something people want.
Wealth is what people want. I don't mean that as some kind of philosophical statement; I mean 
it as a tautology .
So an idea for a startup is an idea for something people want. Wouldn't any good idea be 
something people want? Unfortunately not. I think new theorems are a fine thing to create, but 
there is no great demand for them. Whereas there appears to be great demand for celebrity 
gossip magazines. Wealth is defined democratically . Good ideas and valuable ideas are not 
quite the same thing; the difference is individual tastes.
But valuable ideas are very close to good ideas, especially in technology .","Know everything about your market. [6]
Why do founders persist in trying to convince investors of things they're not convinced of 
themselves? Partly because we've all been trained to.
When my friends Robert Morris and T revor Blackwell were in grad school, one of their fellow 
students was on the receiving end of a question from their faculty advisor that we still quote 
today . When the unfortunate fellow got to his last slide, the professor burst out: Which one of 
these conclusions do you actually believe? One of the artifacts of the way schools are 
organized is that we all get trained to talk even when we have nothing to say . If you have a ten 
page paper due, then ten pages you must write, even if you only have one page of ideas. Even 
if you have no ideas. Y ou have to produce something. And all too many startups go into 
fundraising in the same spirit.",0
"What is the main argument that Paul Graham presents in his essay 'Hackers & Painters,' and how does he support his viewpoint?","Hackers and Painters - # 23
May 2003
(This essay is derived from a guest lecture at Harvard, which incorporated an earlier talk at 
Northeastern.)
When I finished grad school in computer science I went to art school to study painting. A lot of 
people seemed surprised that someone interested in computers would also be interested in 
painting. They seemed to think that hacking and painting were very different kinds of work-- that 
hacking was cold, precise, and methodical, and that painting was the frenzied expression of 
some primal urge.
Both of these images are wrong. Hacking and painting have a lot in common. In fact, of all the 
different types of people I've known, hackers and painters are among the most alike.
What hackers and painters have in common is that they're both makers.","At the time, no one thought these paintings were as important as we do 
today . It would have seemed very odd to people at the time that Federico da Montefeltro, the 
Duke of Urbino, would one day be known mostly as the guy with the strange nose in a painting 
by Piero della Francesca.
So while I admit that hacking doesn't seem as cool as painting now, we should remember that 
painting itself didn't seem as cool in its glory days as it does now.
What we can say with some confidence is that these are the glory days of hacking. In most 
fields the great work is done early on. The paintings made between 1430 and 1500 are still 
unsurpassed. Shakespeare appeared just as professional theater was being born, and pushed 
the medium so far that every playwright since has had to live in his shadow.","Y ou learn to paint mostly by doing it. Ditto for hacking. Most hackers don't learn to hack by 
taking college courses in programming. They learn to hack by writing programs of their own at 
age thirteen. Even in college classes, you learn to hack mostly by hacking. [3]
Because painters leave a trail of work behind them, you can watch them learn by doing. If you 
look at the work of a painter in chronological order, you'll find that each painting builds on things 
that have been learned in previous ones. When there's something in a painting that works very 
well, you can usually find version 1 of it in a smaller form in some earlier painting.
I think most makers work this way . Writers and architects seem to as well.","It seems surprising to me that any employer would be reluctant to let hackers work on open-
source projects. At Viaweb, we would have been reluctant to hire anyone who didn't. When we 
interviewed programmers, the main thing we cared about was what kind of software they wrote 
in their spare time. Y ou can't do anything really well unless you love it, and if you love to hack 
you'll inevitably be working on projects of your own. [2]
Because hackers are makers rather than scientists, the right place to look for metaphors is not 
in the sciences, but among other kinds of makers. What else can painting teach us about 
hacking?
One thing we can learn, or at least confirm, from the example of painting is how to learn to 
hack. Y ou learn to paint mostly by doing it. Ditto for hacking.","So 
hackers start original, and get good, and scientists start good, and get original.
The other way makers learn is from examples. For a painter, a museum is a reference library of 
techniques. For hundreds of years it has been part of the traditional education of painters to 
copy the works of the great masters, because copying forces you to look closely at the way a 
painting is made.
Writers do this too. Benjamin Franklin learned to write by summarizing the points in the essays 
of Addison and Steele and then trying to reproduce them. Raymond Chandler did the same 
thing with detective stories.
Hackers, likewise, can learn to program by looking at good programs-- not just at what they do, 
but the source code too. One of the less publicized benefits of the open-source movement is 
that it has made it easier to learn to program.","[3]
Even Newton fell into this trap. After publishing his theory of colors in 1672 he found himself 
distracted by disputes for years, finally concluding that the only solution was to stop publishing: I 
see I have made myself a slave to Philosophy , but if I get free of Mr Linus's business I will 
resolutely bid adew to it eternally , excepting what I do for my privat satisfaction or leave to come 
out after me. For I see a man must either resolve to put out nothing new or become a slave to 
defend it. [4] Linus and his students at Liege were among the more tenacious critics. Newton's 
biographer Westfall seems to feel he was overreacting: Recall that at the time he wrote, 
Newton's ""slavery"" consisted of five replies to Liege, totalling fourteen printed pages, over the 
course of a year.","And the second could probably be condensed into two words: give up.
The problem is not so much the day to day management. Really good hackers are practically 
self-managing. The problem is, if you're not a hacker, you can't tell who the good hackers are. A 
similar problem explains why American cars are so ugly . I call it the design paradox. Y ou might 
think that you could make your products beautiful just by hiring a great designer to design them. 
But if you yourself don't have good taste, how are you going to recognize a good designer? By 
definition you can't tell from his portfolio. And you can't go by the awards he's won or the jobs 
he's had, because in design, as in most fields, those tend to be driven by fashion and 
schmoozing, with actual ability a distant third.","Albrecht Durer did 
the same thing with engraving, and Jane Austen with the novel.
Over and over we see the same pattern. A new medium appears, and people are so excited 
about it that they explore most of its possibilities in the first couple generations. Hacking seems 
to be in this phase now.
Painting was not, in Leonardo's time, as cool as his work helped make it. How cool hacking 
turns out to be will depend on what we can do with this new medium. 
Notes:
[1] The greatest damage that photography has done to painting may be the fact that it killed the best day job. Most of 
the great painters in history supported themselves by painting portraits. 
[2] I've been told that Microsoft discourages employees from contributing to open-source projects, even in their spare 
time.","What hackers and painters have in common is that they're both makers. Along with composers, 
architects, and writers, what hackers and painters are trying to do is make good things. They're 
not doing research per se, though if in the course of trying to make good things they discover 
some new technique, so much the better.
I've never liked the term ""computer science."" The main reason I don't like it is that there's no 
such thing. Computer science is a grab bag of tenuously related areas thrown together by an 
accident of history , like Y ugoslavia. At one end you have people who are really mathematicians, 
but call what they're doing computer science so they can get DARP A grants. In the middle you 
have people working on something like the natural history of computers-- studying the behavior 
of algorithms for routing data through networks, for example.","This pattern doesn't only apply to companies. Y ou see it in sponsored research too. Multics and 
Common Lisp were big-bang projects, and Unix and MacLisp were organic growth projects.
10 Redesign
""The best writing is rewriting,"" wrote E. B. White. Every good writer knows this, and it's true for 
software too. The most important part of design is redesign. Programming languages, 
especially , don't get redesigned enough.
T o write good software you must simultaneously keep two opposing ideas in your head. Y ou 
need the young hacker's naive faith in his abilities, and at the same time the veteran's 
skepticism. Y ou have to be able to think how hard can it be? with one half of your brain while 
thinking it will never work with the other.
The trick is to realize that there's no real contradiction here.",0
"Which essay by Paul Graham explains why writing is an important skill for programmers, and what reasons does he provide for this claim?","And paying attention is more 
important to reliability than moving slowly . Because he pays close attention, a Navy pilot can 
land a 40,000 lb. aircraft at 140 miles per hour on a pitching carrier deck, at night, more safely 
than the average teenager can cut a bagel.
This way of writing software is a double-edged sword of course. It works a lot better for a small 
team of good, trusted programmers than it would for a big company of mediocre ones, where 
bad ideas are caught by committees instead of the people that had them.
Brooks in Reverse
Fortunately , Web-based software does require fewer programmers. I once worked for a medium-
sized desktop software company that had over 100 people working in engineering as a whole. 
Only 13 of these were in product development. All the rest were working on releases, ports, and 
so on.","This sometimes alarms managers, and 
measured by total number of characters typed, it's rarely the optimal solution. But it's not always 
driven simply by arrogance or cluelessness. Writing code from scratch is also much more 
rewarding â€” so much more rewarding that a good programmer can end up net ahead, despite 
the shocking waste of characters. Indeed, it may be one of the advantages of capitalism that it 
encourages such rewriting. A company that needs software to do something can't use the 
software already written to do it at another company , and thus has to write their own, which 
often turns out better. [5]
The natural alignment between skating and solving new problems is one of the reasons the 
payoffs from startups are so high. Not only is the market price of unsolved problems higher, you 
also get a discount on productivity when you work on them.","[2] Y Combinator is (we hope) visited mostly by hackers. The proportions of OSes are: Windows 66.4%, Macintosh 
18.8%, Linux 11.4%, and FreeBSD 1.5%. The Mac number is a big change from what it would have been five years 
ago.
Writing-  Briefly - # 41
March 2005
(In the process of answering an email, I accidentally wrote a tiny essay about writing. I usually 
spend weeks on an essay . This one took 67 minutesâ€”23 of writing, and 44 of rewriting.)
I think it's far more important to write well than most people realize. Writing doesn't just 
communicate ideas; it generates them. If you're bad at writing and don't like to do it, you'll miss 
out on most of the ideas writing would have generated.
As for how to write well,","The way I worked, it seemed 
like programming consisted of debugging.
For a long time I felt bad about this, just as I once felt bad that I didn't hold my pencil the way 
they taught me to in elementary school. If I had only looked over at the other makers, the 
painters or the architects, I would have realized that there was a name for what I was doing: 
sketching. As far as I can tell, the way they taught me to program in college was all wrong. Y ou 
should figure out programs as you're writing them, just as writers and painters and architects do.
Realizing this has real implications for software design. It means that a programming language 
should, above all, be malleable. A programming language is for thinking of programs, not for 
expressing programs you've already thought of. It should be a pencil, not a pen.","This pattern doesn't only apply to companies. Y ou see it in sponsored research too. Multics and 
Common Lisp were big-bang projects, and Unix and MacLisp were organic growth projects.
10 Redesign
""The best writing is rewriting,"" wrote E. B. White. Every good writer knows this, and it's true for 
software too. The most important part of design is redesign. Programming languages, 
especially , don't get redesigned enough.
T o write good software you must simultaneously keep two opposing ideas in your head. Y ou 
need the young hacker's naive faith in his abilities, and at the same time the veteran's 
skepticism. Y ou have to be able to think how hard can it be? with one half of your brain while 
thinking it will never work with the other.
The trick is to realize that there's no real contradiction here.","Software companies can hire 
skilled people to work in a not-too-demanding environment, and can hire unskilled people to endure hardships, but 
they can't hire highly skilled people to bust their asses. Since capital is no longer needed, big companies have little to 
bring to the table.""
[16] In the original version of this essay , I advised avoiding Javascript. That was a good plan in 2001, but Javascript 
now works. 
Thanks to Sarah Harlin, T revor Blackwell, Robert Morris, Eric Raymond, Ken Anderson, and Dan Giffin for reading 
drafts of this paper; to Dan Bricklin and Bob Frankston for information about VisiCalc; and again to Ken Anderson for 
inviting me to speak at BBN.
 Y ou'll find this essay and 14 others in Hackers & Painters.","So 
hackers start original, and get good, and scientists start good, and get original.
The other way makers learn is from examples. For a painter, a museum is a reference library of 
techniques. For hundreds of years it has been part of the traditional education of painters to 
copy the works of the great masters, because copying forces you to look closely at the way a 
painting is made.
Writers do this too. Benjamin Franklin learned to write by summarizing the points in the essays 
of Addison and Steele and then trying to reproduce them. Raymond Chandler did the same 
thing with detective stories.
Hackers, likewise, can learn to program by looking at good programs-- not just at what they do, 
but the source code too. One of the less publicized benefits of the open-source movement is 
that it has made it easier to learn to program.","But reading Austen is like reading nonfiction. She writes so well you don't even notice 
her.
John McCarthy
John McCarthy invented Lisp, the field of (or at least the term) artificial intelligence, and was an 
early member of both of the top two computer science departments, MIT and Stanford. No one 
would dispute that he's one of the greats, but he's an especial hero to me because of Lisp.
It's hard for us now to understand what a conceptual leap that was at the time. Paradoxically , 
one of the reasons his achievement is hard to appreciate is that it was so successful. Practically 
every programming language invented in the last 20 years includes ideas from Lisp, and each 
year the median language gets more Lisplike.
In 1958 these ideas were anything but obvious. In 1958 there seem to have been two ways of 
thinking about programming.","It should be a pencil, not a pen. Static typing 
would be a fine idea if people actually did write programs the way they taught me to in college. 
But that's not how any of the hackers I know write programs. We need a language that lets us 
scribble and smudge and smear, not a language where you have to sit with a teacup of types 
balanced on your knee and make polite conversation with a strict old aunt of a compiler.
While we're on the subject of static typing, identifying with the makers will save us from another 
problem that afflicts the sciences: math envy . Everyone in the sciences secretly believes that 
mathematicians are smarter than they are. I think mathematicians also believe this. At any rate, 
the result is that scientists tend to make their work look as mathematical as possible.","So to write good software you have to 
understand how little users understand. They're going to walk up to the software with no 
preparation, and it had better do what they guess it will, because they're not going to read the 
manual. The best system I've ever seen in this respect was the original Macintosh, in 1985. It 
did what software almost never does: it just worked. [6]
Source code, too, should explain itself. If I could get people to remember just one quote about 
programming, it would be the one at the beginning of Structure and Interpretation of Computer 
Programs. Programs should be written for people to read, and only incidentally for machines to 
execute. Y ou need to have empathy not just for your users, but for your readers. It's in your 
interest, because you'll be one of them.",0
"What is the central idea behind the essay 'Makerâ€™s Schedule, Managerâ€™s Schedule,' and how does it describe differences in work styles?","Thanks to Jessica Livingston for reading drafts of this.
Maker-s Schedule- Manager-s Schedule  - # 114
 --> ""...the mere consciousness of an engagement will sometimes worry a whole day .""
Ã¿Ã½ Charles Dickens July 2009
One reason programmers dislike meetings so much is that they're on a different type of 
schedule from other people. Meetings cost them more.
There are two types of schedule, which I'll call the manager's schedule and the maker's 
schedule. The manager's schedule is for bosses. It's embodied in the traditional appointment 
book, with each day cut into one hour intervals. Y ou can block off several hours for a single task 
if you need to, but by default you change what you're doing every hour.
When you use time that way , it's merely a practical problem to meet with someone. Find an 
open slot in your schedule, book them, and you're done.","We just took it 
for granted that we had to either blow our schedules or offend people. But now that I've realized 
what's going on, perhaps there's a third option: to write something explaining the two types of 
schedule. Maybe eventually , if the conflict between the manager's schedule and the maker's 
schedule starts to be more widely understood, it will become less of a problem.
Those of us on the maker's schedule are willing to compromise. We know we have to have 
some number of meetings. All we ask from those on the manager's schedule is that they 
understand the cost.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Jessica Livingston, and Robert Morris 
for reading drafts of this.
Related:
A Local Revolution- - # 113
April 2009
Recently I realized I'd been holding two ideas in my head that would explode if combined.","Find an 
open slot in your schedule, book them, and you're done.
Most powerful people are on the manager's schedule. It's the schedule of command. But there's 
another way of using time that's common among people who make things, like programmers 
and writers. They generally prefer to use time in units of half a day at least. Y ou can't write or 
program well in units of an hour. That's barely enough time to get started.
When you're operating on the maker's schedule, meetings are a disaster. A single meeting can 
blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. 
Plus you have to remember to go to the meeting. That's no problem for someone on the 
manager's schedule. There's always something coming on the next hour; the only question is 
what.","There's always something coming on the next hour; the only question is 
what. But when someone on the maker's schedule has a meeting, they have to think about it.
For someone on the maker's schedule, having a meeting is like throwing an exception. It 
doesn't merely cause you to switch from one task to another; it changes the mode in which you 
work.
I find one meeting can sometimes affect a whole day . A meeting commonly blows at least half a 
day , by breaking up a morning or afternoon. But in addition there's sometimes a cascading 
effect. If I know the afternoon is going to be broken up, I'm slightly less likely to start something 
ambitious in the morning. I know this may sound oversensitive, but if you're a maker, think of 
your own case.","But Y Combinator runs on the maker's schedule. Rtm and T revor and I do 
because we always have, and Jessica does too, mostly , because she's gotten into sync with us.
I wouldn't be surprised if there start to be more companies like us. I suspect founders may 
increasingly be able to resist, or at least postpone, turning into managers, just as a few 
decades ago they started to be able to resist switching from jeans to suits.
How do we manage to advise so many startups on the maker's schedule? By using the classic 
device for simulating the manager's schedule within the maker's: office hours. Several times a 
week I set aside a chunk of time to meet founders we've funded.","Oy . So I'm going to try to give the other side of the story: what an essay really is, and how you 
write one. Or at least, how I write one.
Mods
The most obvious difference between real essays and the things one has to write in school is 
that real essays are not exclusively about English literature. Certainly schools should teach 
students how to write. But due to a series of historical accidents the teaching of writing has 
gotten mixed together with the study of literature. And so all over the country students are 
writing not about how a baseball team with a small budget might compete with the Y ankees, or 
the role of color in fashion, or what constitutes a good dessert, but about symbolism in Dickens.
With the result that writing is made to seem boring and pointless. Who cares about symbolism 
in Dickens? Dickens himself would be more interested in an essay about color or baseball.","Then I'd sleep till about 11 am, and come in and work until dinner on 
what I called ""business stuff."" I never thought of it in these terms, but in effect I had two 
workdays each day , one on the manager's schedule and one on the maker's.
When you're operating on the manager's schedule you can do something you'd never want to 
do on the maker's: you can have speculative meetings. Y ou can meet someone just to get to 
know one another. If you have an empty slot in your schedule, why not? Maybe it will turn out 
you can help one another in some way .
Business people in Silicon Valley (and the whole world, for that matter) have speculative 
meetings all the time. They're effectively free if you're on the manager's schedule.","Customary VC practice had once, like 
the customs about publishing essays, been based on real constraints. Startups had once been much more expensive 
to start, and proportionally rare. Now they could be cheap and common, but the VCs' customs still reflected the old 
world, just as customs about writing essays still reflected the constraints of the print era.
Which in turn implies that people who are independent-minded (i.e. less influenced by custom) will have an 
advantage in fields affected by rapid change (where customs are more likely to be obsolete).
Here's an interesting point, though: you can't always predict which fields will be affected by rapid change. Obviously 
software and venture capital will be, but who would have predicted that essay writing would be?
[13] Y Combinator was not the original name. At first we were called Cambridge Seed.","[4]
The team that made the original Macintosh were a great example of this phenomenon. People 
like Burrell Smith and Andy Hertzfeld and Bill Atkinson and Susan Kare were not just following 
orders. They were not tennis balls hit by Steve Jobs, but rockets let loose by Steve Jobs. There 
was a lot of collaboration between them, but they all seem to have individually felt the 
excitement of working on a project of one's own.
In Andy Hertzfeld's book on the Macintosh, he describes how they'd come back into the office 
after dinner and work late into the night. People who've never experienced the thrill of working 
on a project they're excited about can't distinguish this kind of working long hours from the kind 
that happens in sweatshops and boiler rooms, but they're at opposite ends of the spectrum.","[7] Whereas what drives me now, writing essays, is the flaws in them. 
Between essays I fuss for a few days, like a dog circling while it decides exactly where to lie 
down. But once I get started on one, I don't have to push myself to work, because there's 
always some error or omission already pushing me.
I do make some amount of effort to focus on important topics. Many problems have a hard core 
at the center, surrounded by easier stuff at the edges. Working hard means aiming toward the 
center to the extent you can. Some days you may not be able to; some days you'll only be able 
to work on the easier, peripheral stuff. But you should always be aiming as close to the center 
as you can without stalling.
The bigger question of what to do with your life is one of these problems with a hard core.",0
"How does Paul Graham define the concept of 'schlep blindness' in the context of startups, and why is it significant for entrepreneurs?","(This is also true of starting a startup generally .)
How do you overcome schlep blindness? Frankly , the most valuable antidote to schlep 
blindness is probably ignorance. Most successful founders would probably say that if they'd 
known when they were starting their company about the obstacles they'd have to overcome, 
they might never have started it. Maybe that's one reason the most successful startups of all so 
often have young founders.
In practice the founders grow with the problems. But no one seems able to foresee that, not 
even older, more experienced founders. So the reason younger founders have an advantage is 
that they make two mistakes that cancel each other out. They don't know how much they can 
grow, but they also don't know how much they'll need to. Older founders only make the first 
mistake.
Ignorance can't solve everything though.","A company is defined by the 
schleps it will undertake. And schleps should be dealt with the same way you'd deal with a cold 
swimming pool: just jump in. Which is not to say you should seek out unpleasant work per se, 
but that you should never shrink from it if it's on the path to something great.
The most dangerous thing about our dislike of schleps is that much of it is unconscious. Y our 
unconscious won't even let you see ideas that involve painful schleps. That's schlep blindness.
The phenomenon isn't limited to startups. Most people don't consciously decide not to be in as 
good physical shape as Olympic athletes, for example. Their unconscious mind decides for 
them, shrinking from the work involved.
The most striking example I know of schlep blindness is Stripe, or rather Stripe's idea.","""we already tried that"" or ""from speaking to our users that isn't 
what they'd like,"" etc. Those groups never have that glazed over look.
Thanks to Sam Altman, Patrick Collison, Aaron Iba, Jessica Livingston, Robert Morris, Harj T aggar, and Garry T an 
for reading drafts of this.
Schlep Blindness - # 140
 Want to start a startup? Get funded by Y Combinator. 
 January 2012
There are great startup ideas lying around unexploited right under our noses. One reason we 
don't see them is a phenomenon I call schlep blindness. Schlep was originally a Yiddish word 
but has passed into general use in the US. It means a tedious, unpleasant task.
No one likes schleps, but hackers especially dislike them.","The most striking example I know of schlep blindness is Stripe, or rather Stripe's idea. For over 
a decade, every hacker who'd ever had to process payments online knew how painful the 
experience was. Thousands of people must have known about this problem. And yet when they 
started startups, they decided to build recipe sites, or aggregators for local events. Why? Why 
work on problems few care much about and no one will pay for, when you could fix one of the 
most important components of the world's infrastructure? Because schlep blindness prevented 
people from even considering the idea of fixing payments.
Probably no one who applied to Y Combinator to work on a recipe site began by asking ""should 
we fix payments, or build a recipe site?"" and chose the recipe site.","No one likes schleps, but hackers especially dislike them. Most hackers who start startups wish 
they could do it by just writing some clever software, putting it on a server somewhere, and 
watching the money roll inâ€”without ever having to talk to users, or negotiate with other 
companies, or deal with other people's broken code. Maybe that's possible, but I haven't seen it.
One of the many things we do at Y Combinator is teach hackers about the inevitability of 
schleps. No, you can't start a startup by just writing code. I remember going through this 
realization myself. There was a point in 1995 when I was still trying to convince myself I could 
start a company by just writing code. But I soon learned from experience that schleps are not 
merely inevitable, but pretty much what business consists of.","I grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a 
man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising 
power, and isn't too fussy about how. As I've written before, one of the things that has surprised 
me most about startups is how few of the most successful founders are like that. Maybe 
successful people in other industries are; I don't know; but not startup founders. [1]
I knew this empirically , but I never saw the math of why till I got this founder's email. In it he said 
he worried that he was fundamentally soft-hearted and tended to give away too much for free. 
He thought perhaps he needed ""a little dose of sociopath-ness.""","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","Y ou'll either end up rich, 
in which case problem solved, or the startup will get bought, in which case it it will start to suck 
to work there and it will be easy to leave, or most likely , the thing will blow up and you'll be free 
again.
Y our final advantage, ignorance, may not sound very useful. I deliberately used a controversial 
word for it; you might equally call it innocence. But it seems to be a powerful force. My Y 
Combinator co-founder Jessica Livingston is just about to publish a book of interviews with 
startup founders, and I noticed a remarkable pattern in them. One after another said that if 
they'd known how hard it would be, they would have been too intimidated to start.
Ignorance can be useful when it's a counterweight to other forms of stupidity . It's useful in 
starting startups because you're capable of more than you realize.","Which means the ambitious can now do arbitrage on them. It will 
be very valuable to understand precisely which ideas to keep and which can now be discarded.
The place to look is where the spread of smallness began: in the world of startups.
There have always been occasional cases, particularly in the US, of ambitious people who grew 
the ladder under them instead of climbing it. But till recently this was an anomalous route that 
tended to be followed only by outsiders. It was no coincidence that the great industrialists of the 
nineteenth century had so little formal education. As huge as their companies eventually 
became, they were all essentially mechanics and shopkeepers at first. That was a social step 
no one with a college education would take if they could avoid it. Till the rise of technology 
startups, and in particular, Internet startups, it was very unusual for educated people to start 
their own businesses.","I know this business well enough 
to know you can't do it half-heartedly . What makes a good startup founder so dangerous is his 
willingness to endure infinite schleps.
There is a bit of a problem with retirement, though. Like a lot of people, I like to work. And one 
of the many weird little problems you discover when you get rich is that a lot of the interesting 
people you'd like to work with are not rich. They need to work at something that pays the bills. 
Which means if you want to have them as colleagues, you have to work at something that pays 
the bills too, even though you don't need to. I think this is what drives a lot of serial 
entrepreneurs, actually .
That's why I love working on Y Combinator so much. It's an excuse to work on something 
interesting with people I like.
11.",0
"According to Paul Graham, what are the fundamental reasons that explain why most successful startups emerge from Silicon Valley instead of other locations?","And yet whatever argument you use to prove that 
startups don't need to move from London to Silicon Valley could equally well be used to prove 
startups don't need to move from smaller towns to London.
The difference between cities is a matter of degree. And if, as nearly everyone who knows 
agrees, startups are better off in Silicon Valley than Boston, then they're better off in Silicon 
Valley than everywhere else too.
I realize I might seem to have a vested interest in this conclusion, because startups that move 
to the US might do it through Y Combinator. But the American startups we've funded will attest 
that I say the same thing to them.
I'm not claiming of course that every startup has to go to Silicon Valley to succeed. Just that all 
other things being equal, the more of a startup hub a place is, the better startups will do there. 
But other considerations can outweigh the advantages of moving.","But ambition is human nature. 
Gradually it will re-emerge. [6]
How T o Do Better
I don't mean to suggest by this list that America is the perfect place for startups. It's the best 
place so far, but the sample size is small, and ""so far"" is not very long. On historical time scales, 
what we have now is just a prototype.
So let's look at Silicon Valley the way you'd look at a product made by a competitor. What 
weaknesses could you exploit? How could you make something users would like better? The 
users in this case are those critical few thousand people you'd like to move to your silicon valley .
T o start with, Silicon Valley is too far from San Francisco. Palo Alto, the original ground zero, is 
about thirty miles away , and the present center more like forty .","Y ou either have a self-sustaining chain reaction, or not. Observation confirms this 
too: cities either have a startup scene, or they don't. There is no middle ground. Chicago has 
the third largest metropolitan area in America. As source of startups it's negligible compared to 
Seattle, number 15.
The good news is that the initial seed can be quite small. Shockley Semiconductor, though itself 
not very successful, was big enough. It brought a critical mass of experts in an important new 
technology together in a place they liked enough to stay .
Competing
Of course, a would-be silicon valley faces an obstacle the original one didn't: it has to compete 
with Silicon Valley . Can that be done? Probably .
One of Silicon Valley's biggest advantages is its venture capital firms. This was not a factor in 
Shockley's day , because VC funds didn't exist.","Startups happen in clusters. There are a lot of them in Silicon Valley and Boston, and few in 
Chicago or Miami. A country that wants startups will probably also have to reproduce whatever 
makes these clusters form.
I've claimed that the recipe is a great university near a town smart people like. If you set up 
those conditions within the US, startups will form as inevitably as water droplets condense on a 
cold piece of metal. But when I consider what it would take to reproduce Silicon Valley in 
another country , it's clear the US is a particularly humid environment. Startups condense more 
easily here.
It is by no means a lost cause to try to create a silicon valley in another country . There's room 
not merely to equal Silicon Valley , but to surpass it. But if you want to do that, you have to 
understand the advantages startups get from being in America.
1.","And although the first may be 
weakening because it's now so cheap to start some startups, the second seems as strong as 
ever. Three of the most admired ""Web 2.0"" companies were started outside the usual startup 
hubs, but two of them have already been reeled in through acquisitions.
Such centralizing forces make it harder for new silicon valleys to get started. But by no means 
impossible. Ultimately power rests with the founders. A startup with the best people will beat 
one with funding from famous VCs, and a startup that was sufficiently successful would never 
have to move. So a town that could exert enough pull over the right people could resist and 
perhaps even surpass Silicon Valley .
For all its power, Silicon Valley has a great weakness: the paradise Shockley found in 1956 is 
now one giant parking lot. San Francisco and Berkeley are great, but they're forty miles away .","And you end up with better technology , 
created faster, because things are made in the innovative atmosphere of startups instead of the 
bureaucratic atmosphere of big companies.
Our startup, Viaweb, was built to be sold. We were open with investors about that from the start. 
And we were careful to create something that could slot easily into a larger company . That is 
the pattern for the future.
9. California
The Bubble was a California phenomenon. When I showed up in Silicon Valley in 1998, I felt like 
an immigrant from Eastern Europe arriving in America in 1900. Everyone was so cheerful and 
healthy and rich. It seemed a new and improved world.
The press, ever eager to exaggerate small trends, now gives one the impression that Silicon 
Valley is a ghost town. Not at all.","We just don't notice usually , 
because they only have to compete against other bureaucrats. But as startup investors they'd 
have to compete against pros with a great deal more experience and motivation.
Even corporations that have in-house VC groups generally forbid them to make their own 
investment decisions. Most are only allowed to invest in deals where some reputable private VC 
firm is willing to act as lead investor.
Not Buildings
If you go to see Silicon Valley , what you'll see are buildings. But it's the people that make it 
Silicon Valley , not the buildings. I read occasionally about attempts to set up ""technology parks"" 
in other places, as if the active ingredient of Silicon Valley were the office space. An article 
about Sophia Antipolis bragged that companies there included Cisco, Compaq, IBM, NCR, and 
Nortel. Don't the French realize these aren't startups?","Boston's case illustrates the difficulty you'd have establishing a new startup hub this late in the 
game. If you wanted to create a startup hub by reproducing the way existing ones happened, 
the way to do it would be to establish a first-rate research university in a place so nice that rich 
people wanted to live there. Then the town would be hospitable to both groups you need: both 
founders and investors. That's the combination that yielded Silicon Valley . But Silicon Valley 
didn't have Silicon Valley to compete with. If you tried now to create a startup hub by planting a 
great university in a nice place, it would have a harder time getting started, because many of 
the best startups it produced would be sucked away to existing startup hubs.
Recently I suggested a potential shortcut: pay startups to move. Once you had enough good 
startups in one place, it would create a self-sustaining chain reaction.","If I had to narrow that down, I'd say investors are the limiting factor. Not because they contribute 
more to the startup, but simply because they're least willing to move. They're rich. They're not 
going to move to Albuquerque just because there are some smart hackers there they could 
invest in. Whereas hackers will move to the Bay Area to find investors.
2. Angel investors are the most critical.
There are several types of investors. The two main categories are angels and VCs: VCs invest 
other people's money , and angels invest their own.
Though they're less well known, the angel investors are probably the more critical ingredient in 
creating a silicon valley . Most companies that VCs invest in would never have made it that far if 
angels hadn't invested first. VCs say between half and three quarters of companies that raise 
series A rounds have taken some outside investment already .","The first is that startups may represent a new economic phase, on the scale of the Industrial 
Revolution. I'm not sure of this, but there seems a decent chance it's true. People are 
dramatically more productive as founders or early employees of startupsâ€”imagine how much 
less Larry and Sergey would have achieved if they'd gone to work for a big companyâ€”and that 
scale of improvement can change social customs.
The second idea is that startups are a type of business that flourishes in certain places that 
specialize in itâ€”that Silicon Valley specializes in startups in the same way Los Angeles 
specializes in movies, or New Y ork in finance. [1]
What if both are true? What if startups are both a new economic phase and also a type of 
business that only flourishes in certain centers?
If so, this revolution is going to be particularly revolutionary . All previous revolutions have 
spread.",0
"What does Paul Graham mean when he discusses the importance of 'determination' in startup success, and how does he illustrate this point?","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","We've now watched the trajectories of so many 
startups that we're getting better at predicting them. And when we're talking about startups we 
think are likely to succeed, what we find ourselves saying is things like ""Oh, those guys can 
take care of themselves. They'll be fine."" Not ""those guys are really smart"" or ""those guys are 
working on a great idea."" [6] When we predict good outcomes for startups, the qualities that 
come up in the supporting arguments are toughness, adaptability , determination. Which means 
to the extent we're correct, those are the qualities you need to win.
Investors know this, at least unconsciously . The reason they like it when you don't need them is 
not simply that they like what they can't have, but because that quality is what makes founders 
succeed.
Sam Altman has it.","In a 
startup, as in grad school, a lot of what ends up driving you are the expectations of your family 
and friends. Once you start a startup and tell everyone that's what you're doing, you're now on 
a path labelled ""get rich or bust."" Y ou now have to get rich, or you've failed.
Fear of failure is an extraordinarily powerful force. Usually it prevents people from starting 
things, but once you publish some definite ambition, it switches directions and starts working in 
your favor. I think it's a pretty clever piece of jiujitsu to set this irresistible force against the 
slightly less immovable object of becoming rich. Y ou won't have it driving you if your stated 
ambition is merely to start a consulting company that you will one day morph into a startup.","We've always 
encouraged founders to see a startup idea as a hypothesis rather than a blueprint. And yet 
they're still surprised how well it works to change the idea. Normally if you complain about 
something being hard, the general advice is to work harder. With a startup, I think you should 
find a problem that's easy for you to solve. Optimizing in solution-space is familiar and 
straightforward, but you can make enormous gains playing around in problem-space. Whereas 
mere determination, without flexibility , is a greedy algorithm that may get you nothing more than 
a mediocre local maximum: When someone is determined, there's still a danger that they'll 
follow a long, hard path that ultimately leads nowhere. Y ou want to push forward, but at the 
same time twist and turn to find the most promising path. One founder put it very succinctly: 
Fast iteration is the key to success.","What I learned from meeting Sama is that the doctrine of the elect applies to startups. It applies 
way less than most people think: startup investing does not consist of trying to pick winners the 
way you might in a horse race. But there are a few people with such force of will that they're 
going to get whatever they want.
Relentlessly Resourceful - # 109
 Want to start a startup? Get funded by Y Combinator. 
 March 2009
A couple days ago I finally got being a good startup founder down to two words: relentlessly 
resourceful.
Till then the best I'd managed was to get the opposite quality down to one: hapless. Most 
dictionaries say hapless means unlucky . But the dictionaries are not doing a very good job.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","But the best people have 
other options. A mean person can't convince the best people to work for him unless he is super 
convincing. And while having the best people helps any organization, it's critical for startups.
There is also a complementary force at work: if you want to build great things, it helps to be 
driven by a spirit of benevolence. The startup founders who end up richest are not the ones 
driven by money . The ones driven by money take the big acquisition offer that nearly every 
successful startup gets en route. [1] The ones who keep going are driven by something else. 
They may not say so explicitly , but they're usually trying to improve the world. Which means 
people with a desire to improve the world have a natural advantage.","This principle is very powerful. It's why the best abstract painting still falls short of 
Leonardo, for example. And it applies to startups too. No idea for a product could ever be so 
clever as the ones you can discover by smashing a beam of prototypes into a beam of users.
5. Commitment Is a Self-Fulfilling Prophecy .
I now have enough experience with startups to be able to say what the most important quality is 
in a startup founder, and it's not what you might think. The most important quality in a startup 
founder is determination. Not intelligence-- determination.
This is a little depressing. I'd like to believe Viaweb succeeded because we were smart, not 
merely determined. A lot of people in the startup world want to believe that. Not just founders, 
but investors too. They like the idea of inhabiting a world ruled by intelligence.","And 
then I thought: how much does it mean even now?
It turns out I have a lot of data about that. My three partners and I run a seed stage investment 
firm called Y Combinator. We invest when the company is just a couple guys and an idea. The 
idea doesn't matter much; it will change anyway . Most of our decision is based on the founders. 
The average founder is three years out of college. Many have just graduated; a few are still in 
school. So we're in much the same position as a graduate program, or a company hiring people 
right out of college. Except our choices are immediately and visibly tested. There are two 
possible outcomes for a startup: success or failureâ€”and usually you know within a year which it 
will be.
The test applied to a startup is among the purest of real world tests.",0
"Which essay written by Paul Graham outlines the eighteen mistakes that can lead to startup failures, and what are some of those mistakes?","The 18 Mistakes That Kill Startups - # 68
 Want to start a startup? Get funded by Y Combinator. 
 October 2006
In the Q & A period after a recent talk, someone asked what made startups fail. After standing 
there gaping for a few seconds I realized this was kind of a trick question. It's equivalent to 
asking how to make a startup succeed â€” if you avoid every cause of failure, you succeed â€” 
and that's too big a question to answer on the fly .
Afterwards I realized it could be helpful to look at the problem from this direction. If you have a 
list of all the things you shouldn't do, you can turn that into a recipe for succeeding just by 
negating. And this form of list may be more useful in practice. It's easier to catch yourself doing 
something you shouldn't than always to remember to do something you should.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","Mark Zuckerberg didn't succeed because he was an 
expert on startups. He succeeded despite being a complete noob at startups, because he 
understood his users really well.
If you don't know anything about, say , how to raise an angel round, don't feel bad on that 
account. That sort of thing you can learn when you need to, and forget after you've done it.
In fact, I worry it's not merely unnecessary to learn in great detail about the mechanics of 
startups, but possibly somewhat dangerous. If I met an undergrad who knew all about 
convertible notes and employee agreements and (God forbid) class FF stock, I wouldn't think 
""here is someone who is way ahead of their peers."" It would set off alarms. Because another of 
the characteristic mistakes of young founders is to go through the motions of starting a startup.","Y ou should always get a personal introductionâ€”and to a partner, not an associate.
[3] Several people have told us that the most valuable thing about startup school was that they got to see famous 
startup founders and realized they were just ordinary guys. Though we're happy to provide this service, this is not 
generally the way we pitch startup school to potential speakers.
[4] Actually this sounds to me like a VC who got buyer's remorse, then used a technicality to get out of the deal. But 
it's telling that it even seemed a plausible excuse.
Thanks to Sam Altman, Paul Buchheit, Hutch Fishman, and Robert Morris for reading drafts of this, and to Kenneth 
King of ASES for inviting me to speak.
 Comment on this essay .
T wo Kinds of Judgement - # 74
April 2007
There are two different ways people judge you.","6. That the speakers at YC were so consistent in their advice.
Actually , I've noticed this too. I always worry the speakers will put us in an embarrassing 
position by contradicting what we tell the startups, but it happens surprisingly rarely .
When I asked her what specific things she remembered speakers always saying, she 
mentioned: that the way to succeed was to launch something fast, listen to users, and then 
iterate; that startups required resilience because they were always an emotional rollercoaster; 
and that most VCs were sheep.
I've been impressed by how consistently the speakers advocate launching fast and iterating. 
That was contrarian advice 10 years ago, but it's clearly now the established practice.
7. How casual successful startup founders are.
Most of the famous founders in Silicon Valley are people you'd overlook on the street. It's not 
merely that they don't dress up.","Don't suppress misgivings. It's much easier to fix problems before the company is started than 
after. So don't include your housemate in your startup because he'd feel left out otherwise. 
Don't start a company with someone you dislike because they have some skill you need and 
you worry you won't find anyone else. The people are the most important ingredient in a 
startup, so don't compromise there.
18. A Half-Hearted Effort
The failed startups you hear most about are the spectacular flameouts. Those are actually the 
elite of failures. The most common type is not the one that makes spectacular mistakes, but the 
one that doesn't do much of anything â€” the one we never even hear about, because it was 
some project a couple guys started on the side while working on their day jobs, but which never 
got anywhere and was gradually abandoned.","Unfortunately the constraint probably has to be self-imposed. If you're expected to do more 
with less, then you're being starved, not eating virtuously .
[6] Without the prospect of publication, the closest most people come to writing essays is to write in a journal. I find I 
never get as deeply into subjects as I do in proper essays. As the name implies, you don't go back and rewrite journal 
entries over and over for two weeks.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Sarah Harlin, Jessica Livingston, Jackie McDonough, 
Robert Morris, Olin Shivers, and Chris Small for reading drafts of this, and to Chris Small and Chad Fowler for 
inviting me to speak. 
Why Startups Condense in America - # 62
May 2006
(This essay is derived from a keynote at Xtech.)
Startups happen in clusters.","Startups are as unnatural as skiing, so there's a similar list for startups. Here I'm going to give 
you the first part of it â€” the things to remember if you want to prepare yourself to start a startup.
Counterintuitive
The first item on it is the fact I already mentioned: that startups are so weird that if you trust 
your instincts, you'll make a lot of mistakes. If you know nothing more than this, you may at least 
pause before making them.
When I was running Y Combinator I used to joke that our function was to tell founders things 
they would ignore. It's really true. Batch after batch, the YC partners warn founders about 
mistakes they're about to make, and the founders ignore them, and then come back a year later 
and say ""I wish we'd listened.""
Why do the founders ignore the partners' advice?","[1]
In a sense there's just one mistake that kills startups: not making something users want. If you 
make something users want, you'll probably be fine, whatever else you do or don't do. And if 
you don't make something users want, then you're dead, whatever else you do or don't do. So 
really this is a list of 18 things that cause startups not to make something users want. Nearly all 
failure funnels through that.
1. Single Founder
Have you ever noticed how few successful startups were founded by just one person? Even 
companies you think of as having one founder, like Oracle, usually turn out to have more. It 
seems unlikely this is a coincidence.
What's wrong with having one founder? T o start with, it's a vote of no confidence.","They always get things wrong. 
It's even ok if investors dismiss your startup; they'll change their minds when they see growth. 
The big danger is that you'll dismiss your startup yourself. I've seen it happen. I often have to 
encourage founders who don't see the full potential of what they're building. Even Bill Gates 
made that mistake. He returned to Harvard for the fall semester after starting Microsoft. He 
didn't stay long, but he wouldn't have returned at all if he'd realized Microsoft was going to be 
even a fraction of the size it turned out to be. [4]
The question to ask about an early stage startup is not ""is this company taking over the world?"" 
but ""how big could this company get if the founders did the right things?"" And the right things 
often seem both laborious and inconsequential at the time.",0
"What are the primary characteristics Paul Graham associates with successful startup founders, and how does he distinguish them from average entrepreneurs?","I grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a 
man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising 
power, and isn't too fussy about how. As I've written before, one of the things that has surprised 
me most about startups is how few of the most successful founders are like that. Maybe 
successful people in other industries are; I don't know; but not startup founders. [1]
I knew this empirically , but I never saw the math of why till I got this founder's email. In it he said 
he worried that he was fundamentally soft-hearted and tended to give away too much for free. 
He thought perhaps he needed ""a little dose of sociopath-ness.""","If you 
can recognize good startup founders by empathizing with themâ€”if you both resonate at the 
same frequencyâ€”then you may already be a better startup picker than the median professional 
VC. [8]
Paul Buchheit, for example, started angel investing about a year after me, and he was pretty 
much immediately as good as me at picking startups. My extra year of experience was rounding 
error compared to our ability to empathize with founders.
What makes a good founder? If there were a word that meant the opposite of hapless, that 
would be the one. Bad founders seem hapless. They may be smart, or not, but somehow events 
overwhelm them and they get discouraged and give up. Good founders make things happen the 
way they want. Which is not to say they force things to happen in a predefined way . Good 
founders have a healthy respect for reality .","The 
banks now had to find someone else to lend to, so they made more margin loans.
[15] Even now it's hard to get them to. One of the things I find hardest to get into the heads of would-be startup 
founders is how important it is to do certain kinds of menial work early in the life of a company . Doing things that don't 
scale is to how Henry Ford got started as a high-fiber diet is to the traditional peasant's diet: they had no choice but 
to do the right thing, while we have to make a conscious effort.
[16] Founders weren't celebrated in the press when I was a kid. ""Our founder"" meant a photograph of a severe-
looking man with a walrus mustache and a wing collar who had died decades ago. The thing to be when I was a kid 
was an executive.","When 
founders can do lots of startups, they can start to look at the world in the same portfolio-
optimizing way as investors. And that means the overall amount of wealth created can be 
greater, because strategies can be riskier.
5. Y ounger, Nerdier Founders
If startups become a cheap commodity , more people will be able to have them, just as more 
people could have computers once microprocessors made them cheap. And in particular, 
younger and more technical founders will be able to start startups than could before.
Back when it cost a lot to start a startup, you had to convince investors to let you do it. And that 
required very different skills from actually doing the startup. If investors were perfect judges, the 
two would require exactly the same skills. But unfortunately most investors are terrible judges.","Now he's cofounder of a startup called Friendfeed. It's only a year old, but already everyone in 
the Valley is watching them. Someone responsible for three of the biggest ideas at Google is 
going to come up with more.
5. Sam Altman
I was told I shouldn't mention founders of YC-funded companies in this list. But Sam Altman 
can't be stopped by such flimsy rules. If he wants to be on this list, he's going to be.
Honestly , Sam is, along with Steve Jobs, the founder I refer to most when I'm advising startups. 
On questions of design, I ask ""What would Steve do?"" but on questions of strategy or ambition I 
ask ""What would Sama do?""
What I learned from meeting Sama is that the doctrine of the elect applies to startups.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","Getting work makes him a successful actor, but he doesn't only become an 
actor when he's successful.
So the real question is not what growth rate makes a company a startup, but what growth rate 
successful startups tend to have. For founders that's more than a theoretical question, because 
it's equivalent to asking if they're on the right path.
The growth of a successful startup usually has three phases: There's an initial period of slow or 
no growth while the startup tries to figure out what it's doing.
 As the startup figures out how to make something lots of people want and how to reach those 
people, there's a period of rapid growth.
 Eventually a successful startup will grow into a big company . Growth will slow, partly due to 
internal limits and partly because the company is starting to bump up against the limits of the 
markets it serves. [5] T ogether these three phases produce an S-curve.","Who do I use as examples when I'm talking to 
companies we fund? Who do I find myself quoting?
1. Steve Jobs
I'd guess Steve is the most influential founder not just for me but for most people you could ask. 
A lot of startup culture is Apple culture. He was the original young founder. And while the 
concept of ""insanely great"" already existed in the arts, it was a novel idea to introduce into a 
company in the 1980s.
More remarkable still, he's stayed interesting for 30 years. People await new Apple products the 
way they'd await new books by a popular novelist. Steve may not literally design them, but they 
wouldn't happen if he weren't CEO.
Steve is clever and driven, but so are a lot of people in the Valley . What makes him unique is his 
sense of design.","T o start with, it's a vote of no confidence. It probably 
means the founder couldn't talk any of his friends into starting the company with him. That's 
pretty alarming, because his friends are the ones who know him best.
But even if the founder's friends were all wrong and the company is a good bet, he's still at a 
disadvantage. Starting a startup is too hard for one person. Even if you could do all the work 
yourself, you need colleagues to brainstorm with, to talk you out of stupid decisions, and to 
cheer you up when things go wrong.
The last one might be the most important. The low points in a startup are so low that few could 
bear them alone. When you have multiple founders, esprit de corps binds them together in a 
way that seems to violate conservation laws. Each thinks ""I can't let my friends down.""","Those turn out to be questions worth examining.
Plus
If you start a startup soon after college, you'll be a young founder by present standards, so you 
should know what the relative advantages of young founders are. They're not what you might 
think. As a young founder your strengths are: stamina, poverty , rootlessness, colleagues, and 
ignorance.
The importance of stamina shouldn't be surprising. If you've heard anything about startups 
you've probably heard about the long hours. As far as I can tell these are universal. I can't think 
of any successful startups whose founders worked 9 to 5. And it's particularly necessary for 
younger founders to work long hours because they're probably not as efficient as they'll be later.
Y our second advantage, poverty , might not sound like an advantage, but it is a huge one.",0
"How does Paul Graham differentiate between the concepts of being rich and being wealthy, and why does he believe this distinction matters?","Getting rich means you can stop treading water.
Someone who gets this will work much harder at making a startup succeedâ€”with the proverbial 
energy of a drowning man, in fact. But understanding the relationship between money and work 
also changes the way you work. Y ou don't get money just for working, but for doing things other 
people want. Someone who's figured that out will automatically focus more on the user. And 
that cures the other half of the class-project syndrome. After you've been working for a while, 
you yourself tend to measure what you've done the same way the market does.
Of course, you don't have to spend years working to learn this stuff. If you're sufficiently 
perceptive you can grasp these things while you're still in school. Sam Altman did. He must 
have, because Loopt is no class project.","There are a lot of ways to get rich, and this essay is about only one of them. This essay is about 
how to make money by creating wealth and getting paid for it. There are plenty of other ways to 
get money , including chance, speculation, marriage, inheritance, theft, extortion, fraud, 
monopoly , graft, lobbying, counterfeiting, and prospecting. Most of the greatest fortunes have 
probably involved several of these.
The advantage of creating wealth, as a way to get rich, is not just that it's more legitimate (many 
of the other methods are now illegal) but that it's more straightforward. Y ou just have to do 
something people want.
Money Is Not Wealth
If you want to create wealth, it will help to understand what it is. Wealth is not the same thing as 
money . [3] Wealth is as old as human history .","[3] Wealth is as old as human history . Far older, in fact; ants have wealth. Money is a 
comparatively recent invention.
Wealth is the fundamental thing. Wealth is stuff we want: food, clothes, houses, cars, gadgets, 
travel to interesting places, and so on. Y ou can have wealth without having money . If you had a 
magic machine that could on command make you a car or cook you dinner or do your laundry , 
or do anything else you wanted, you wouldn't need money . Whereas if you were in the middle of 
Antarctica, where there is nothing to buy , it wouldn't matter how much money you had.
Wealth is what you want, not money . But if wealth is the important thing, why does everyone 
talk about making money?","[11] By the nineteenth century that had 
changed. There continued to be bribes, as there still are everywhere, but politics had by then 
been left to men who were driven more by vanity than greed. T echnology had made it possible 
to create wealth faster than you could steal it. The prototypical rich man of the nineteenth 
century was not a courtier but an industrialist.
With the rise of the middle class, wealth stopped being a zero-sum game. Jobs and Wozniak 
didn't have to make us poor to make themselves rich. Quite the opposite: they created things 
that made our lives materially richer. They had to, or we wouldn't have paid for them.
But since for most of the world's history the main route to wealth was to steal it, we tend to be 
suspicious of rich people.","Money is just a convenient way of trading one form of wealth for 
another. Wealth is the underlying stuffâ€”the goods and services we buy . When you travel to a 
rich or poor country , you don't have to look at people's bank accounts to tell which kind you're 
in. Y ou can see wealthâ€”in buildings and streets, in the clothes and the health of the people.
Where does wealth come from? People make it. This was easier to grasp when most people 
lived on farms, and made many of the things they wanted with their own hands. Then you could 
see in the house, the herds, and the granary the wealth that each family created. It was obvious 
then too that the wealth of the world was not a fixed quantity that had to be shared out, like 
slices of a pie. If you wanted more wealth, you could make it.","Money is not wealth. It's just 
something we use to move wealth around. So although there may be, in certain specific 
moments (like your family , this month) a fixed amount of money available to trade with other 
people for things you want, there is not a fixed amount of wealth in the world. Y ou can make 
more wealth. Wealth has been getting created and destroyed (but on balance, created) for all of 
human history .
Suppose you own a beat-up old car. Instead of sitting on your butt next summer, you could 
spend the time restoring your car to pristine condition. In doing so you create wealth. The world 
is-- and you specifically are-- one pristine old car the richer. And not just in some metaphorical 
way . If you sell your car, you'll get more for it.
In restoring your old car you have made yourself richer.","He might only be a few times richer than you, and it would still be just as 
much of a problem that your water was getting turned off.
Closely related to poverty is lack of social mobility . I've seen this myself: you don't have to grow 
up rich or even upper middle class to get rich as a startup founder, but few successful founders 
grew up desperately poor. But again, the problem here is not simply economic inequality . There 
is an enormous difference in wealth between the household Larry Page grew up in and that of a 
successful startup founder, but that didn't prevent him from joining their ranks. It's not economic 
inequality per se that's blocking social mobility , but some specific combination of things that go 
wrong when kids grow up sufficiently poor.
One of the most important principles in Silicon Valley is that ""you make what you measure.""","Government.
The advantage of a medium of exchange is that it makes trade work. The disadvantage is that it 
tends to obscure what trade really means. People think that what a business does is make 
money . But money is just the intermediate stage-- just a shorthand-- for whatever people want. 
What most businesses really do is make wealth. They do something people want. [4]
The Pie Fallacy
A surprising number of people retain from childhood the idea that there is a fixed amount of 
wealth in the world. There is, in any normal family , a fixed amount of money at any moment. But 
that's not the same thing.
When wealth is talked about in this context, it is often described as a pie. ""Y ou can't make the 
pie larger,"" say politicians.","The most naive version of which is the one based on the pie fallacy: that the rich 
get rich by taking money from the poor.
Usually this is an assumption people start from rather than a conclusion they arrive at by 
examining the evidence. Sometimes the pie fallacy is stated explicitly: ...those at the top are 
grabbing an increasing fraction of the nation's income â€” so much of a larger share that what's 
left over for the rest is diminished.... [1] Other times it's more unconscious. But the unconscious 
form is very widespread. I think because we grow up in a world where the pie fallacy is actually 
true. T o kids, wealth is a fixed pie that's shared out, and if one person gets more, it's at the 
expense of another. It takes a conscious effort to remind oneself that the real world doesn't 
work that way .","It takes a conscious effort to remind oneself that the real world doesn't 
work that way .
In the real world you can create wealth as well as taking it from others. A woodworker creates 
wealth. He makes a chair, and you willingly give him money in return for it. A high-frequency 
trader does not. He makes a dollar only when someone on the other end of a trade loses a 
dollar.
If the rich people in a society got that way by taking wealth from the poor, then you have the 
degenerate case of economic inequality , where the cause of poverty is the same as the cause 
of wealth. But instances of inequality don't have to be instances of the degenerate case. If one 
woodworker makes 5 chairs and another makes none, the second woodworker will have less 
money , but not because anyone took anything from him.",0
"How does Paul Graham compare the work of hackers to painters, and what similarities does he highlight between programming and creative arts?","Hackers and Painters - # 23
May 2003
(This essay is derived from a guest lecture at Harvard, which incorporated an earlier talk at 
Northeastern.)
When I finished grad school in computer science I went to art school to study painting. A lot of 
people seemed surprised that someone interested in computers would also be interested in 
painting. They seemed to think that hacking and painting were very different kinds of work-- that 
hacking was cold, precise, and methodical, and that painting was the frenzied expression of 
some primal urge.
Both of these images are wrong. Hacking and painting have a lot in common. In fact, of all the 
different types of people I've known, hackers and painters are among the most alike.
What hackers and painters have in common is that they're both makers.","Y ou learn to paint mostly by doing it. Ditto for hacking. Most hackers don't learn to hack by 
taking college courses in programming. They learn to hack by writing programs of their own at 
age thirteen. Even in college classes, you learn to hack mostly by hacking. [3]
Because painters leave a trail of work behind them, you can watch them learn by doing. If you 
look at the work of a painter in chronological order, you'll find that each painting builds on things 
that have been learned in previous ones. When there's something in a painting that works very 
well, you can usually find version 1 of it in a smaller form in some earlier painting.
I think most makers work this way . Writers and architects seem to as well.","What hackers and painters have in common is that they're both makers. Along with composers, 
architects, and writers, what hackers and painters are trying to do is make good things. They're 
not doing research per se, though if in the course of trying to make good things they discover 
some new technique, so much the better.
I've never liked the term ""computer science."" The main reason I don't like it is that there's no 
such thing. Computer science is a grab bag of tenuously related areas thrown together by an 
accident of history , like Y ugoslavia. At one end you have people who are really mathematicians, 
but call what they're doing computer science so they can get DARP A grants. In the middle you 
have people working on something like the natural history of computers-- studying the behavior 
of algorithms for routing data through networks, for example.","It seems surprising to me that any employer would be reluctant to let hackers work on open-
source projects. At Viaweb, we would have been reluctant to hire anyone who didn't. When we 
interviewed programmers, the main thing we cared about was what kind of software they wrote 
in their spare time. Y ou can't do anything really well unless you love it, and if you love to hack 
you'll inevitably be working on projects of your own. [2]
Because hackers are makers rather than scientists, the right place to look for metaphors is not 
in the sciences, but among other kinds of makers. What else can painting teach us about 
hacking?
One thing we can learn, or at least confirm, from the example of painting is how to learn to 
hack. Y ou learn to paint mostly by doing it. Ditto for hacking.","So 
hackers start original, and get good, and scientists start good, and get original.
The other way makers learn is from examples. For a painter, a museum is a reference library of 
techniques. For hundreds of years it has been part of the traditional education of painters to 
copy the works of the great masters, because copying forces you to look closely at the way a 
painting is made.
Writers do this too. Benjamin Franklin learned to write by summarizing the points in the essays 
of Addison and Steele and then trying to reproduce them. Raymond Chandler did the same 
thing with detective stories.
Hackers, likewise, can learn to program by looking at good programs-- not just at what they do, 
but the source code too. One of the less publicized benefits of the open-source movement is 
that it has made it easier to learn to program.","Albrecht Durer did 
the same thing with engraving, and Jane Austen with the novel.
Over and over we see the same pattern. A new medium appears, and people are so excited 
about it that they explore most of its possibilities in the first couple generations. Hacking seems 
to be in this phase now.
Painting was not, in Leonardo's time, as cool as his work helped make it. How cool hacking 
turns out to be will depend on what we can do with this new medium. 
Notes:
[1] The greatest damage that photography has done to painting may be the fact that it killed the best day job. Most of 
the great painters in history supported themselves by painting portraits. 
[2] I've been told that Microsoft discourages employees from contributing to open-source projects, even in their spare 
time.","Painters in fact have to remember a good deal more about paint chemistry than that.
I've found that the best sources of ideas are not the other fields that have the word ""computer"" 
in their names, but the other fields inhabited by makers. Painting has been a much richer 
source of ideas than the theory of computation.
For example, I was taught in college that one ought to figure out a program completely on paper 
before even going near a computer. I found that I did not program this way . I found that I liked to 
program sitting in front of a computer, not a piece of paper. Worse still, instead of patiently 
writing out a complete program and assuring myself it was correct, I tended to just spew out 
code that was hopelessly broken, and gradually beat it into shape. Debugging, I was taught, 
was a kind of final pass where you caught typos and oversights.","At the time, no one thought these paintings were as important as we do 
today . It would have seemed very odd to people at the time that Federico da Montefeltro, the 
Duke of Urbino, would one day be known mostly as the guy with the strange nose in a painting 
by Piero della Francesca.
So while I admit that hacking doesn't seem as cool as painting now, we should remember that 
painting itself didn't seem as cool in its glory days as it does now.
What we can say with some confidence is that these are the glory days of hacking. In most 
fields the great work is done early on. The paintings made between 1430 and 1500 are still 
unsurpassed. Shakespeare appeared just as professional theater was being born, and pushed 
the medium so far that every playwright since has had to live in his shadow.","And then at the other extreme you 
have the hackers, who are trying to write interesting software, and for whom computers are just 
a medium of expression, as concrete is for architects or paint for painters. It's as if 
mathematicians, physicists, and architects all had to be in the same department.
Sometimes what the hackers do is called ""software engineering,"" but this term is just as 
misleading. Good software designers are no more engineers than architects are. The border 
between architecture and engineering is not sharply defined, but it's there. It falls between what 
and how: architects decide what to do, and engineers figure out how to do it.
What and how should not be kept too separate. Y ou're asking for trouble if you try to decide 
what to do without understanding how to do it. But hacking can certainly be more than just 
deciding how to implement some spec.","Leonardo was an apprentice in the workshop 
of Verrocchio and painted one of the angels in his Baptism of Christ. This sort of thing was the 
rule, not the exception. Michelangelo was considered especially dedicated for insisting on 
painting all the figures on the ceiling of the Sistine Chapel himself.
As far as I know, when painters worked together on a painting, they never worked on the same 
parts. It was common for the master to paint the principal figures and for assistants to paint the 
others and the background. But you never had one guy painting over the work of another.
I think this is the right model for collaboration in software too. Don't push it too far. When a piece 
of code is being hacked by three or four different people, no one of whom really owns it, it will 
end up being like a common-room.",0
"What is Paul Grahamâ€™s reasoning for advising startups to focus on growth rather than early revenue, and what examples does he use to support this?","Fundamentally that's how the most successful startups view fundraising. 
They could grow the company on its own revenues, but the extra money and help supplied by 
VCs will let them grow even faster. Raising money lets you choose your growth rate.
Money to grow faster is always at the command of the most successful startups, because the 
VCs need them more than they need the VCs. A profitable startup could if it wanted just grow 
on its own revenues. Growing slower might be slightly dangerous, but chances are it wouldn't 
kill them. Whereas VCs need to invest in startups, and in particular the most successful 
startups, or they'll be out of business. Which means that any sufficiently promising startup will 
be offered money on terms they'd be crazy to refuse. And yet because of the scale of the 
successes in the startup business, VCs can still make money from such investments.","The founders can't enrich themselves without also 
enriching the investors. [12]
Why do founders want to take the VCs' money? Growth, again. The constraint between good 
ideas and growth operates in both directions. It's not merely that you need a scalable idea to 
grow. If you have such an idea and don't grow fast enough, competitors will. Growing too slowly 
is particularly dangerous in a business with network effects, which the best startups usually 
have to some degree.
Almost every company needs some amount of funding to get started. But startups often raise 
money even when they are or could be profitable. It might seem foolish to sell stock in a 
profitable company for less than you think it will later be worth, but it's no more foolish than 
buying insurance. Fundamentally that's how the most successful startups view fundraising.","Founders are your customers, and the things they complain about are unsatisfied demand. I've 
given two examples of things founders complain about mostâ€”investors who take too long to 
make up their minds, and excessive dilution in series A roundsâ€”so those are good places to 
look now. But the more general recipe is: do something founders want.
Notes:
[1] I realize revenue and not fundraising is the proper test of success for a startup. The reason we quote statistics 
about fundraising is because those are the numbers we have. We couldn't talk meaningfully about revenues without 
including the numbers from the most successful startups, and we don't have those. We often discuss revenue growth 
with the earlier stage startups, because that's how we gauge their progress, but when companies reach a certain 
size it gets presumptuous for a seed investor to do that.","Growth is why VCs want to invest in startups: not just because the returns are high but also 
because generating returns from capital gains is easier to manage than generating returns from 
dividends. Growth explains why the most successful startups take VC money even if they don't 
need to: it lets them choose their growth rate. And growth explains why successful startups 
almost invariably get acquisition offers. T o acquirers a fast-growing company is not merely 
valuable but dangerous too.
It's not just that if you want to succeed in some domain, you have to understand the forces 
driving it. Understanding growth is what starting a startup consists of. What you're really doing 
(and to the dismay of some observers, all you're really doing) when you start a startup is 
committing to solve a harder type of problem than ordinary businesses do.","They could end up on a local 
maximum. But in practice that never happens. Having to hit a growth number every week forces 
founders to act, and acting versus not acting is the high bit of succeeding. Nine times out of ten, 
sitting around strategizing is just a form of procrastination. Whereas founders' intuitions about 
which hill to climb are usually better than they realize. Plus the maxima in the space of startup 
ideas are not spiky and isolated. Most fairly good ideas are adjacent to even better ones.
The fascinating thing about optimizing for growth is that it can actually discover startup ideas. 
Y ou can use the need for growth as a form of evolutionary pressure. If you start out with some 
initial plan and modify it as necessary to keep hitting, say , 10% weekly growth, you may end up 
with a quite different company than you meant to start.","[8] Within YC when we say it's ipso facto right to do whatever gets you growth, it's implicit that this excludes trickery 
like buying users for more than their lifetime value, counting users as active when they're really not, bleeding out 
invites at a regularly increasing rate to manufacture a perfect growth curve, etc. Even if you were able to fool 
investors with such tricks, you'd ultimately be hurting yourself, because you're throwing off your own compass.
[9] Which is why it's such a dangerous mistake to believe that successful startups are simply the embodiment of 
some brilliant initial idea. What you're looking for initially is not so much a great idea as an idea that could evolve into 
a great one. The danger is that promising ideas are not merely blurry versions of great ones.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","When 
founders can do lots of startups, they can start to look at the world in the same portfolio-
optimizing way as investors. And that means the overall amount of wealth created can be 
greater, because strategies can be riskier.
5. Y ounger, Nerdier Founders
If startups become a cheap commodity , more people will be able to have them, just as more 
people could have computers once microprocessors made them cheap. And in particular, 
younger and more technical founders will be able to start startups than could before.
Back when it cost a lot to start a startup, you had to convince investors to let you do it. And that 
required very different skills from actually doing the startup. If investors were perfect judges, the 
two would require exactly the same skills. But unfortunately most investors are terrible judges.","Getting work makes him a successful actor, but he doesn't only become an 
actor when he's successful.
So the real question is not what growth rate makes a company a startup, but what growth rate 
successful startups tend to have. For founders that's more than a theoretical question, because 
it's equivalent to asking if they're on the right path.
The growth of a successful startup usually has three phases: There's an initial period of slow or 
no growth while the startup tries to figure out what it's doing.
 As the startup figures out how to make something lots of people want and how to reach those 
people, there's a period of rapid growth.
 Eventually a successful startup will grow into a big company . Growth will slow, partly due to 
internal limits and partly because the company is starting to bump up against the limits of the 
markets it serves. [5] T ogether these three phases produce an S-curve.","Even if you could trick VCs into investing in a bad startup, you'd be tricking 
yourselves too. Y ou're investing time in the same company you're asking them to invest money 
in. If it's not a good investment, why are you even doing it?
Oh, they'd say , and then after a pause to digest this revelation, they'd ask: What makes a 
startup a good investment?
So I would explain that what makes a startup promising, not just in the eyes of investors but in 
fact, is growth. Ideally in revenue, but failing that in usage. What they needed to do was get lots 
of users.
How does one get lots of users? They had all kinds of ideas about that. They needed to do a 
big launch that would get them ""exposure."" They needed influential people to talk about them.",0
"How does Paul Graham describe the significance of 'taste' in evaluating good startup ideas, and what role does intuition play in his framework?","We've now watched the trajectories of so many 
startups that we're getting better at predicting them. And when we're talking about startups we 
think are likely to succeed, what we find ourselves saying is things like ""Oh, those guys can 
take care of themselves. They'll be fine."" Not ""those guys are really smart"" or ""those guys are 
working on a great idea."" [6] When we predict good outcomes for startups, the qualities that 
come up in the supporting arguments are toughness, adaptability , determination. Which means 
to the extent we're correct, those are the qualities you need to win.
Investors know this, at least unconsciously . The reason they like it when you don't need them is 
not simply that they like what they can't have, but because that quality is what makes founders 
succeed.
Sam Altman has it.","One founder put it very succinctly: 
Fast iteration is the key to success. One reason this advice is so hard to follow is that people 
don't realize how hard it is to judge startup ideas, particularly their own. Experienced founders 
learn to keep an open mind: Now I don't laugh at ideas anymore, because I realized how 
terrible I was at knowing if they were good or not. Y ou can never tell what will work. Y ou just 
have to do whatever seems best at each point. We do this with YC itself. We still don't know if it 
will work, but it seems like a decent hypothesis.
11. Don't Worry about Competitors
When you think you've got a great idea, it's sort of like having a guilty conscience about 
something. All someone has to do is look at you funny , and you think ""Oh my God, they know.""","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","Of course, big companies won't be able to do everything these startups do. In big companies 
there's always going to be more politics, and less scope for individual decisions. But seeing 
what startups are really like will at least show other organizations what to aim for. The time may 
soon be coming when instead of startups trying to seem more corporate, corporations will try to 
seem more like startups. That would be a good thing.
Japanese T ranslation 
How Art Can Be Good - # 69
December 2006
I grew up believing that taste is just a matter of personal preference. Each person has things 
they like, but no one's preferences are any better than anyone else's. There is no such thing as 
good taste.
Like a lot of things I grew up believing, this turns out to be false, and I'm going to try to explain 
why .","If 
you're at the leading edge of a field that's changing rapidly , your ideas about what's sexy will be 
somewhat correlated with what's valuable in practice. Particularly as you get older and more 
experienced. Plus if you find an idea sexy , you'll work on it more enthusiastically . [13]
Recipes
While the best way to discover startup ideas is to become the sort of person who has them and 
then build whatever interests you, sometimes you don't have that luxury . Sometimes you need 
an idea now. For example, if you're working on a startup and your initial idea turns out to be bad.
For the rest of this essay I'll talk about tricks for coming up with startup ideas on demand. 
Although empirically you're better off using the organic strategy , you could succeed this way . 
Y ou just have to be more disciplined.","Y ou should always get a personal introductionâ€”and to a partner, not an associate.
[3] Several people have told us that the most valuable thing about startup school was that they got to see famous 
startup founders and realized they were just ordinary guys. Though we're happy to provide this service, this is not 
generally the way we pitch startup school to potential speakers.
[4] Actually this sounds to me like a VC who got buyer's remorse, then used a technicality to get out of the deal. But 
it's telling that it even seemed a plausible excuse.
Thanks to Sam Altman, Paul Buchheit, Hutch Fishman, and Robert Morris for reading drafts of this, and to Kenneth 
King of ASES for inviting me to speak.
 Comment on this essay .
T wo Kinds of Judgement - # 74
April 2007
There are two different ways people judge you.","Investors do more for startups than give them money . They're helpful in doing deals and 
arranging introductions, and some of the smarter ones, particularly angels, can give good 
advice about the product.
In fact, I'd say what separates the great investors from the mediocre ones is the quality of their 
advice. Most investors give advice, but the top ones give good advice.
Whatever help investors give a startup tends to be underestimated. It's to everyone's advantage 
to let the world think the founders thought of everything. The goal of the investors is for the 
company to become valuable, and the company seems more valuable if it seems like all the 
good ideas came from within.
This trend is compounded by the obsession that the press has with founders. In a company 
founded by two people, 10% of the ideas might come from the first guy they hire.","But you couldn't do the equivalent thing for startups, because by definition if the students did well they 
would never come back.
[7] Charles Darwin was 22 when he received an invitation to travel aboard the HMS Beagle as a naturalist. It was 
only because he was otherwise unoccupied, to a degree that alarmed his family , that he could accept it. And yet if he 
hadn't we probably would not know his name.
[8] Parents can sometimes be especially conservative in this department. There are some whose definition of 
important problems includes only those on the critical path to med school.
[9] I did manage to think of a heuristic for detecting whether you have a taste for interesting ideas: whether you find 
known boring ideas intolerable. Could you endure studying literary theory , or working in middle management at a 
large company?","That shows how 
much a mere idea is worth. The market price is less than the inconvenience of signing an NDA.
Another sign of how little the initial idea is worth is the number of startups that change their plan 
en route. Microsoft's original plan was to make money selling programming languages, of all 
things. Their current business model didn't occur to them until IBM dropped it in their lap five 
years later.
Ideas for startups are worth something, certainly , but the trouble is, they're not transferrable. 
They're not something you could hand to someone else to execute. Their value is mainly as 
starting points: as questions for the people who had them to continue thinking about.
What matters is not ideas, but the people who have them. Good people can fix bad ideas, but 
good ideas can't save bad people. 
People
What do I mean by good people?","What's special about startup ideas? 
Startup ideas are ideas for companies, and companies have to make money . And the way to 
make money is to make something people want.
Wealth is what people want. I don't mean that as some kind of philosophical statement; I mean 
it as a tautology .
So an idea for a startup is an idea for something people want. Wouldn't any good idea be 
something people want? Unfortunately not. I think new theorems are a fine thing to create, but 
there is no great demand for them. Whereas there appears to be great demand for celebrity 
gossip magazines. Wealth is defined democratically . Good ideas and valuable ideas are not 
quite the same thing; the difference is individual tastes.
But valuable ideas are very close to good ideas, especially in technology .",0
"Why does Paul Graham emphasize the concept of 'doing things that donâ€™t scale,' and how does this strategy contribute to the success of early startups?","Thanks to Marc Andreessen, Sam Altman, Patrick Collison, Ron Conway , Chris Dixon, Alfred Lin, Ben Horowitz, 
Steve Huffman, Jessica Livingston, Greg Mcadoo, Andrew Mason, Geoff Ralston, Y uri Sagalov, Emmett Shear, Rajat 
Suri, Garry T an, Albert Wenger, Fred Wilson, and Qasar Y ounis for reading drafts of this.
Do Things that Don-t Scale - # 152
 Want to start a startup? Get funded by Y Combinator. 
 July 2013
One of the most common types of advice we give at Y Combinator is to do things that don't 
scale. A lot of would-be founders believe that startups either take off or don't. Y ou build 
something, make it available, and if you've made a better mousetrap, people beat a path to your 
door as promised.","The 
banks now had to find someone else to lend to, so they made more margin loans.
[15] Even now it's hard to get them to. One of the things I find hardest to get into the heads of would-be startup 
founders is how important it is to do certain kinds of menial work early in the life of a company . Doing things that don't 
scale is to how Henry Ford got started as a high-fiber diet is to the traditional peasant's diet: they had no choice but 
to do the right thing, while we have to make a conscious effort.
[16] Founders weren't celebrated in the press when I was a kid. ""Our founder"" meant a photograph of a severe-
looking man with a walrus mustache and a wing collar who had died decades ago. The thing to be when I was a kid 
was an executive.","17. Large-scale investors care about their portfolio, not any individual company .
The reason startups work so well is that everyone with power also has equity . The only way any 
of them can succeed is if they all do. This makes everyone naturally pull in the same direction, 
subject to differences of opinion about tactics.
The problem is, larger scale investors don't have exactly the same motivation. Close, but not 
identical. They don't need any given startup to succeed, like founders do, just their portfolio as a 
whole to. So in borderline cases the rational thing for them to do is to sacrifice unpromising 
startups.
Large-scale investors tend to put startups in three categories: successes, failures, and the 
""living dead""â€”companies that are plugging along but don't seem likely in the immediate future 
to get bought or go public. T o the founders, ""living dead"" sounds harsh.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","They could end up on a local 
maximum. But in practice that never happens. Having to hit a growth number every week forces 
founders to act, and acting versus not acting is the high bit of succeeding. Nine times out of ten, 
sitting around strategizing is just a form of procrastination. Whereas founders' intuitions about 
which hill to climb are usually better than they realize. Plus the maxima in the space of startup 
ideas are not spiky and isolated. Most fairly good ideas are adjacent to even better ones.
The fascinating thing about optimizing for growth is that it can actually discover startup ideas. 
Y ou can use the need for growth as a form of evolutionary pressure. If you start out with some 
initial plan and modify it as necessary to keep hitting, say , 10% weekly growth, you may end up 
with a quite different company than you meant to start.","Which means the ambitious can now do arbitrage on them. It will 
be very valuable to understand precisely which ideas to keep and which can now be discarded.
The place to look is where the spread of smallness began: in the world of startups.
There have always been occasional cases, particularly in the US, of ambitious people who grew 
the ladder under them instead of climbing it. But till recently this was an anomalous route that 
tended to be followed only by outsiders. It was no coincidence that the great industrialists of the 
nineteenth century had so little formal education. As huge as their companies eventually 
became, they were all essentially mechanics and shopkeepers at first. That was a social step 
no one with a college education would take if they could avoid it. Till the rise of technology 
startups, and in particular, Internet startups, it was very unusual for educated people to start 
their own businesses.","But anything that grows consistently at 
10% a week is almost certainly a better idea than you started with.
There's a parallel here to small businesses. Just as the constraint of being located in a 
particular neighborhood helps define a bar, the constraint of growing at a certain rate can help 
define a startup.
Y ou'll generally do best to follow that constraint wherever it leads rather than being influenced 
by some initial vision, just as a scientist is better off following the truth wherever it leads rather 
than being influenced by what he wishes were the case. When Richard Feynman said that the 
imagination of nature was greater than the imagination of man, he meant that if you just keep 
following the truth you'll discover cooler things than you could ever have made up. For startups, 
growth is a constraint much like truth. Every successful startup is at least partly a product of the 
imagination of growth.","They had 
discovered an interesting new idea, and they just couldn't let it go.
Mundane as it sounds, that's the most powerful motivator of all, not just in startups, but in most 
ambitious undertakings: to be genuinely interested in what you're building. This is what really 
drives billionaires, or at least the ones who become billionaires from starting companies. The 
company is their project.
One thing few people realize about billionaires is that all of them could have stopped sooner. 
They could have gotten acquired, or found someone else to run the company . Many founders 
do. The ones who become really rich are the ones who keep working. And what makes them 
keep working is not just money . What keeps them working is the same thing that keeps anyone 
else working when they could stop if they wanted to: that there's nothing else they'd rather do.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.",0
"How does Paul Graham explain the role of network effects in startup success, and what examples does he provide to illustrate its impact?","Getting work makes him a successful actor, but he doesn't only become an 
actor when he's successful.
So the real question is not what growth rate makes a company a startup, but what growth rate 
successful startups tend to have. For founders that's more than a theoretical question, because 
it's equivalent to asking if they're on the right path.
The growth of a successful startup usually has three phases: There's an initial period of slow or 
no growth while the startup tries to figure out what it's doing.
 As the startup figures out how to make something lots of people want and how to reach those 
people, there's a period of rapid growth.
 Eventually a successful startup will grow into a big company . Growth will slow, partly due to 
internal limits and partly because the company is starting to bump up against the limits of the 
markets it serves. [5] T ogether these three phases produce an S-curve.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","I have no idea how wide this band is, but if the winner/borderline/
hopeless progression has the sort of distribution you'd expect, the number of people who could 
have made it, if they'd quit their day job, is probably an order of magnitude larger than the 
number who do make it. [13]
If that's true, most startups that could succeed fail because the founders don't devote their 
whole efforts to them. That certainly accords with what I see out in the world. Most startups fail 
because they don't make something people want, and the reason most don't is that they don't 
try hard enough.
In other words, starting startups is just like everything else. The biggest mistake you can make 
is not to try hard enough. T o the extent there's a secret to success, it's not to be in denial about 
that.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","One is a 
combination of shyness and laziness. They'd rather sit at home writing code than go out and 
talk to a bunch of strangers and probably be rejected by most of them. But for a startup to 
succeed, at least one founder (usually the CEO) will have to spend a lot of time on sales and 
marketing. [2]
The other reason founders ignore this path is that the absolute numbers seem so small at first. 
This can't be how the big, famous startups got started, they think. The mistake they make is to 
underestimate the power of compound growth. We encourage every startup to measure their 
progress by weekly growth rate. If you have 100 users, you need to get 10 more next week to 
grow 10% a week.","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","The two most important things to understand about startup investing, as a business, are (1) that 
effectively all the returns are concentrated in a few big winners, and (2) that the best ideas look 
initially like bad ideas.
The first rule I knew intellectually , but didn't really grasp till it happened to us. The total value of 
the companies we've funded is around 10 billion, give or take a few. But just two companies, 
Dropbox and Airbnb, account for about three quarters of it.
In startups, the big winners are big to a degree that violates our expectations about variation. I 
don't know whether these expectations are innate or learned, but whatever the cause, we are 
just not prepared for the 1000x variation in outcomes that one finds in startup investing.
That yields all sorts of strange consequences.","I grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a 
man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising 
power, and isn't too fussy about how. As I've written before, one of the things that has surprised 
me most about startups is how few of the most successful founders are like that. Maybe 
successful people in other industries are; I don't know; but not startup founders. [1]
I knew this empirically , but I never saw the math of why till I got this founder's email. In it he said 
he worried that he was fundamentally soft-hearted and tended to give away too much for free. 
He thought perhaps he needed ""a little dose of sociopath-ness.""","Nor did 
users, at that stage; they had no growth. But the founders seemed so full of energy that it was 
impossible not to like them.
That first impression was not misleading. During the batch our nickname for Brian Chesky was 
The T asmanian Devil, because like the cartoon character he seemed a tornado of energy . All 
three of them were like that. No one ever worked harder during YC than the Airbnbs did. When 
you talked to the Airbnbs, they took notes. If you suggested an idea to them in office hours, the 
next time you talked to them they'd not only have implemented it, but also implemented two new 
ideas they had in the process. ""They probably have the best attitude of any startup we've 
funded"" I wrote to Mike Arrington during the batch.
They're still like that.",0
What arguments does Paul Graham present in support of the idea that economic inequality can sometimes be beneficial for technological and economic growth?,"If you want to understand economic inequality â€” and more importantly , if you actually want to 
fix the bad aspects of it â€” you have to tease apart the components. And yet the trend in nearly 
everything written about the subject is to do the opposite: to squash together all the aspects of 
economic inequality as if it were a single phenomenon.
Sometimes this is done for ideological reasons. Sometimes it's because the writer only has very 
high-level data and so draws conclusions from that, like the proverbial drunk who looks for his 
keys under the lamppost, instead of where he dropped them, because the light is better there. 
Sometimes it's because the writer doesn't understand critical aspects of inequality , like the role 
of technology in wealth creation. Much of the time, perhaps most of the time, writing about 
economic inequality combines all three.
___
The most common mistake people make about economic inequality is to treat it as a single 
phenomenon.","One of the most important principles in Silicon Valley is that ""you make what you measure."" It 
means that if you pick some number to focus on, it will tend to improve, but that you have to 
choose the right number, because only the one you choose will improve; another that seems 
conceptually adjacent might not. For example, if you're a university president and you decide to 
focus on graduation rates, then you'll improve graduation rates. But only graduation rates, not 
how much students learn. Students could learn less, if to improve graduation rates you made 
classes easier.
Economic inequality is sufficiently far from identical with the various problems that have it as a 
symptom that we'll probably only hit whichever of the two we aim at. If we aim at economic 
inequality , we won't fix these problems. So I say let's aim at the problems.","Nearly everyone who writes about the topic says that economic 
inequality should be decreased.
I'm interested in this question because I was one of the founders of a company called Y 
Combinator that helps people start startups. Almost by definition, if a startup succeeds, its 
founders become rich. Which means by helping startup founders I've been helping to increase 
economic inequality . If economic inequality should be decreased, I shouldn't be helping 
founders. No one should be.
But that doesn't sound right. What's going on here? What's going on is that while economic 
inequality is a single measure (or more precisely , two: variation in income, and variation in 
wealth), it has multiple causes. Many of these causes are bad, like tax loopholes and drug 
addiction. But some are good, like Larry Page and Sergey Brin starting the company you use to 
find things online.","It seems to be a 
rule with them that everything has to start with statistics. So they give you very precise numbers 
about variation in wealth and income, then follow it with the most naive speculation about the 
underlying causes.
But while there are a lot of people who get rich through rent-seeking of various forms, and a lot 
who get rich by playing zero-sum games, there are also a significant number who get rich by 
creating wealth. And creating wealth, as a source of economic inequality , is different from taking 
it â€” not just morally , but also practically , in the sense that it is harder to eradicate. One reason 
is that variation in productivity is accelerating. The rate at which individuals can create wealth 
depends on the technology available to them, and that grows exponentially . The other reason 
creating wealth is such a tenacious source of inequality is that it can expand to accommodate a 
lot of people.","Investors mainly contribute money , which in principle is the same no matter what the source. 
But the founders contribute ideas. Y ou can't replace those.
Let's rehearse the chain of argument so far. I'm heading for a conclusion to which many readers 
will have to be dragged kicking and screaming, so I've tried to make each link unbreakable. 
Decreasing economic inequality means taking money from the rich. Since risk and reward are 
equivalent, decreasing potential rewards automatically decreases people's appetite for risk. 
Startups are intrinsically risky . Without the prospect of rewards proportionate to the risk, 
founders will not invest their time in a startup. Founders are irreplaceable. So eliminating 
economic inequality means eliminating startups.
Economic inequality is not just a consequence of startups. It's the engine that drives them, in 
the same way a fall of water drives a water mill.","People start startups in the hope of becoming 
much richer than they were before. And if your society tries to prevent anyone from being much 
richer than anyone else, it will also prevent one person from being much richer at t2 than t1.
Growth
This argument applies proportionately . It's not just that if you eliminate economic inequality , you 
get no startups. T o the extent you reduce economic inequality , you decrease the number of 
startups. [4] Increase taxes, and willingness to take risks decreases in proportion.
And that seems bad for everyone. New technology and new jobs both come disproportionately 
from new companies. Indeed, if you don't have startups, pretty soon you won't have established 
companies either, just as, if you stop having kids, pretty soon you won't have any adults.
It sounds benevolent to say we ought to reduce economic inequality .","It takes a conscious effort to remind oneself that the real world doesn't 
work that way .
In the real world you can create wealth as well as taking it from others. A woodworker creates 
wealth. He makes a chair, and you willingly give him money in return for it. A high-frequency 
trader does not. He makes a dollar only when someone on the other end of a trade loses a 
dollar.
If the rich people in a society got that way by taking wealth from the poor, then you have the 
degenerate case of economic inequality , where the cause of poverty is the same as the cause 
of wealth. But instances of inequality don't have to be instances of the degenerate case. If one 
woodworker makes 5 chairs and another makes none, the second woodworker will have less 
money , but not because anyone took anything from him.","But it's a significant 
cause, and it will become as big a cause as it needs to, in the sense that if you ban other ways to get rich, people 
who want to get rich will use this route instead.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Patrick Collison, Ron Conway , Chris Dixon, Benedict Evans, 
Richard Florida, Ben Horowitz, Jessica Livingston, Robert Morris, Tim O'Reilly , Geoff Ralston, Max Roser, Alexia 
Tsotsis, and Qasar Y ounis for reading drafts of this. Max also told me about several valuable sources.
Bibliography
Allen, Frederick Lewis. The Big Change. Harper, 1952.
Averitt, Robert. The Dual Economy . Norton, 1968.
Badger, Anthony . The New Deal. Hill and Wang, 1989.","But it was the same curve.
Y ou do not want to design your society in a way that's incompatible with this curve. The 
evolution of technology is one of the most powerful forces in history .
Louis Brandeis said ""We may have democracy , or we may have wealth concentrated in the 
hands of a few, but we can't have both."" That sounds plausible. But if I have to choose between 
ignoring him and ignoring an exponential curve that has been operating for thousands of years, 
I'll bet on the curve. Ignoring any trend that has been operating for thousands of years is 
dangerous. But exponential growth, especially , tends to bite you.
___
If accelerating variation in productivity is always going to produce some baseline growth in 
economic inequality , it would be a good idea to spend some time thinking about that future. Can 
you have a healthy society with great variation in wealth? What would it look like?","If we're determined to eliminate economic inequality , there is still one way out: we could say that 
we're willing to go ahead and do without startups. What would happen if we did?
At a minimum, we'd have to accept lower rates of technological growth. If you believe that large, 
established companies could somehow be made to develop new technology as fast as startups, 
the ball is in your court to explain how. (If you can come up with a remotely plausible story , you 
can make a fortune writing business books and consulting for large companies.) [5]
Ok, so we get slower growth. Is that so bad? Well, one reason it's bad in practice is that other 
countries might not agree to slow down with us. If you're content to develop new technologies at 
a slower rate than the rest of the world, what happens is that you don't invent anything at all.",0
"What is Paul Grahamâ€™s perspective on the influence of luck in startup success, and does he consider it a minor or major determining factor?","When we started our startup, I 
had bought the hype of the startup founder dream: that this is a game of skill. It is, in some 
ways. Having skill is valuable. So is being determined as all hell. But being lucky is the critical 
ingredient. Actually the best model would be to say that the outcome is the product of skill, 
determination, and luck. No matter how much skill and determination you have, if you roll a zero 
for luck, the outcome is zero.
These quotes about luck are not from founders whose startups failed. Founders who fail quickly 
tend to blame themselves. Founders who succeed quickly don't usually realize how lucky they 
were. It's the ones in the middle who see how important luck is.
17. The Value of Community
A surprising number of founders said what surprised them most about starting a startup was 
the value of community .","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","[6] It's 
exactly the same phenomenon we saw a step earlier. VCs get money by seeming confident to 
LPs, and founders get money by seeming confident to VCs.
16. Luck Is a Big Factor
With two such random linkages in the path between startups and money , it shouldn't be 
surprising that luck is a big factor in deals. And yet a lot of founders are surprised by it. I didn't 
realize how much of a role luck plays and how much is outside of our control. If you think about 
famous startups, it's pretty clear how big a role luck plays. Where would Microsoft be if IBM 
insisted on an exclusive license for DOS?
Why are founders fooled by this? Business guys probably aren't, but hackers are used to a 
world where skill is paramount, and you get what you deserve.","A startup that grows at 5% a week will in 4 years be making $25 million a 
month. [10]
Our ancestors must rarely have encountered cases of exponential growth, because our 
intuitions are no guide here. What happens to fast growing startups tends to surprise even the 
founders.
Small variations in growth rate produce qualitatively different outcomes. That's why there's a 
separate word for startups, and why startups do things that ordinary companies don't, like 
raising money and getting acquired. And, strangely enough, it's also why they fail so frequently .
Considering how valuable a successful startup can become, anyone familiar with the concept of 
expected value would be surprised if the failure rate weren't high. If a successful startup could 
make a founder $100 million, then even if the chance of succeeding were only 1%, the 
expected value of starting one would be $1 million.","In a 
startup, as in grad school, a lot of what ends up driving you are the expectations of your family 
and friends. Once you start a startup and tell everyone that's what you're doing, you're now on 
a path labelled ""get rich or bust."" Y ou now have to get rich, or you've failed.
Fear of failure is an extraordinarily powerful force. Usually it prevents people from starting 
things, but once you publish some definite ambition, it switches directions and starts working in 
your favor. I think it's a pretty clever piece of jiujitsu to set this irresistible force against the 
slightly less immovable object of becoming rich. Y ou won't have it driving you if your stated 
ambition is merely to start a consulting company that you will one day morph into a startup.","I think it's roughly correct to say that YC's most successful 
companies have never been the fastest to hire, and one of the marks of a great founder is being able to resist this 
urge.""
Paul Buchheit adds:
""A related problem that I see a lot is premature scalingâ€”founders take a small business that isn't really working (bad 
unit economics, typically) and then scale it up because they want impressive growth numbers. This is similar to over-
hiring in that it makes the business much harder to fix once it's big, plus they are bleeding cash really fast.""
Thanks to Sam Altman, Paul Buchheit, Joe Gebbia, Jessica Livingston, and Geoff Ralston for reading drafts of this.
Why It-s Safe for Founders to Be Nice - # 167
August 2015
I recently got an email from a founder that helped me understand something important: why it's 
safe for startup founders to be nice people.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","The big successes are so big they dwarf the 
rest. And since there are only a handful each year (the conventional wisdom is 15), investors 
treat ""big success"" as if it were binary . Most are interested in you if you seem like you have a 
chance, however small, of being one of the 15 big successes, and otherwise not. [1]
(There are a handful of angels who'd be interested in a company with a high probability of being 
moderately successful. But angel investors like big successes too.)
How do you seem like you'll be one of the big successes? Y ou need three things: formidable 
founders, a promising market, and (usually) some evidence of success so far.
Formidable
The most important ingredient is formidable founders.","I grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a 
man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising 
power, and isn't too fussy about how. As I've written before, one of the things that has surprised 
me most about startups is how few of the most successful founders are like that. Maybe 
successful people in other industries are; I don't know; but not startup founders. [1]
I knew this empirically , but I never saw the math of why till I got this founder's email. In it he said 
he worried that he was fundamentally soft-hearted and tended to give away too much for free. 
He thought perhaps he needed ""a little dose of sociopath-ness.""",0
"How does Paul Graham define the process of identifying startup ideas, and what criteria does he propose for distinguishing good ideas from bad ones?","So the most successful founders tend to work on ideas that few beside them realize are 
good. Which is not that far from a description of insanity , till you reach the point where you see 
results.
The first time Peter Thiel spoke at YC he drew a Venn diagram that illustrates the situation 
perfectly . He drew two intersecting circles, one labelled ""seems like a bad idea"" and the other 
""is a good idea."" The intersection is the sweet spot for startups.
This concept is a simple one and yet seeing it as a Venn diagram is illuminating. It reminds you 
that there is an intersectionâ€”that there are good ideas that seem bad. It also reminds you that 
the vast majority of ideas that seem bad are bad.
The fact that the best ideas seem like bad ideas makes it even harder to recognize the big 
winners.","The way to come up with good startup ideas is to take a step back. Instead of making a 
conscious effort to think of startup ideas, turn your mind into the type that startup ideas form in 
without any conscious effort. In fact, so unconsciously that you don't even realize at first that 
they're startup ideas.
This is not only possible, it's how Apple, Y ahoo, Google, and Facebook all got started. None of 
these companies were even meant to be companies at first. They were all just side projects. 
The best startups almost have to start as side projects, because great ideas tend to be such 
outliers that your conscious mind would reject them as ideas for companies.
Ok, so how do you turn your mind into the type that startup ideas form in unconsciously?","One founder put it very succinctly: 
Fast iteration is the key to success. One reason this advice is so hard to follow is that people 
don't realize how hard it is to judge startup ideas, particularly their own. Experienced founders 
learn to keep an open mind: Now I don't laugh at ideas anymore, because I realized how 
terrible I was at knowing if they were good or not. Y ou can never tell what will work. Y ou just 
have to do whatever seems best at each point. We do this with YC itself. We still don't know if it 
will work, but it seems like a decent hypothesis.
11. Don't Worry about Competitors
When you think you've got a great idea, it's sort of like having a guilty conscience about 
something. All someone has to do is look at you funny , and you think ""Oh my God, they know.""","Get funded by Y Combinator. 
 October 2005
(This essay is derived from a talk at the 2005 Startup School.)
How do you get good ideas for startups? That's probably the number one question people ask 
me.
I'd like to reply with another question: why do people think it's hard to come up with ideas for 
startups?
That might seem a stupid thing to ask. Why do they think it's hard? If people can't do it, then it is 
hard, at least for them. Right?
Well, maybe not. What people usually say is not that they can't think of ideas, but that they don't 
have any . That's not quite the same thing. It could be the reason they don't have any is that they 
haven't tried to generate them.
I think this is often the case.","I think this is often the case. I think people believe that coming up with ideas for startups is very 
hard-- that it must be very hard-- and so they don't try do to it. They assume ideas are like 
miracles: they either pop into your head or they don't.
I also have a theory about why people think this. They overvalue ideas. They think creating a 
startup is just a matter of implementing some fabulous initial idea. And since a successful 
startup is worth millions of dollars, a good idea is therefore a million dollar idea.
If coming up with an idea for a startup equals coming up with a million dollar idea, then of 
course it's going to seem hard. T oo hard to bother trying. Our instincts tell us something so 
valuable would not be just lying around for anyone to discover.","Our instincts tell us something so 
valuable would not be just lying around for anyone to discover.
Actually , startup ideas are not million dollar ideas, and here's an experiment you can try to 
prove it: just try to sell one. Nothing evolves faster than markets. The fact that there's no market 
for startup ideas suggests there's no demand. Which means, in the narrow sense of the word, 
that startup ideas are worthless.
Questions
The fact is, most startups end up nothing like the initial idea. It would be closer to the truth to 
say the main value of your initial idea is that, in the process of discovering it's broken, you'll 
come up with your real idea.
The initial idea is just a starting point-- not a blueprint, but a question. It might help if they were 
expressed that way .","What's special about startup ideas? 
Startup ideas are ideas for companies, and companies have to make money . And the way to 
make money is to make something people want.
Wealth is what people want. I don't mean that as some kind of philosophical statement; I mean 
it as a tautology .
So an idea for a startup is an idea for something people want. Wouldn't any good idea be 
something people want? Unfortunately not. I think new theorems are a fine thing to create, but 
there is no great demand for them. Whereas there appears to be great demand for celebrity 
gossip magazines. Wealth is defined democratically . Good ideas and valuable ideas are not 
quite the same thing; the difference is individual tastes.
But valuable ideas are very close to good ideas, especially in technology .","This is less true with angels, but 
VCs reject practically everyone. The structure of their business means a partner does at most 2 
new investments a year, no matter how many good startups approach him.
In addition to the odds being terrible, the average investor is, as I mentioned, a pretty bad judge 
of startups. It's harder to judge startups than most other things, because great startup ideas 
tend to seem wrong. A good startup idea has to be not just good but novel. And to be both good 
and novel, an idea probably has to seem bad to most people, or someone would already be 
doing it and it wouldn't be novel.
That makes judging startups harder than most other things one judges. Y ou have to be an 
intellectual contrarian to be a good startup investor. That's a problem for VCs, most of whom 
are not particularly imaginative.","I saw this phenomenon when I worked on spam filters. In 2002, most people preferred to ignore 
spam, and most of those who didn't preferred to believe the heuristic filters then available were 
the best you could do.
I found spam intolerable, and I felt it had to be possible to recognize it statistically . And it turns 
out that was all you needed to solve the problem. The algorithm I used was ridiculously simple. 
Anyone who'd really tried to solve the problem would have found it. It was just that no one had 
really tried to solve the problem. [3]
Let me repeat that recipe: finding the problem intolerable and feeling it must be possible to 
solve it. Simple as it seems, that's the recipe for a lot of startup ideas.
Wealth
So far most of what I've said applies to ideas in general. What's special about startup ideas?","The first thing you need is to be decisive. When we talk 
to founders about good and bad investors, one of the ways we describe the good ones is to say 
""he writes checks."" That doesn't mean the investor says yes to everyone. Far from it. It means 
he makes up his mind quickly , and follows through. Y ou may be thinking, how hard could that 
be? Y ou'll see when you try it. It follows from the nature of angel investing that the decisions are 
hard. Y ou have to guess early , at the stage when the most promising ideas still seem 
counterintuitive, because if they were obviously good, VCs would already have funded them.
Suppose it's 1998. Y ou come across a startup founded by a couple grad students. They say 
they're going to work on Internet search.",0
"What are the key takeaways from Paul Grahamâ€™s essay on wealth creation, and how does he explain the relationship between startups and economic progress?","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","Investors mainly contribute money , which in principle is the same no matter what the source. 
But the founders contribute ideas. Y ou can't replace those.
Let's rehearse the chain of argument so far. I'm heading for a conclusion to which many readers 
will have to be dragged kicking and screaming, so I've tried to make each link unbreakable. 
Decreasing economic inequality means taking money from the rich. Since risk and reward are 
equivalent, decreasing potential rewards automatically decreases people's appetite for risk. 
Startups are intrinsically risky . Without the prospect of rewards proportionate to the risk, 
founders will not invest their time in a startup. Founders are irreplaceable. So eliminating 
economic inequality means eliminating startups.
Economic inequality is not just a consequence of startups. It's the engine that drives them, in 
the same way a fall of water drives a water mill.","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.","Is that really better than a 
world in which the richest people get rich by starting tech companies?
Why are people starting so many more new companies than they used to, and why are they 
getting so rich from it? The answer to the first question, curiously enough, is that it's 
misphrased. We shouldn't be asking why people are starting companies, but why they're 
starting companies again. [3]
In 1892, the New Y ork Herald T ribune compiled a list of all the millionaires in America. They 
found 4047 of them. How many had inherited their wealth then? Only about 20%, which is less 
than the proportion of heirs today . And when you investigate the sources of the new fortunes, 
1892 looks even more like today . Hugh Rockoff found that ""many of the richest ... gained their 
initial edge from the new technology of mass production.""","There are a lot of ways to get rich, and this essay is about only one of them. This essay is about 
how to make money by creating wealth and getting paid for it. There are plenty of other ways to 
get money , including chance, speculation, marriage, inheritance, theft, extortion, fraud, 
monopoly , graft, lobbying, counterfeiting, and prospecting. Most of the greatest fortunes have 
probably involved several of these.
The advantage of creating wealth, as a way to get rich, is not just that it's more legitimate (many 
of the other methods are now illegal) but that it's more straightforward. Y ou just have to do 
something people want.
Money Is Not Wealth
If you want to create wealth, it will help to understand what it is. Wealth is not the same thing as 
money . [3] Wealth is as old as human history .","Which means the ambitious can now do arbitrage on them. It will 
be very valuable to understand precisely which ideas to keep and which can now be discarded.
The place to look is where the spread of smallness began: in the world of startups.
There have always been occasional cases, particularly in the US, of ambitious people who grew 
the ladder under them instead of climbing it. But till recently this was an anomalous route that 
tended to be followed only by outsiders. It was no coincidence that the great industrialists of the 
nineteenth century had so little formal education. As huge as their companies eventually 
became, they were all essentially mechanics and shopkeepers at first. That was a social step 
no one with a college education would take if they could avoid it. Till the rise of technology 
startups, and in particular, Internet startups, it was very unusual for educated people to start 
their own businesses.","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","This is one way I know the rich aren't all getting richer 
simply from some new system for transferring wealth to them from everyone else. When you 
use the would-have method with startup founders, you find what most would have done back in 
1960, when economic inequality was lower, was to join big companies or become professors. 
Before Mark Zuckerberg started Facebook, his default expectation was that he'd end up 
working at Microsoft. The reason he and most other startup founders are richer than they would 
have been in the mid 20th century is not because of some right turn the country took during the 
Reagan administration, but because progress in technology has made it much easier to start a 
new company that grows fast.
T raditional economists seem strangely averse to studying individual humans. It seems to be a 
rule with them that everything has to start with statistics.","What's special about startup ideas? 
Startup ideas are ideas for companies, and companies have to make money . And the way to 
make money is to make something people want.
Wealth is what people want. I don't mean that as some kind of philosophical statement; I mean 
it as a tautology .
So an idea for a startup is an idea for something people want. Wouldn't any good idea be 
something people want? Unfortunately not. I think new theorems are a fine thing to create, but 
there is no great demand for them. Whereas there appears to be great demand for celebrity 
gossip magazines. Wealth is defined democratically . Good ideas and valuable ideas are not 
quite the same thing; the difference is individual tastes.
But valuable ideas are very close to good ideas, especially in technology .","Not all rich people got that way from startups, of course. What if we let people get rich by 
starting startups, but taxed away all other surplus wealth? Wouldn't that at least decrease 
inequality?
Less than you might think. If you made it so that people could only get rich by starting startups, 
people who wanted to get rich would all start startups. And that might be a great thing. But I 
don't think it would have much effect on the distribution of wealth. People who want to get rich 
will do whatever they have to. If startups are the only way to do it, you'll just get far more people 
starting startups. (If you write the laws very carefully , that is. More likely , you'll just get a lot of 
people doing things that can be made to look on paper like startups.)",0
"What are some of the counterintuitive lessons Paul Graham provides about fundraising, and why does he believe certain funding strategies are more effective?","Don't listen to them.
Don't make things complicated.
I realize it may seem odd to sum up this huge treatise by saying that my overall advice is not to 
make fundraising too complicated, but if you go back and look at this list you'll see it's basically 
a simple recipe with a lot of implications and edge cases. Avoid investors till you decide to raise 
money , and then when you do, talk to them all in parallel, prioritized by expected value, and 
accept offers greedily . That's fundraising in one sentence. Don't introduce complicated 
optimizations, and don't let investors introduce complications either.
Fundraising is not what will make you successful. It's just a means to an end.","When your fundraising options run out, they usually run out 
in the same way . Don't keep sucking on the straw if you're just getting air. It's not going to get 
better.
Don't get addicted to fundraising.
Fundraising is a chore for most founders, but some find it more interesting than working on their 
startup. The work at an early stage startup often consists of unglamorous schleps. Whereas 
fundraising, when it's going well, can be quite the opposite. Instead of sitting in your grubby 
apartment listening to users complain about bugs in your software, you're being offered millions 
of dollars by famous investors over lunch at a nice restaurant. [26]
The danger of fundraising is particularly acute for people who are good at it. It's always fun to 
work on something you're good at. If you're one of these people, beware.","Only raise the price on an investor you're comfortable 
with losing, because some will angrily refuse. [2]
The second reason investors like you more when you've had some success at fundraising is 
that it makes you more confident, and an investors' opinion of you is the foundation of their 
opinion of your company . Founders are often surprised how quickly investors seem to know 
when they start to succeed at raising money . And while there are in fact lots of ways for such 
information to spread among investors, the main vector is probably the founders themselves. 
Though they're often clueless about technology , most investors are pretty good at reading 
people. When fundraising is going well, investors are quick to sense it in your increased 
confidence. (This is one case where the average founder's inability to remain poker-faced works 
to your advantage.)","Know everything about your market. [6]
Why do founders persist in trying to convince investors of things they're not convinced of 
themselves? Partly because we've all been trained to.
When my friends Robert Morris and T revor Blackwell were in grad school, one of their fellow 
students was on the receiving end of a question from their faculty advisor that we still quote 
today . When the unfortunate fellow got to his last slide, the professor burst out: Which one of 
these conclusions do you actually believe? One of the artifacts of the way schools are 
organized is that we all get trained to talk even when we have nothing to say . If you have a ten 
page paper due, then ten pages you must write, even if you only have one page of ideas. Even 
if you have no ideas. Y ou have to produce something. And all too many startups go into 
fundraising in the same spirit.","Others skip phase 1 
and go straight to phase 2. And at Y Combinator we get an increasing number of companies 
that have already raised amounts in the hundreds of thousands. But the three phase path is at 
least the one about which individual startups' paths oscillate.
This essay focuses on phase 2 fundraising. That's the type the startups we fund are doing on 
Demo Day , and this essay is the advice we give them.
Forces
Fundraising is hard in both senses: hard like lifting a heavy weight, and hard like solving a 
puzzle. It's hard like lifting a weight because it's intrinsically hard to convince people to part with 
large sums of money . That problem is irreducible; it should be hard. But much of the other kind 
of difficulty can be eliminated.","The other time not to raise money is when you won't be able to. If you try to raise money before 
you can convince investors, you'll not only waste your time, but also burn your reputation with 
those investors.
Be in fundraising mode or not.
One of the things that surprises founders most about fundraising is how distracting it is. When 
you start fundraising, everything else grinds to a halt. The problem is not the time fundraising 
consumes but that it becomes the top idea in your mind. A startup can't endure that level of 
distraction for long. An early stage startup grows mostly because the founders make it grow, 
and if the founders look away , growth usually drops sharply .
Because fundraising is so distracting, a startup should either be in fundraising mode or not.","T o emphasize the distinction I'm 
going to name them: type A fundraising is when you don't need money , and type B fundraising 
is when you do.
Inexperienced founders read about famous startups doing what was type A fundraising, and 
decide they should raise money too, since that seems to be how startups work. Except when 
they raise money they don't have a clear path to profitability and are thus doing type B 
fundraising. And they are then surprised how difficult and unpleasant it is.
Of course not all startups can make it to ramen profitability in a few months. And some that 
don't still manage to have the upper hand over investors, if they have some other advantage like 
extraordinary growth numbers or exceptionally formidable founders. But as time passes it gets 
increasingly difficult to fundraise from a position of strength without being profitable. [19]
Don't optimize for valuation.","The salesperson asks you this not 
because you're supposed to have a plan to spend a specific amount, but so they can show you 
only things that cost the most you'll pay .
Similarly , when investors ask how much you plan to raise, it's not because you're supposed to 
have a plan. It's to see whether you'd be a suitable recipient for the size of investment they like 
to make, and also to judge your ambition, reasonableness, and how far you are along with 
fundraising.
If you're a wizard at fundraising, you can say ""We plan to raise a $7 million series A round, and 
we'll be accepting termsheets next tuesday ."" I've known a handful of founders who could pull 
that off without having VCs laugh in their faces.","And all too many startups go into 
fundraising in the same spirit. When they think it's time to raise money , they try gamely to make 
the best case they can for their startup. Most never think of pausing beforehand to ask whether 
what they're saying is actually convincing, because they've all been trained to treat the need to 
present as a given â€” as an area of fixed size, over which however much truth they have must 
needs be spread, however thinly .
The time to raise money is not when you need it, or when you reach some artificial deadline like 
a Demo Day . It's when you can convince investors, and not before. [7]
And unless you're a good con artist, you'll never convince investors if you're not convinced 
yourself. They're far better at detecting bullshit than you are at producing it, even if you're 
producing it unknowingly .","A good metaphor here is angle of attack. If you try to fly at too steep an angle of attack, you just 
stall. If you say right out of the gate that you want to raise a $5 million series A round, unless 
you're in a very strong position, you not only won't get that but won't get anything. Better to start 
at a low angle of attack, build up speed, and then gradually increase the angle if you want.
Be profitable if you can.
Y ou will be in a much stronger position if your collection of plans includes one for raising zero 
dollars â€” i.e. if you can make it to profitability without raising any additional money . Ideally you 
want to be able to say to investors ""We'll succeed no matter what, but raising money will help us 
do it faster.""
There are many analogies between fundraising and dating, and this is one of the strongest.",0
"If you were launching a startup today, how would you apply Paul Grahamâ€™s concept of 'doing things that donâ€™t scale' to acquire your first customers?","Thanks to Marc Andreessen, Sam Altman, Patrick Collison, Ron Conway , Chris Dixon, Alfred Lin, Ben Horowitz, 
Steve Huffman, Jessica Livingston, Greg Mcadoo, Andrew Mason, Geoff Ralston, Y uri Sagalov, Emmett Shear, Rajat 
Suri, Garry T an, Albert Wenger, Fred Wilson, and Qasar Y ounis for reading drafts of this.
Do Things that Don-t Scale - # 152
 Want to start a startup? Get funded by Y Combinator. 
 July 2013
One of the most common types of advice we give at Y Combinator is to do things that don't 
scale. A lot of would-be founders believe that startups either take off or don't. Y ou build 
something, make it available, and if you've made a better mousetrap, people beat a path to your 
door as promised.","[8] Within YC when we say it's ipso facto right to do whatever gets you growth, it's implicit that this excludes trickery 
like buying users for more than their lifetime value, counting users as active when they're really not, bleeding out 
invites at a regularly increasing rate to manufacture a perfect growth curve, etc. Even if you were able to fool 
investors with such tricks, you'd ultimately be hurting yourself, because you're throwing off your own compass.
[9] Which is why it's such a dangerous mistake to believe that successful startups are simply the embodiment of 
some brilliant initial idea. What you're looking for initially is not so much a great idea as an idea that could evolve into 
a great one. The danger is that promising ideas are not merely blurry versions of great ones.","But it's dangerous to have too few customers even if they pay a lot, or the 
power that individual customers have over you could turn you into a de facto consulting firm. So whatever market 
you're in, you'll usually do best to err on the side of making the broadest type of product for it.
[2] One year at Startup School David Heinemeier Hansson encouraged programmers who wanted to start 
businesses to use a restaurant as a model. What he meant, I believe, is that it's fine to start software companies 
constrained in (a) in the same way a restaurant is constrained in (b). I agree. Most people should not try to start 
startups.
[3] That sort of stepping back is one of the things we focus on at Y Combinator. It's common for founders to have 
discovered something intuitively without understanding all its implications.","6. Offer surprisingly good customer service.
Customers are used to being maltreated. Most of the companies they deal with are quasi-
monopolies that get away with atrocious customer service. Y our own ideas about what's 
possible have been unconsciously lowered by such experiences. T ry making your customer 
service not merely good, but surprisingly good. Go out of your way to make people happy . 
They'll be overwhelmed; you'll see. In the earliest stages of a startup, it pays to offer customer 
service on a level that wouldn't scale, because it's a way of learning about your users.
7. Y ou make what you measure.
I learned this one from Joe Kraus. [3] Merely measuring something has an uncanny tendency to 
improve it.","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.","But anything that grows consistently at 
10% a week is almost certainly a better idea than you started with.
There's a parallel here to small businesses. Just as the constraint of being located in a 
particular neighborhood helps define a bar, the constraint of growing at a certain rate can help 
define a startup.
Y ou'll generally do best to follow that constraint wherever it leads rather than being influenced 
by some initial vision, just as a scientist is better off following the truth wherever it leads rather 
than being influenced by what he wishes were the case. When Richard Feynman said that the 
imagination of nature was greater than the imagination of man, he meant that if you just keep 
following the truth you'll discover cooler things than you could ever have made up. For startups, 
growth is a constraint much like truth. Every successful startup is at least partly a product of the 
imagination of growth.","The 
banks now had to find someone else to lend to, so they made more margin loans.
[15] Even now it's hard to get them to. One of the things I find hardest to get into the heads of would-be startup 
founders is how important it is to do certain kinds of menial work early in the life of a company . Doing things that don't 
scale is to how Henry Ford got started as a high-fiber diet is to the traditional peasant's diet: they had no choice but 
to do the right thing, while we have to make a conscious effort.
[16] Founders weren't celebrated in the press when I was a kid. ""Our founder"" meant a photograph of a severe-
looking man with a walrus mustache and a wing collar who had died decades ago. The thing to be when I was a kid 
was an executive.","In essense, let the market design the product. We've done the same 
thing ourselves. We think of the techniques we're developing for dealing with large numbers of 
startups as like software. Sometimes it literally is software, like Hacker News and our 
application system.
One of the most important things we've been working on standardizing are investment terms. 
Till now investment terms have been individually negotiated. This is a problem for founders, 
because it makes raising money take longer and cost more in legal fees. So as well as using 
the same paperwork for every deal we do, we've commissioned generic angel paperwork that 
all the startups we fund can use for future rounds.
Some investors will still want to cook up their own deal terms. Series A rounds, where you raise 
a million dollars or more, will be custom deals for the forseeable future.","What would be a great idea for someone else to do as a startup?
4. Derivative Idea
Many of the applications we get are imitations of some existing company . That's one source of 
ideas, but not the best. If you look at the origins of successful startups, few were started in 
imitation of some other startup. Where did they get their ideas? Usually from some specific, 
unsolved problem the founders identified.
Our startup made software for making online stores. When we started it, there wasn't any; the 
few sites you could order from were hand-made at great expense by web consultants. We knew 
that if online shopping ever took off, these sites would have to be generated by software, so we 
wrote some. Pretty straightforward.
It seems like the best problems to solve are ones that affect you personally .","I learned to think about the initial 
stages of a startup as a giant experiment. All products should be considered experiments, and 
those that have a market show promising results extremely quickly . Once you start talking to 
users, I guarantee you'll be surprised by what they tell you. When you let customers tell you 
what they're after, they will often reveal amazing details about what they find valuable as well 
what they're willing to pay for. The surprise is generally positive as well as negative. They won't 
like what you've built, but there will be other things they would like that would be trivially easy to 
implement. It's not till you start the conversation by launching the wrong thing that they can 
express (or perhaps even realize) what they're looking for.
10. Change Y our Idea
T o benefit from engaging with users you have to be willing to change your idea.",0
"How could you incorporate Paul Grahamâ€™s 'Makerâ€™s Schedule, Managerâ€™s Schedule' framework into your daily routine to improve productivity and avoid unnecessary interruptions?","Thanks to Jessica Livingston for reading drafts of this.
Maker-s Schedule- Manager-s Schedule  - # 114
 --> ""...the mere consciousness of an engagement will sometimes worry a whole day .""
Ã¿Ã½ Charles Dickens July 2009
One reason programmers dislike meetings so much is that they're on a different type of 
schedule from other people. Meetings cost them more.
There are two types of schedule, which I'll call the manager's schedule and the maker's 
schedule. The manager's schedule is for bosses. It's embodied in the traditional appointment 
book, with each day cut into one hour intervals. Y ou can block off several hours for a single task 
if you need to, but by default you change what you're doing every hour.
When you use time that way , it's merely a practical problem to meet with someone. Find an 
open slot in your schedule, book them, and you're done.","We just took it 
for granted that we had to either blow our schedules or offend people. But now that I've realized 
what's going on, perhaps there's a third option: to write something explaining the two types of 
schedule. Maybe eventually , if the conflict between the manager's schedule and the maker's 
schedule starts to be more widely understood, it will become less of a problem.
Those of us on the maker's schedule are willing to compromise. We know we have to have 
some number of meetings. All we ask from those on the manager's schedule is that they 
understand the cost.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Jessica Livingston, and Robert Morris 
for reading drafts of this.
Related:
A Local Revolution- - # 113
April 2009
Recently I realized I'd been holding two ideas in my head that would explode if combined.","Find an 
open slot in your schedule, book them, and you're done.
Most powerful people are on the manager's schedule. It's the schedule of command. But there's 
another way of using time that's common among people who make things, like programmers 
and writers. They generally prefer to use time in units of half a day at least. Y ou can't write or 
program well in units of an hour. That's barely enough time to get started.
When you're operating on the maker's schedule, meetings are a disaster. A single meeting can 
blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. 
Plus you have to remember to go to the meeting. That's no problem for someone on the 
manager's schedule. There's always something coming on the next hour; the only question is 
what.","Then I'd sleep till about 11 am, and come in and work until dinner on 
what I called ""business stuff."" I never thought of it in these terms, but in effect I had two 
workdays each day , one on the manager's schedule and one on the maker's.
When you're operating on the manager's schedule you can do something you'd never want to 
do on the maker's: you can have speculative meetings. Y ou can meet someone just to get to 
know one another. If you have an empty slot in your schedule, why not? Maybe it will turn out 
you can help one another in some way .
Business people in Silicon Valley (and the whole world, for that matter) have speculative 
meetings all the time. They're effectively free if you're on the manager's schedule.","Several times a 
week I set aside a chunk of time to meet founders we've funded. These chunks of time are at 
the end of my working day , and I wrote a signup program that ensures all the appointments 
within a given set of office hours are clustered at the end. Because they come at the end of my 
day these meetings are never an interruption. (Unless their working day ends at the same time 
as mine, the meeting presumably interrupts theirs, but since they made the appointment it must 
be worth it to them.) During busy periods, office hours sometimes get long enough that they 
compress the day , but they never interrupt it.
When we were working on our own startup, back in the 90s, I evolved another trick for 
partitioning the day . I used to program from dinner till about 3 am every day , because at night no 
one could interrupt me.","But Y Combinator runs on the maker's schedule. Rtm and T revor and I do 
because we always have, and Jessica does too, mostly , because she's gotten into sync with us.
I wouldn't be surprised if there start to be more companies like us. I suspect founders may 
increasingly be able to resist, or at least postpone, turning into managers, just as a few 
decades ago they started to be able to resist switching from jeans to suits.
How do we manage to advise so many startups on the maker's schedule? By using the classic 
device for simulating the manager's schedule within the maker's: office hours. Several times a 
week I set aside a chunk of time to meet founders we've funded.","There's always something coming on the next hour; the only question is 
what. But when someone on the maker's schedule has a meeting, they have to think about it.
For someone on the maker's schedule, having a meeting is like throwing an exception. It 
doesn't merely cause you to switch from one task to another; it changes the mode in which you 
work.
I find one meeting can sometimes affect a whole day . A meeting commonly blows at least half a 
day , by breaking up a morning or afternoon. But in addition there's sometimes a cascading 
effect. If I know the afternoon is going to be broken up, I'm slightly less likely to start something 
ambitious in the morning. I know this may sound oversensitive, but if you're a maker, think of 
your own case.","But it may be better to be overworked than interrupted. Once you 
dilute a startup with ordinary office workersâ€”with type-B procrastinatorsâ€”the whole company 
starts to resonate at their frequency . They're interrupt-driven, and soon you are too.
Errands are so effective at killing great projects that a lot of people use them for that purpose. 
Someone who has decided to write a novel, for example, will suddenly find that the house 
needs cleaning. People who fail to write novels don't do it by sitting in front of a blank page for 
days without writing anything. They do it by feeding the cat, going out to buy something they 
need for their apartment, meeting a friend for coffee, checking email. ""I don't have time to work,"" 
they say . And they don't; they've made sure of that.
(There's also a variant where one has no place to work.","So is email, on a smaller scale. And in 
addition to the direct cost in time, there's the cost in fragmentation-- breaking people's day up 
into bits too small to be useful.
Y ou can see how dependent you've become on something by removing it suddenly . So for big 
companies I propose the following experiment. Set aside one day where meetings are 
forbidden-- where everyone has to sit at their desk all day and work without interruption on 
things they can do without talking to anyone else. Some amount of communication is necessary 
in most jobs, but I'm sure many employees could find eight hours worth of stuff they could do by 
themselves. Y ou could call it ""Work Day .""
The other problem with pretend work is that it often looks better than real work. When I'm 
writing or hacking I spend as much time just thinking as I do actually typing.","I'm trying other strategies now, but I 
think this time I'll wait till I'm sure they work before writing about them.
May 2008
Procrastination feeds on distractions. Most people find it uncomfortable just to sit and do 
nothing; you avoid work by doing something else.
So one way to beat procrastination is to starve it of distractions. But that's not as straightforward 
as it sounds, because there are people working hard to distract you. Distraction is not a static 
obstacle that you avoid like you might avoid a rock in the road. Distraction seeks you out.
Chesterfield described dirt as matter out of place. Distracting is, similarly , desirable at the wrong 
time. And technology is continually being refined to produce more and more desirable things. 
Which means that as we learn to avoid one class of distractions, new ones constantly appear, 
like drug-resistant bacteria.",0
"What steps would you take to implement Paul Grahamâ€™s insights on startup idea generation in your own entrepreneurial journey, and how would you evaluate your ideas?","Starting startups is not one of them. The stick-
to-your-vision approach works for something like winning an Olympic gold medal, where the 
problem is well-defined. Startups are more like science, where you need to follow the trail 
wherever it leads.
So don't get too attached to your original plan, because it's probably wrong. Most successful 
startups end up doing something different than they originally intended â€” often so different that 
it doesn't even seem like the same company . Y ou have to be prepared to see the better idea 
when it arrives. And the hardest part of that is often discarding your old idea.
But openness to new ideas has to be tuned just right. Switching to a new idea every week will 
be equally fatal. Is there some kind of external test you can use? One is to ask whether the 
ideas represent some kind of progression.","The way to come up with good startup ideas is to take a step back. Instead of making a 
conscious effort to think of startup ideas, turn your mind into the type that startup ideas form in 
without any conscious effort. In fact, so unconsciously that you don't even realize at first that 
they're startup ideas.
This is not only possible, it's how Apple, Y ahoo, Google, and Facebook all got started. None of 
these companies were even meant to be companies at first. They were all just side projects. 
The best startups almost have to start as side projects, because great ideas tend to be such 
outliers that your conscious mind would reject them as ideas for companies.
Ok, so how do you turn your mind into the type that startup ideas form in unconsciously?","One founder put it very succinctly: 
Fast iteration is the key to success. One reason this advice is so hard to follow is that people 
don't realize how hard it is to judge startup ideas, particularly their own. Experienced founders 
learn to keep an open mind: Now I don't laugh at ideas anymore, because I realized how 
terrible I was at knowing if they were good or not. Y ou can never tell what will work. Y ou just 
have to do whatever seems best at each point. We do this with YC itself. We still don't know if it 
will work, but it seems like a decent hypothesis.
11. Don't Worry about Competitors
When you think you've got a great idea, it's sort of like having a guilty conscience about 
something. All someone has to do is look at you funny , and you think ""Oh my God, they know.""","Get funded by Y Combinator. 
 October 2005
(This essay is derived from a talk at the 2005 Startup School.)
How do you get good ideas for startups? That's probably the number one question people ask 
me.
I'd like to reply with another question: why do people think it's hard to come up with ideas for 
startups?
That might seem a stupid thing to ask. Why do they think it's hard? If people can't do it, then it is 
hard, at least for them. Right?
Well, maybe not. What people usually say is not that they can't think of ideas, but that they don't 
have any . That's not quite the same thing. It could be the reason they don't have any is that they 
haven't tried to generate them.
I think this is often the case.","If 
you're at the leading edge of a field that's changing rapidly , your ideas about what's sexy will be 
somewhat correlated with what's valuable in practice. Particularly as you get older and more 
experienced. Plus if you find an idea sexy , you'll work on it more enthusiastically . [13]
Recipes
While the best way to discover startup ideas is to become the sort of person who has them and 
then build whatever interests you, sometimes you don't have that luxury . Sometimes you need 
an idea now. For example, if you're working on a startup and your initial idea turns out to be bad.
For the rest of this essay I'll talk about tricks for coming up with startup ideas on demand. 
Although empirically you're better off using the organic strategy , you could succeed this way . 
Y ou just have to be more disciplined.","Our instincts tell us something so 
valuable would not be just lying around for anyone to discover.
Actually , startup ideas are not million dollar ideas, and here's an experiment you can try to 
prove it: just try to sell one. Nothing evolves faster than markets. The fact that there's no market 
for startup ideas suggests there's no demand. Which means, in the narrow sense of the word, 
that startup ideas are worthless.
Questions
The fact is, most startups end up nothing like the initial idea. It would be closer to the truth to 
say the main value of your initial idea is that, in the process of discovering it's broken, you'll 
come up with your real idea.
The initial idea is just a starting point-- not a blueprint, but a question. It might help if they were 
expressed that way .","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.","I learned to think about the initial 
stages of a startup as a giant experiment. All products should be considered experiments, and 
those that have a market show promising results extremely quickly . Once you start talking to 
users, I guarantee you'll be surprised by what they tell you. When you let customers tell you 
what they're after, they will often reveal amazing details about what they find valuable as well 
what they're willing to pay for. The surprise is generally positive as well as negative. They won't 
like what you've built, but there will be other things they would like that would be trivially easy to 
implement. It's not till you start the conversation by launching the wrong thing that they can 
express (or perhaps even realize) what they're looking for.
10. Change Y our Idea
T o benefit from engaging with users you have to be willing to change your idea.","We currently advise startups mostly 
to ignore competitors. We tell them startups are competitive like running, not like soccer; you don't have to go and 
steal the ball away from the other team. But if idea clashes became common enough, maybe you'd start to have to. 
That would be unfortunate.
Thanks to Sam Altman, Paul Buchheit, Dalton Caldwell, Patrick Collison, Jessica Livingston, Andrew Mason, Geoff 
Ralston, and Garry T an for reading drafts of this.
How to Get Startup Ideas - # 150
 Want to start a startup? Get funded by Y Combinator. 
 November 2012
The way to get startup ideas is not to try to think of startup ideas. It's to look for problems, 
preferably problems you have yourself.","We've always 
encouraged founders to see a startup idea as a hypothesis rather than a blueprint. And yet 
they're still surprised how well it works to change the idea. Normally if you complain about 
something being hard, the general advice is to work harder. With a startup, I think you should 
find a problem that's easy for you to solve. Optimizing in solution-space is familiar and 
straightforward, but you can make enormous gains playing around in problem-space. Whereas 
mere determination, without flexibility , is a greedy algorithm that may get you nothing more than 
a mediocre local maximum: When someone is determined, there's still a danger that they'll 
follow a long, hard path that ultimately leads nowhere. Y ou want to push forward, but at the 
same time twist and turn to find the most promising path. One founder put it very succinctly: 
Fast iteration is the key to success.",0
"If you were mentoring a new entrepreneur, how would you explain the dangers of 'schlep blindness,' and what strategies would you suggest to avoid it?","(This is also true of starting a startup generally .)
How do you overcome schlep blindness? Frankly , the most valuable antidote to schlep 
blindness is probably ignorance. Most successful founders would probably say that if they'd 
known when they were starting their company about the obstacles they'd have to overcome, 
they might never have started it. Maybe that's one reason the most successful startups of all so 
often have young founders.
In practice the founders grow with the problems. But no one seems able to foresee that, not 
even older, more experienced founders. So the reason younger founders have an advantage is 
that they make two mistakes that cancel each other out. They don't know how much they can 
grow, but they also don't know how much they'll need to. Older founders only make the first 
mistake.
Ignorance can't solve everything though.","A company is defined by the 
schleps it will undertake. And schleps should be dealt with the same way you'd deal with a cold 
swimming pool: just jump in. Which is not to say you should seek out unpleasant work per se, 
but that you should never shrink from it if it's on the path to something great.
The most dangerous thing about our dislike of schleps is that much of it is unconscious. Y our 
unconscious won't even let you see ideas that involve painful schleps. That's schlep blindness.
The phenomenon isn't limited to startups. Most people don't consciously decide not to be in as 
good physical shape as Olympic athletes, for example. Their unconscious mind decides for 
them, shrinking from the work involved.
The most striking example I know of schlep blindness is Stripe, or rather Stripe's idea.","""we already tried that"" or ""from speaking to our users that isn't 
what they'd like,"" etc. Those groups never have that glazed over look.
Thanks to Sam Altman, Patrick Collison, Aaron Iba, Jessica Livingston, Robert Morris, Harj T aggar, and Garry T an 
for reading drafts of this.
Schlep Blindness - # 140
 Want to start a startup? Get funded by Y Combinator. 
 January 2012
There are great startup ideas lying around unexploited right under our noses. One reason we 
don't see them is a phenomenon I call schlep blindness. Schlep was originally a Yiddish word 
but has passed into general use in the US. It means a tedious, unpleasant task.
No one likes schleps, but hackers especially dislike them.","The most striking example I know of schlep blindness is Stripe, or rather Stripe's idea. For over 
a decade, every hacker who'd ever had to process payments online knew how painful the 
experience was. Thousands of people must have known about this problem. And yet when they 
started startups, they decided to build recipe sites, or aggregators for local events. Why? Why 
work on problems few care much about and no one will pay for, when you could fix one of the 
most important components of the world's infrastructure? Because schlep blindness prevented 
people from even considering the idea of fixing payments.
Probably no one who applied to Y Combinator to work on a recipe site began by asking ""should 
we fix payments, or build a recipe site?"" and chose the recipe site.","If that were all, they'd be no worse than going to visit 
your in-laws. There's more to it than that. Big problems are terrifying. There's an almost physical 
pain in facing them. It's like having a vacuum cleaner hooked up to your imagination. All your 
initial ideas get sucked out immediately , and you don't have any more, and yet the vacuum 
cleaner is still sucking.
Y ou can't look a big problem too directly in the eye. Y ou have to approach it somewhat obliquely . 
But you have to adjust the angle just right: you have to be facing the big problem directly 
enough that you catch some of the excitement radiating from it, but not so much that it 
paralyzes you. Y ou can tighten the angle once you get going, just as a sailboat can sail closer to 
the wind once it gets underway .","Thanks to Sam Altman, T revor Blackwell, Nicholas Christakis, Patrick Collison, Sam Gichuru, Jessica Livingston, 
Patrick McKenzie, Geoff Ralston, and Harj T aggar for reading drafts of this.
Orthodox Privilege - # 189
July 2020
 ""Few people are capable of expressing with equanimity opinions which differ from the 
prejudices of their social environment. Most people are even incapable of forming such 
opinions.""
Ã¿Ã½ Einstein 
There has been a lot of talk about privilege lately . Although the concept is overused, there is 
something to it, and in particular to the idea that privilege makes you blind Ã¿Ã½ that you can't see 
things that are visible to someone whose life is very different from yours.
But one of the most pervasive examples of this kind of blindness is one that I haven't seen 
mentioned explicitly .","[16]
One way to ensure you do a good job solving other people's problems is to make them your 
own. When Rajat Suri of E la Carte decided to write software for restaurants, he got a job as a 
waiter to learn how restaurants worked. That may seem like taking things to extremes, but 
startups are extreme. We love it when founders do such things.
In fact, one strategy I recommend to people who need a new idea is not merely to turn off their 
schlep and unsexy filters, but to seek out ideas that are unsexy or involve schleps. Don't try to 
start T witter. Those ideas are so rare that you can't find them by looking for them. Make 
something unsexy that people will pay you for.","Another way to decrease the risk is to join an existing startup instead of starting your own. 
Being one of the first employees of a startup is a lot like being a founder, in both the good ways 
and the bad. Y ou'll be roughly 1/n^2 founder, where n is your employee number.
As with the question of cofounders, the real lesson here is to start startups when you're young.
10. Independently wealthy
This is my excuse for not starting a startup. Startups are stressful. Why do it if you don't need 
the money? For every ""serial entrepreneur,"" there are probably twenty sane ones who think 
""Start another company? Are you crazy?""
I've come close to starting new startups a couple times, but I always pull back because I don't 
want four years of my life to be consumed by random schleps.","The obvious solution is to have the junior people do the work. Some good stuff happens this 
way , but there are problems it doesn't work so well for: the kind where it helps to have 
everything in one head.
For example, it recently emerged that the famous glass artist Dale Chihuly hasn't actually blown 
glass for 27 years. He has assistants do the work for him. But one of the most valuable sources 
of ideas in the visual arts is the resistance of the medium. That's why oil paintings look so 
different from watercolors. In principle you could make any mark in any medium; in practice the 
medium steers you. And if you're no longer doing the work yourself, you stop learning from this.
So if you want to beat those eminent enough to delegate, one way to do it is to take advantage 
of direct contact with the medium.","When the ball comes near them their instinct is to avoid it. I didn't make a lot of catches as 
an eight year old outfielder, because whenever a fly ball came my way , I used to close my eyes 
and hold my glove up more for protection than in the hope of catching it.
Choosing a marginal project is the startup equivalent of my eight year old strategy for dealing 
with fly balls. If you make anything good, you're going to have competitors, so you may as well 
face that. Y ou can only avoid competition by avoiding good ideas.
I think this shrinking from big problems is mostly unconscious. It's not that people think of grand 
ideas but decide to pursue smaller ones because they seem safer. Y our unconscious won't 
even let you think of grand ideas. So the solution may be to think about ideas without involving 
yourself. What would be a great idea for someone else to do as a startup?",0
How could an academic researcher apply Paul Grahamâ€™s ideas about iteration and rapid prototyping to improve the impact and success of their projects?,"Y ou can't answer that; 
if you could, you'd have made it.
The way to get a big idea to appear in your head is not to hunt for big ideas, but to put in a lot of 
time on work that interests you, and in the process keep your mind open enough that a big idea 
can take roost. Einstein, Ford, and Beckenbauer all used this recipe. They all knew their work 
like a piano player knows the keys. So when something seemed amiss to them, they had the 
confidence to notice it.
Put in time how and on what? Just pick a project that seems interesting: to master some chunk 
of material, or to make something, or to answer some question. Choose a project that will take 
less than a month, and make it something you have the means to finish.","We've always 
encouraged founders to see a startup idea as a hypothesis rather than a blueprint. And yet 
they're still surprised how well it works to change the idea. Normally if you complain about 
something being hard, the general advice is to work harder. With a startup, I think you should 
find a problem that's easy for you to solve. Optimizing in solution-space is familiar and 
straightforward, but you can make enormous gains playing around in problem-space. Whereas 
mere determination, without flexibility , is a greedy algorithm that may get you nothing more than 
a mediocre local maximum: When someone is determined, there's still a danger that they'll 
follow a long, hard path that ultimately leads nowhere. Y ou want to push forward, but at the 
same time twist and turn to find the most promising path. One founder put it very succinctly: 
Fast iteration is the key to success.","And starting with a crude version 1 means your initial effort is always small and 
incomplete.
I'd noticed, of course, that people never seemed to grasp new ideas at first. I thought it was just 
because most people were stupid. Now I see there's more to it than that. Like a contrarian 
investment fund, someone following this strategy will almost always be doing things that seem 
wrong to the average person.
As with contrarian investment strategies, that's exactly the point. This technique is successful 
(in the long term) because it gives you all the advantages other people forgo by trying to seem 
legit. If you work on overlooked problems, you're more likely to discover new things, because 
you have less competition.","And it only does a fraction of what the finished product will do, but that fraction 
includes stuff that no one else has done before.
They've also written at least a skeleton business plan, addressing the five fundamental 
questions: what they're going to do, why users need it, how large the market is, how they'll 
make money , and who the competitors are and why this company is going to beat them. (That 
last has to be more specific than ""they suck"" or ""we'll work really hard."")
If you have to choose between spending time on the demo or the business plan, spend most on 
the demo. Software is not only more convincing, but a better way to explore ideas.
Stage 2: Angel Round
While writing the prototype, the group has been traversing their network of friends in search of 
angel investors. They find some just as the prototype is demoable.","to sit down and try to think of ideas. The 
best plan may be just to keep a background process running, looking for things that seem to be 
missing. Work on hard problems, driven mainly by curiosity , but have a second self watching 
over your shoulder, taking note of gaps and anomalies. [6]
Give yourself some time. Y ou have a lot of control over the rate at which you turn yours into a 
prepared mind, but you have less control over the stimuli that spark ideas when they hit it. If Bill 
Gates and Paul Allen had constrained themselves to come up with a startup idea in one month, 
what if they'd chosen a month before the Altair appeared? They probably would have worked 
on a less promising idea. Drew Houston did work on a less promising idea before Dropbox: an 
SA T prep startup.","The same thing happens with software. Working to implement one 
idea gives you more ideas. So shelving an idea costs you not only that delay in implementing it, 
but also all the ideas that implementing it would have led to. In fact, shelving an idea probably 
even inhibits new ideas: as you start to think of some new feature, you catch sight of the shelf 
and think ""but I already have a lot of new things I want to do for the next release.""
What big companies do instead of implementing features is plan them. At Viaweb we 
sometimes ran into trouble on this account. Investors and analysts would ask us what we had 
planned for the future. The truthful answer would have been, we didn't have any plans. We had 
general ideas about things we wanted to improve, but if we knew how we would have done it 
already .","[29] It may be helpful always to walk or run the same route, because that frees attention for thinking. It feels that way 
to me, and there is some historical evidence for it.
Thanks to T revor Blackwell, Daniel Gackle, Pam Graham, T om Howard, Patrick Hsu, Steve Huffman, Jessica 
Livingston, Henry Lloyd-Baker, Bob Metcalfe, Ben Miller, Robert Morris, Michael Nielsen, Courtenay Pipkin, Joris 
Poort, Mieke Roos, Rajat Suri, Harj T aggar, Garry T an, and my younger son for suggestions and for reading drafts. 
How to Get New Ideas - # 216
January 2023
(Someone fed my essays into GPT to make something that could answer questions based on 
them, then asked it where good ideas come from. The answer was ok, but not what I would 
have said.","In the arts it's obvious how: blow your own glass, edit your 
own films, stage your own plays. And in the process pay close attention to accidents and to new 
ideas you have on the fly . This technique can be generalized to any sort of work: if you're an 
outsider, don't be ruled by plans. Planning is often just a weakness forced on those who 
delegate.
Is there a general rule for finding problems best solved in one head? Well, you can manufacture 
them by taking any project usually done by multiple people and trying to do it all yourself. 
Wozniak's work was a classic example: he did everything himself, hardware and software, and 
the result was miraculous. He claims not one bug was ever found in the Apple II, in either 
hardware or software.","If 
you're at the leading edge of a field that's changing rapidly , your ideas about what's sexy will be 
somewhat correlated with what's valuable in practice. Particularly as you get older and more 
experienced. Plus if you find an idea sexy , you'll work on it more enthusiastically . [13]
Recipes
While the best way to discover startup ideas is to become the sort of person who has them and 
then build whatever interests you, sometimes you don't have that luxury . Sometimes you need 
an idea now. For example, if you're working on a startup and your initial idea turns out to be bad.
For the rest of this essay I'll talk about tricks for coming up with startup ideas on demand. 
Although empirically you're better off using the organic strategy , you could succeed this way . 
Y ou just have to be more disciplined.","for 
all four has been the same.
Here it is: I like to find (a) simple solutions (b) to overlooked problems (c) that actually need to 
be solved, and (d) deliver them as informally as possible, (e) starting with a very crude version 
1, then (f) iterating rapidly .
When I first laid out these principles explicitly , I noticed something striking: this is practically a 
recipe for generating a contemptuous initial reaction. Though simple solutions are better, they 
don't seem as impressive as complex ones. Overlooked problems are by definition problems 
that most people think don't matter. Delivering solutions in an informal way means that instead 
of judging something by the way it's presented, people have to actually understand it, which is 
more work. And starting with a crude version 1 means your initial effort is always small and 
incomplete.",0
"What key lessons from Paul Grahamâ€™s essays could be applied to managing a team effectively in a fast-paced, high-growth startup environment?","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","They could end up on a local 
maximum. But in practice that never happens. Having to hit a growth number every week forces 
founders to act, and acting versus not acting is the high bit of succeeding. Nine times out of ten, 
sitting around strategizing is just a form of procrastination. Whereas founders' intuitions about 
which hill to climb are usually better than they realize. Plus the maxima in the space of startup 
ideas are not spiky and isolated. Most fairly good ideas are adjacent to even better ones.
The fascinating thing about optimizing for growth is that it can actually discover startup ideas. 
Y ou can use the need for growth as a form of evolutionary pressure. If you start out with some 
initial plan and modify it as necessary to keep hitting, say , 10% weekly growth, you may end up 
with a quite different company than you meant to start.","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","6. That the speakers at YC were so consistent in their advice.
Actually , I've noticed this too. I always worry the speakers will put us in an embarrassing 
position by contradicting what we tell the startups, but it happens surprisingly rarely .
When I asked her what specific things she remembered speakers always saying, she 
mentioned: that the way to succeed was to launch something fast, listen to users, and then 
iterate; that startups required resilience because they were always an emotional rollercoaster; 
and that most VCs were sheep.
I've been impressed by how consistently the speakers advocate launching fast and iterating. 
That was contrarian advice 10 years ago, but it's clearly now the established practice.
7. How casual successful startup founders are.
Most of the famous founders in Silicon Valley are people you'd overlook on the street. It's not 
merely that they don't dress up.","We've always 
encouraged founders to see a startup idea as a hypothesis rather than a blueprint. And yet 
they're still surprised how well it works to change the idea. Normally if you complain about 
something being hard, the general advice is to work harder. With a startup, I think you should 
find a problem that's easy for you to solve. Optimizing in solution-space is familiar and 
straightforward, but you can make enormous gains playing around in problem-space. Whereas 
mere determination, without flexibility , is a greedy algorithm that may get you nothing more than 
a mediocre local maximum: When someone is determined, there's still a danger that they'll 
follow a long, hard path that ultimately leads nowhere. Y ou want to push forward, but at the 
same time twist and turn to find the most promising path. One founder put it very succinctly: 
Fast iteration is the key to success.","They had 
discovered an interesting new idea, and they just couldn't let it go.
Mundane as it sounds, that's the most powerful motivator of all, not just in startups, but in most 
ambitious undertakings: to be genuinely interested in what you're building. This is what really 
drives billionaires, or at least the ones who become billionaires from starting companies. The 
company is their project.
One thing few people realize about billionaires is that all of them could have stopped sooner. 
They could have gotten acquired, or found someone else to run the company . Many founders 
do. The ones who become really rich are the ones who keep working. And what makes them 
keep working is not just money . What keeps them working is the same thing that keeps anyone 
else working when they could stop if they wanted to: that there's nothing else they'd rather do.","Getting work makes him a successful actor, but he doesn't only become an 
actor when he's successful.
So the real question is not what growth rate makes a company a startup, but what growth rate 
successful startups tend to have. For founders that's more than a theoretical question, because 
it's equivalent to asking if they're on the right path.
The growth of a successful startup usually has three phases: There's an initial period of slow or 
no growth while the startup tries to figure out what it's doing.
 As the startup figures out how to make something lots of people want and how to reach those 
people, there's a period of rapid growth.
 Eventually a successful startup will grow into a big company . Growth will slow, partly due to 
internal limits and partly because the company is starting to bump up against the limits of the 
markets it serves. [5] T ogether these three phases produce an S-curve.","Thanks to Marc Andreessen, Sam Altman, Patrick Collison, Ron Conway , Chris Dixon, Alfred Lin, Ben Horowitz, 
Steve Huffman, Jessica Livingston, Greg Mcadoo, Andrew Mason, Geoff Ralston, Y uri Sagalov, Emmett Shear, Rajat 
Suri, Garry T an, Albert Wenger, Fred Wilson, and Qasar Y ounis for reading drafts of this.
Do Things that Don-t Scale - # 152
 Want to start a startup? Get funded by Y Combinator. 
 July 2013
One of the most common types of advice we give at Y Combinator is to do things that don't 
scale. A lot of would-be founders believe that startups either take off or don't. Y ou build 
something, make it available, and if you've made a better mousetrap, people beat a path to your 
door as promised.","Mark Zuckerberg didn't succeed because he was an 
expert on startups. He succeeded despite being a complete noob at startups, because he 
understood his users really well.
If you don't know anything about, say , how to raise an angel round, don't feel bad on that 
account. That sort of thing you can learn when you need to, and forget after you've done it.
In fact, I worry it's not merely unnecessary to learn in great detail about the mechanics of 
startups, but possibly somewhat dangerous. If I met an undergrad who knew all about 
convertible notes and employee agreements and (God forbid) class FF stock, I wouldn't think 
""here is someone who is way ahead of their peers."" It would set off alarms. Because another of 
the characteristic mistakes of young founders is to go through the motions of starting a startup.",0
"If you were designing a startup incubator program, which specific principles from Paul Grahamâ€™s essays would you include, and how would they shape the program?","Incubators were conspicuous failures during the Bubble. There's still debate about whether this 
was because of the Bubble, or because they're a bad idea. My vote is they're a bad idea. I think 
they fail because they select for the wrong people. When we were starting a startup, we would 
never have taken funding from an ""incubator."" We can find office space, thanks; just give us the 
money . And people with that attitude are the ones likely to succeed in startups.
Indeed, one quality all the founders shared this summer was a spirit of independence. I've been 
wondering about that. Are some people just a lot more independent than others, or would 
everyone be this way if they were allowed to?
As with most nature/nurture questions, the answer is probably: some of each.","What is an incubator? I'm not sure myself. The defining quality seems to be that you work in 
their space. That's where the name ""incubator"" comes from. They seem to vary a great deal in 
other respects. At one extreme is the sort of pork-barrel project where a town gets money from 
the state government to renovate a vacant building as a ""high-tech incubator,"" as if it were 
merely lack of the right sort of office space that had till now prevented the town from becoming 
a startup hub. At the other extreme are places like Idealab, which generates ideas for new 
startups internally and hires people to work for them.
The classic Bubble incubators, most of which now seem to be dead, were like VC firms except 
that they took a much bigger role in the startups they funded.","In addition to working in their 
space, you were supposed to use their office staff, lawyers, accountants, and so on.
Whereas incubators tend (or tended) to exert more control than VCs, Y Combinator exerts less. 
And we think it's better if startups operate out of their own premises, however crappy , than the 
offices of their investors. So it's annoying that we keep getting called an ""incubator,"" but 
perhaps inevitable, because there's only one of us so far and no word yet for what we are. If we 
have to be called something, the obvious name would be ""excubator."" (The name is more 
excusable if one considers it as meaning that we enable people to escape cubicles.)
Because seed firms are companies rather than individual people, reaching them is easier than 
reaching angels. Just go to their web site and send them an email.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.","It's 
more efficient for us, and better for the startups too.
Several groups said our weekly dinners saved them from a common problem afflicting startups: 
working so hard that one has no social life. (I remember that part all too well.) This way , they 
were guaranteed a social event at least once a week.
Independence
I've heard Y Combinator described as an ""incubator."" Actually we're the opposite: incubators 
exert more control than ordinary VCs, and we make a point of exerting less. Among other 
things, incubators usually make you work in their office-- that's where the word ""incubator"" 
comes from. That seems the wrong model. If investors get too involved, they smother one of the 
most powerful forces in a startup: the feeling that it's your own company .
Incubators were conspicuous failures during the Bubble.","What would be a great idea for someone else to do as a startup?
4. Derivative Idea
Many of the applications we get are imitations of some existing company . That's one source of 
ideas, but not the best. If you look at the origins of successful startups, few were started in 
imitation of some other startup. Where did they get their ideas? Usually from some specific, 
unsolved problem the founders identified.
Our startup made software for making online stores. When we started it, there wasn't any; the 
few sites you could order from were hand-made at great expense by web consultants. We knew 
that if online shopping ever took off, these sites would have to be generated by software, so we 
wrote some. Pretty straightforward.
It seems like the best problems to solve are ones that affect you personally .","Alas, you can't; you have to keep looking for more investors, if only to get this one to act. [4]
Seed Funding Firms
Seed firms are like angels in that they invest relatively small amounts at early stages, but like 
VCs in that they're companies that do it as a business, rather than individuals making 
occasional investments on the side.
Till now, nearly all seed firms have been so-called ""incubators,"" so Y Combinator gets called 
one too, though the only thing we have in common is that we invest in the earliest phase.
According to the National Association of Business Incubators, there are about 800 incubators in 
the US. This is an astounding number, because I know the founders of a lot of startups, and I 
can't think of one that began in an incubator.
What is an incubator? I'm not sure myself.","But anything that grows consistently at 
10% a week is almost certainly a better idea than you started with.
There's a parallel here to small businesses. Just as the constraint of being located in a 
particular neighborhood helps define a bar, the constraint of growing at a certain rate can help 
define a startup.
Y ou'll generally do best to follow that constraint wherever it leads rather than being influenced 
by some initial vision, just as a scientist is better off following the truth wherever it leads rather 
than being influenced by what he wishes were the case. When Richard Feynman said that the 
imagination of nature was greater than the imagination of man, he meant that if you just keep 
following the truth you'll discover cooler things than you could ever have made up. For startups, 
growth is a constraint much like truth. Every successful startup is at least partly a product of the 
imagination of growth.","Thanks to Sam Altman, Ron Conway , Daniel Gackle, Jessica Livingston, Robert Morris, Geoff Ralston, and Fred 
Wilson for reading drafts of this.
Before the Startup - # 156
 Want to start a startup? Get funded by Y Combinator. 
 October 2014
(This essay is derived from a guest lecture in Sam Altman's startup class at Stanford. It's 
intended for college students, but much of it is applicable to potential founders at other ages.)
One of the advantages of having kids is that when you have to give advice, you can ask 
yourself ""what would I tell my own kids?"" My kids are little, but I can imagine what I'd tell them 
about startups if they were in college, and that's what I'm going to tell you.
Startups are very counterintuitive. I'm not sure why .",0
How would you use Paul Grahamâ€™s principles on writing clearly and persuasively to improve your ability to communicate complex technical or business concepts?,"For example, you can't expect an idea to be novel to 
everyone. Any insight that you have will probably have already been had by at least one of the 
world's 7 billion people. But it's sufficient if an idea is novel to a lot of readers.
Ditto for correctness, importance, and strength. In effect the four components are like numbers 
you can multiply together to get a score for usefulness. Which I realize is almost awkwardly 
reductive, but nonetheless true.
_____
How can you ensure that the things you say are true and novel and important? Believe it or not, 
there is a trick for doing this. I learned it from my friend Robert Morris, who has a horror of 
saying anything dumb. His trick is not to say anything unless he's sure it's worth hearing. This 
makes it hard to get opinions out of him, but when you do, they're usually right.","It's easy to satisfy one if you ignore the 
other. The converse of vaporous academic writing is the bold, but false, rhetoric of 
demagogues. Useful writing is bold, but true.
It's also two other things: it tells people something important, and that at least some of them 
didn't already know.
T elling people something they didn't know doesn't always mean surprising them. Sometimes it 
means telling them something they knew unconsciously but had never put into words. In fact 
those may be the more valuable insights, because they tend to be more fundamental.
Let's put them all together. Useful writing tells people something true and important that they 
didn't already know, and tells them as unequivocally as possible.
Notice these are all a matter of degree. For example, you can't expect an idea to be novel to 
everyone.","What an opportunity , I thought; these impressive things 
seem easy to me; I must be pretty sharp. Wrong. It was simply a fad. The books the professors 
wrote about expert systems are now ignored. They were not even on a path to anything 
interesting. And the customers paying so much for them were largely the same government 
agencies that paid thousands for screwdrivers and toilet seats.
How do you avoid copying the wrong things? Copy only what you genuinely like. That would 
have saved me in all three cases. I didn't enjoy the short stories we had to read in English 
classes; I didn't learn anything from philosophy papers; I didn't use expert systems myself. I 
believed these things were good because they were admired.
It can be hard to separate the things you like from the things you're impressed with. One trick is 
to ignore presentation.","[29] It may be helpful always to walk or run the same route, because that frees attention for thinking. It feels that way 
to me, and there is some historical evidence for it.
Thanks to T revor Blackwell, Daniel Gackle, Pam Graham, T om Howard, Patrick Hsu, Steve Huffman, Jessica 
Livingston, Henry Lloyd-Baker, Bob Metcalfe, Ben Miller, Robert Morris, Michael Nielsen, Courtenay Pipkin, Joris 
Poort, Mieke Roos, Rajat Suri, Harj T aggar, Garry T an, and my younger son for suggestions and for reading drafts. 
How to Get New Ideas - # 216
January 2023
(Someone fed my essays into GPT to make something that could answer questions based on 
them, then asked it where good ideas come from. The answer was ok, but not what I would 
have said.","But I don't 
think this is a component of usefulness. It's more a matter of consideration for the reader. And 
it's a practical aid in getting things right; a mistake is more obvious when expressed in simple 
language. But I'll admit that the main reason I write simply is not for the reader's sake or 
because it helps get things right, but because it bothers me to use more or fancier words than I 
need to. It seems inelegant, like a program that's too long.
I realize florid writing works for some people. But unless you're sure you're one of them, the 
best advice is to write as simply as you can.
_____
I believe the formula I've given you, importance + novelty + correctness + strength, is the recipe 
for a good essay . But I should warn you that it's also a recipe for making people mad.
The root of the problem is novelty .","If writing down your ideas always makes them more precise 
and more complete, then no one who hasn't written about a topic has fully formed ideas about 
it. And someone who never writes has no fully formed ideas about anything nontrivial.
It feels to them as if they do, especially if they're not in the habit of critically examining their own 
thinking. Ideas can feel complete. It's only when you try to put them into words that you discover 
they're not. So if you never subject your ideas to that test, you'll not only never have fully formed 
ideas, but also never realize it.
Putting ideas into words is certainly no guarantee that they'll be right. Far from it. But though it's 
not a sufficient condition, it is a necessary one.
Notes:
[1] Machinery and circuits are formal languages.
[2] I thought of this sentence as I was walking down the street in Palo Alto.","I learned some useful things at Interleaf, though they were mostly about what not to do. I 
learned that it's better for technology companies to be run by product people than sales people 
(though sales is a real skill and people who are good at it are really good at it), that it leads to 
bugs when code is edited by too many people, that cheap office space is no bargain if it's 
depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic 
customers are a dangerous source of money , and that there's not much overlap between 
conventional office hours and the optimal time for hacking, or conventional offices and the 
optimal place for it.","And there is, as far 
as I know, no substitute for this kind of discovery . T alking about your ideas with other people is a 
good way to develop them. But even after doing this, you'll find you still discover new things 
when you sit down to write. There is a kind of thinking that can only be done by writing.
There are of course kinds of thinking that can be done without writing. If you don't need to go 
too deeply into a problem, you can solve it without writing. If you're thinking about how two 
pieces of machinery should fit together, writing about it probably won't help much. And when a 
problem can be described formally , you can sometimes solve it in your head. But if you need to 
solve a complicated, ill-defined problem, it will almost always help to write about it.","Y ou don't need complex sentences to express complex ideas. When specialists in some 
abstruse topic talk to one another about ideas in their field, they don't use sentences any more 
complex than they do when talking about what to have for lunch. They use different words, 
certainly . But even those they use no more than necessary . And in my experience, the harder 
the subject, the more informally experts speak. Partly , I think, because they have less to prove, 
and partly because the harder the ideas you're talking about, the less you can afford to let 
language get in the way .
Informal language is the athletic clothing of ideas.
I'm not saying spoken language always works best. Poetry is as much music as text, so you can 
say things you wouldn't say in conversation. And there are a handful of writers who can get 
away with using fancy language in prose.","What's really going on is that you have different 
expectations for yourself. Y ou're like a parent saying to a child ""we can sit here all night till you 
eat your vegetables."" Except you're the child too.
I'm not saying no mistake gets through. For example, I added condition (c) in ""A Way to Detect 
Bias"" after readers pointed out that I'd omitted it. But in practice you can catch nearly all of them.
There's a trick for getting importance too. It's like the trick I suggest to young founders for 
getting startup ideas: to make something you yourself want. Y ou can use yourself as a proxy for 
the reader. The reader is not completely unlike you, so if you write about topics that seem 
important to you, they'll probably seem important to a significant number of readers as well.
Importance has two factors.",0
What strategies from Paul Grahamâ€™s essay on procrastination could be applied to improve personal time management and increase efficiency in creative work?,"I'm trying other strategies now, but I 
think this time I'll wait till I'm sure they work before writing about them.
May 2008
Procrastination feeds on distractions. Most people find it uncomfortable just to sit and do 
nothing; you avoid work by doing something else.
So one way to beat procrastination is to starve it of distractions. But that's not as straightforward 
as it sounds, because there are people working hard to distract you. Distraction is not a static 
obstacle that you avoid like you might avoid a rock in the road. Distraction seeks you out.
Chesterfield described dirt as matter out of place. Distracting is, similarly , desirable at the wrong 
time. And technology is continually being refined to produce more and more desirable things. 
Which means that as we learn to avoid one class of distractions, new ones constantly appear, 
like drug-resistant bacteria.","No matter 
what you work on, you're not working on everything else. So the question is not how to avoid 
procrastination, but how to procrastinate well.
There are three variants of procrastination, depending on what you do instead of working on 
something: you could work on (a) nothing, (b) something less important, or (c) something more 
important. That last type, I'd argue, is good procrastination.
That's the ""absent-minded professor,"" who forgets to shave, or eat, or even perhaps look where 
he's going while he's thinking about some interesting question. His mind is absent from the 
everyday world because it's hard at work in another.
That's the sense in which the most impressive people I know are all procrastinators. They're 
type-C procrastinators: they put off working on small stuff to work on big stuff.
What's ""small stuff?""","Y ou're ""getting things done."" Just the wrong things.
Any advice about procrastination that concentrates on crossing things off your to-do list is not 
only incomplete, but positively misleading, if it doesn't consider the possibility that the to-do list 
is itself a form of type-B procrastination. In fact, possibility is too weak a word. Nearly 
everyone's is. Unless you're working on the biggest things you could be working on, you're type-
B procrastinating, no matter how much you're getting done.
In his famous essay Y ou and Y our Research (which I recommend to anyone ambitious, no 
matter what they're working on), Richard Hamming suggests that you ask yourself three 
questions: What are the most important problems in your field?
 Are you working on one of them?
 Why not? Hamming was at Bell Labs when he started asking such questions.","[8] Just as we overestimate what we can do in a day and underestimate what we can do over several years, we 
overestimate the damage done by procrastinating for a day and underestimate the damage done by procrastinating 
for several years.
[9] Y ou can't usually get paid for doing exactly what you want, especially early on. There are two options: get paid for 
doing work close to what you want and hope to push it closer, or get paid for doing something else entirely and do 
your own projects on the side. Both can work, but both have drawbacks: in the first approach your work is 
compromised by default, and in the second you have to fight to get time to do it.
[10] If you set your life up right, it will deliver the focus-relax cycle automatically . The perfect setup is an office you 
work in and that you walk to and from.","If you want to work on big things, you seem to have to trick yourself into doing it. Y ou have to 
work on small things that could grow into big things, or work on successively larger things, or 
split the moral load with collaborators. It's not a sign of weakness to depend on such tricks. The 
very best work has been done this way .
When I talk to people who've managed to make themselves work on big things, I find that all 
blow off errands, and all feel guilty about it. I don't think they should feel guilty . There's more to 
do than anyone could. So someone doing the best work they can is inevitably going to leave a 
lot of errands undone. It seems a mistake to feel bad about that.
I think the way to ""solve"" the problem of procrastination is to let delight pull you instead of 
making a to-do list push you.","Most people let them mix pretty promiscuously . The continuing popularity 
of religion is the most visible index of that.
[7] A more accurate metaphor would be to say that the graph of jobs is not very well connected.
Thanks to T revor Blackwell, Dan Friedman, Sarah Harlin, Jessica Livingston, Jackie McDonough, Robert Morris, 
Peter Norvig, David Sloo, and Aaron Swartz for reading drafts of this.
Good and Bad Procrastination - # 54
December 2005
The most impressive people I know are all terrible procrastinators. So could it be that 
procrastination isn't always bad?
Most people who write about procrastination write about how to cure it. But this is, strictly 
speaking, impossible. There are an infinite number of things you could be doing. No matter 
what you work on, you're not working on everything else.","(There's also a variant where one has no place to work. The cure is to visit the places where 
famous people worked, and see how unsuitable they were.)
I've used both these excuses at one time or another. I've learned a lot of tricks for making 
myself work over the last 20 years, but even now I don't win consistently . Some days I get real 
work done. Other days are eaten up by errands. And I know it's usually my fault: I let errands 
eat up the day , to avoid facing some hard problem.
The most dangerous form of procrastination is unacknowledged type-B procrastination, 
because it doesn't feel like procrastination. Y ou're ""getting things done."" Just the wrong things.","If that helps you discover something new, it may turn out not to have been a lie 
after all. [7]
Since there are two senses of starting work â€” per day and per project â€” there are also two 
forms of procrastination. Per-project procrastination is far the more dangerous. Y ou put off 
starting that ambitious project from year to year because the time isn't quite right. When you're 
procrastinating in units of years, you can get a lot not done. [8]
One reason per-project procrastination is so dangerous is that it usually camouflages itself as 
work. Y ou're not just sitting around doing nothing; you're working industriously on something 
else. So per-project procrastination doesn't set off the alarms that per-day procrastination does. 
Y ou're too busy to notice it.","Unproductive pleasures pall eventually . After a while you get tired of lying on the beach. If you 
want to stay happy , you have to do something.
As a lower bound, you have to like your work more than any unproductive pleasure. Y ou have to 
like what you do enough that the concept of ""spare time"" seems mistaken. Which is not to say 
you have to spend all your time working. Y ou can only work so much before you get tired and 
start to screw up. Then you want to do something else â€” even something mindless. But you 
don't regard this time as the prize and the time you spend working as the pain you endure to 
earn it.
I put the lower bound there for practical reasons. If your work is not your favorite thing to do, 
you'll have terrible problems with procrastination.","I sometimes suspect that 
responsibility is a trap and that the most virtuous route would be to shirk it, but regardless it's 
certainly constraining.
When you're an outsider you're constrained too, of course. Y ou're short of money , for example. 
But that constrains you in different ways. How does responsibility constrain you? The worst 
thing is that it allows you not to focus on real work. Just as the most dangerous forms of 
procrastination are those that seem like work, the danger of responsibilities is not just that they 
can consume a whole day , but that they can do it without setting off the kind of alarms you'd set 
off if you spent a whole day sitting on a park bench.
A lot of the pain of being an outsider is being aware of one's own procrastination. But this is 
actually a good thing.",0
"If you were tasked with restructuring a corporate work environment, how would you balance the differences between a makerâ€™s schedule and a managerâ€™s schedule?","We just took it 
for granted that we had to either blow our schedules or offend people. But now that I've realized 
what's going on, perhaps there's a third option: to write something explaining the two types of 
schedule. Maybe eventually , if the conflict between the manager's schedule and the maker's 
schedule starts to be more widely understood, it will become less of a problem.
Those of us on the maker's schedule are willing to compromise. We know we have to have 
some number of meetings. All we ask from those on the manager's schedule is that they 
understand the cost.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Jessica Livingston, and Robert Morris 
for reading drafts of this.
Related:
A Local Revolution- - # 113
April 2009
Recently I realized I'd been holding two ideas in my head that would explode if combined.","Thanks to Jessica Livingston for reading drafts of this.
Maker-s Schedule- Manager-s Schedule  - # 114
 --> ""...the mere consciousness of an engagement will sometimes worry a whole day .""
Ã¿Ã½ Charles Dickens July 2009
One reason programmers dislike meetings so much is that they're on a different type of 
schedule from other people. Meetings cost them more.
There are two types of schedule, which I'll call the manager's schedule and the maker's 
schedule. The manager's schedule is for bosses. It's embodied in the traditional appointment 
book, with each day cut into one hour intervals. Y ou can block off several hours for a single task 
if you need to, but by default you change what you're doing every hour.
When you use time that way , it's merely a practical problem to meet with someone. Find an 
open slot in your schedule, book them, and you're done.","Find an 
open slot in your schedule, book them, and you're done.
Most powerful people are on the manager's schedule. It's the schedule of command. But there's 
another way of using time that's common among people who make things, like programmers 
and writers. They generally prefer to use time in units of half a day at least. Y ou can't write or 
program well in units of an hour. That's barely enough time to get started.
When you're operating on the maker's schedule, meetings are a disaster. A single meeting can 
blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. 
Plus you have to remember to go to the meeting. That's no problem for someone on the 
manager's schedule. There's always something coming on the next hour; the only question is 
what.","There's always something coming on the next hour; the only question is 
what. But when someone on the maker's schedule has a meeting, they have to think about it.
For someone on the maker's schedule, having a meeting is like throwing an exception. It 
doesn't merely cause you to switch from one task to another; it changes the mode in which you 
work.
I find one meeting can sometimes affect a whole day . A meeting commonly blows at least half a 
day , by breaking up a morning or afternoon. But in addition there's sometimes a cascading 
effect. If I know the afternoon is going to be broken up, I'm slightly less likely to start something 
ambitious in the morning. I know this may sound oversensitive, but if you're a maker, think of 
your own case.","Then I'd sleep till about 11 am, and come in and work until dinner on 
what I called ""business stuff."" I never thought of it in these terms, but in effect I had two 
workdays each day , one on the manager's schedule and one on the maker's.
When you're operating on the manager's schedule you can do something you'd never want to 
do on the maker's: you can have speculative meetings. Y ou can meet someone just to get to 
know one another. If you have an empty slot in your schedule, why not? Maybe it will turn out 
you can help one another in some way .
Business people in Silicon Valley (and the whole world, for that matter) have speculative 
meetings all the time. They're effectively free if you're on the manager's schedule.","But Y Combinator runs on the maker's schedule. Rtm and T revor and I do 
because we always have, and Jessica does too, mostly , because she's gotten into sync with us.
I wouldn't be surprised if there start to be more companies like us. I suspect founders may 
increasingly be able to resist, or at least postpone, turning into managers, just as a few 
decades ago they started to be able to resist switching from jeans to suits.
How do we manage to advise so many startups on the maker's schedule? By using the classic 
device for simulating the manager's schedule within the maker's: office hours. Several times a 
week I set aside a chunk of time to meet founders we've funded.","Don't your spirits rise at the thought of having an entire day free to work, with no 
appointments at all? Well, that means your spirits are correspondingly depressed when you 
don't. And ambitious projects are by definition close to the limits of your capacity . A small 
decrease in morale is enough to kill them off.
Each type of schedule works fine by itself. Problems arise when they meet. Since most powerful 
people operate on the manager's schedule, they're in a position to make everyone resonate at 
their frequency if they want to. But the smarter ones restrain themselves, if they know that some 
of the people working for them need long chunks of time to work in.
Our case is an unusual one. Nearly all investors, including all VCs I know, operate on the 
manager's schedule. But Y Combinator runs on the maker's schedule.","Several times a 
week I set aside a chunk of time to meet founders we've funded. These chunks of time are at 
the end of my working day , and I wrote a signup program that ensures all the appointments 
within a given set of office hours are clustered at the end. Because they come at the end of my 
day these meetings are never an interruption. (Unless their working day ends at the same time 
as mine, the meeting presumably interrupts theirs, but since they made the appointment it must 
be worth it to them.) During busy periods, office hours sometimes get long enough that they 
compress the day , but they never interrupt it.
When we were working on our own startup, back in the 90s, I evolved another trick for 
partitioning the day . I used to program from dinner till about 3 am every day , because at night no 
one could interrupt me.","If employees have to be in the building a certain number of hours 
a day , and are forbidden to do non-work things while there, then they must be working. In 
theory . In practice they spend a lot of their time in a no-man's land, where they're neither 
working nor having fun.
If you could measure how much work people did, many companies wouldn't need any fixed 
workday . Y ou could just say: this is what you have to do. Do it whenever you like, wherever you 
like. If your work requires you to talk to other people in the company , then you may need to be 
here a certain amount. Otherwise we don't care.
That may seem utopian, but it's what we told people who came to work for our company . There 
were no fixed office hours. I never showed up before 11 in the morning.","The worst thing is not the hours but the responsibility . Programmers and system administrators 
traditionally each have their own separate worries. Programmers have to worry about bugs, and 
system administrators have to worry about infrastructure. Programmers may spend a long day 
up to their elbows in source code, but at some point they get to go home and forget about it. 
System administrators never quite leave the job behind, but when they do get paged at 4:00 
AM, they don't usually have to do anything very complicated. With Web-based applications, 
these two kinds of stress get combined. The programmers become system administrators, but 
without the sharply defined limits that ordinarily make the job bearable.
At Viaweb we spent the first six months just writing software. We worked the usual long hours of 
an early startup.",0
"Do you agree with Paul Grahamâ€™s assertion that startups should prioritize rapid growth over early revenue, or do you believe this approach has significant risks?","It sounds benevolent to say we ought to reduce economic inequality . When you phrase it that 
way , who can argue with you? Inequality has to be bad, right? It sounds a good deal less 
benevolent to say we ought to reduce the rate at which new companies are founded. And yet 
the one implies the other.
Indeed, it may be that reducing investors' appetite for risk doesn't merely kill off larval startups, 
but kills off the most promising ones especially . Startups yield faster growth at greater risk than 
established companies. Does this trend also hold among startups? That is, are the riskiest 
startups the ones that generate most growth if they succeed? I suspect the answer is yes. And 
that's a chilling thought, because it means that if you cut investors' appetite for risk, the most 
beneficial startups are the first to go.","[8] Within YC when we say it's ipso facto right to do whatever gets you growth, it's implicit that this excludes trickery 
like buying users for more than their lifetime value, counting users as active when they're really not, bleeding out 
invites at a regularly increasing rate to manufacture a perfect growth curve, etc. Even if you were able to fool 
investors with such tricks, you'd ultimately be hurting yourself, because you're throwing off your own compass.
[9] Which is why it's such a dangerous mistake to believe that successful startups are simply the embodiment of 
some brilliant initial idea. What you're looking for initially is not so much a great idea as an idea that could evolve into 
a great one. The danger is that promising ideas are not merely blurry versions of great ones.","Fundamentally that's how the most successful startups view fundraising. 
They could grow the company on its own revenues, but the extra money and help supplied by 
VCs will let them grow even faster. Raising money lets you choose your growth rate.
Money to grow faster is always at the command of the most successful startups, because the 
VCs need them more than they need the VCs. A profitable startup could if it wanted just grow 
on its own revenues. Growing slower might be slightly dangerous, but chances are it wouldn't 
kill them. Whereas VCs need to invest in startups, and in particular the most successful 
startups, or they'll be out of business. Which means that any sufficiently promising startup will 
be offered money on terms they'd be crazy to refuse. And yet because of the scale of the 
successes in the startup business, VCs can still make money from such investments.","They could end up on a local 
maximum. But in practice that never happens. Having to hit a growth number every week forces 
founders to act, and acting versus not acting is the high bit of succeeding. Nine times out of ten, 
sitting around strategizing is just a form of procrastination. Whereas founders' intuitions about 
which hill to climb are usually better than they realize. Plus the maxima in the space of startup 
ideas are not spiky and isolated. Most fairly good ideas are adjacent to even better ones.
The fascinating thing about optimizing for growth is that it can actually discover startup ideas. 
Y ou can use the need for growth as a form of evolutionary pressure. If you start out with some 
initial plan and modify it as necessary to keep hitting, say , 10% weekly growth, you may end up 
with a quite different company than you meant to start.","[1] But investors are so 
fickle that you can never do more than start to count on them. Sometimes something about your 
business will spook investors even if your growth is great. So no matter how good your growth 
is, you can never safely treat fundraising as more than a plan A. Y ou should always have a plan 
B as well: you should know (as in write down) precisely what you'll need to do to survive if you 
can't raise more money , and precisely when you'll have to switch to plan B if plan A isn't working.
In any case, growing fast versus operating cheaply is far from the sharp dichotomy many 
founders assume it to be. In practice there is surprisingly little connection between how much a 
startup spends and how fast it grows. When a startup grows fast, it's usually because the 
product hits a nerve, in the sense of hitting some big need straight on.","We're only comparing YC startups, who've already made 
it over a certain threshold.
[7] But not all are. Though most VCs are suits at heart, the most successful ones tend not to be. Oddly enough, the 
best VCs tend to be the least VC-like.
Thanks to T revor Blackwell, David Hornik, Jessica Livingston, Robert Morris, and Fred Wilson for reading drafts of 
this.
The Pooled-Risk Company Management Company 
- # 96
July 2008
At this year's startup school, David Heinemeier Hansson gave a talk in which he suggested that 
startup founders should do things the old fashioned way . Instead of hoping to get rich by 
building a valuable company and then selling stock in a ""liquidity event,"" founders should start 
companies that make money and live off the revenues.
Sounds like a good plan. Let's think about the optimal way to do this.","Growth is why VCs want to invest in startups: not just because the returns are high but also 
because generating returns from capital gains is easier to manage than generating returns from 
dividends. Growth explains why the most successful startups take VC money even if they don't 
need to: it lets them choose their growth rate. And growth explains why successful startups 
almost invariably get acquisition offers. T o acquirers a fast-growing company is not merely 
valuable but dangerous too.
It's not just that if you want to succeed in some domain, you have to understand the forces 
driving it. Understanding growth is what starting a startup consists of. What you're really doing 
(and to the dismay of some observers, all you're really doing) when you start a startup is 
committing to solve a harder type of problem than ordinary businesses do.","[6] This is, obviously , only for startups that have already launched or can launch during YC. A startup building a new 
database will probably not do that. On the other hand, launching something small and then using growth rate as 
evolutionary pressure is such a valuable technique that any company that could start this way probably should.
[7] If the startup is taking the Facebook/T witter route and building something they hope will be very popular but from 
which they don't yet have a definite plan to make money , the growth rate has to be higher, even though it's a proxy for 
revenue growth, because such companies need huge numbers of users to succeed at all.
Beware too of the edge case where something spreads rapidly but the churn is high as well, so that you have good 
net growth till you run through all the potential users, at which point it suddenly stops.","People start startups in the hope of becoming 
much richer than they were before. And if your society tries to prevent anyone from being much 
richer than anyone else, it will also prevent one person from being much richer at t2 than t1.
Growth
This argument applies proportionately . It's not just that if you eliminate economic inequality , you 
get no startups. T o the extent you reduce economic inequality , you decrease the number of 
startups. [4] Increase taxes, and willingness to take risks decreases in proportion.
And that seems bad for everyone. New technology and new jobs both come disproportionately 
from new companies. Indeed, if you don't have startups, pretty soon you won't have established 
companies either, just as, if you stop having kids, pretty soon you won't have any adults.
It sounds benevolent to say we ought to reduce economic inequality .","3. Let your idea evolve.
This is the second half of launching fast. Launch fast and iterate. It's a big mistake to treat a 
startup as if it were merely a matter of implementing some brilliant initial idea. As in an essay , 
most of the ideas appear in the implementing.
4. Understand your users.
Y ou can envision the wealth created by a startup as a rectangle, where one side is the number 
of users and the other is how much you improve their lives. [2] The second dimension is the one 
you have most control over. And indeed, the growth in the first will be driven by how well you do 
in the second. As in science, the hard part is not answering questions but asking them: the hard 
part is seeing something new that users lack. The better you understand them the better the 
odds of doing that.",0
"What are the potential risks or drawbacks of following Paul Grahamâ€™s fundraising advice too rigidly, and how might different industries require unique approaches?","Don't listen to them.
Don't make things complicated.
I realize it may seem odd to sum up this huge treatise by saying that my overall advice is not to 
make fundraising too complicated, but if you go back and look at this list you'll see it's basically 
a simple recipe with a lot of implications and edge cases. Avoid investors till you decide to raise 
money , and then when you do, talk to them all in parallel, prioritized by expected value, and 
accept offers greedily . That's fundraising in one sentence. Don't introduce complicated 
optimizations, and don't let investors introduce complications either.
Fundraising is not what will make you successful. It's just a means to an end.","When your fundraising options run out, they usually run out 
in the same way . Don't keep sucking on the straw if you're just getting air. It's not going to get 
better.
Don't get addicted to fundraising.
Fundraising is a chore for most founders, but some find it more interesting than working on their 
startup. The work at an early stage startup often consists of unglamorous schleps. Whereas 
fundraising, when it's going well, can be quite the opposite. Instead of sitting in your grubby 
apartment listening to users complain about bugs in your software, you're being offered millions 
of dollars by famous investors over lunch at a nice restaurant. [26]
The danger of fundraising is particularly acute for people who are good at it. It's always fun to 
work on something you're good at. If you're one of these people, beware.","Others skip phase 1 
and go straight to phase 2. And at Y Combinator we get an increasing number of companies 
that have already raised amounts in the hundreds of thousands. But the three phase path is at 
least the one about which individual startups' paths oscillate.
This essay focuses on phase 2 fundraising. That's the type the startups we fund are doing on 
Demo Day , and this essay is the advice we give them.
Forces
Fundraising is hard in both senses: hard like lifting a heavy weight, and hard like solving a 
puzzle. It's hard like lifting a weight because it's intrinsically hard to convince people to part with 
large sums of money . That problem is irreducible; it should be hard. But much of the other kind 
of difficulty can be eliminated.","T o emphasize the distinction I'm 
going to name them: type A fundraising is when you don't need money , and type B fundraising 
is when you do.
Inexperienced founders read about famous startups doing what was type A fundraising, and 
decide they should raise money too, since that seems to be how startups work. Except when 
they raise money they don't have a clear path to profitability and are thus doing type B 
fundraising. And they are then surprised how difficult and unpleasant it is.
Of course not all startups can make it to ramen profitability in a few months. And some that 
don't still manage to have the upper hand over investors, if they have some other advantage like 
extraordinary growth numbers or exceptionally formidable founders. But as time passes it gets 
increasingly difficult to fundraise from a position of strength without being profitable. [19]
Don't optimize for valuation.","But much of the other kind 
of difficulty can be eliminated. Fundraising only seems a puzzle because it's an alien world to 
most founders, and I hope to fix that by supplying a map through it.
T o founders, the behavior of investors is often opaque â€” partly because their motivations are 
obscure, but partly because they deliberately mislead you. And the misleading ways of 
investors combine horribly with the wishful thinking of inexperienced founders. At YC we're 
always warning founders about this danger, and investors are probably more circumspect with 
YC startups than with other companies they talk to, and even so we witness a constant series 
of explosions as these two volatile components combine. [1]
If you're an inexperienced founder, the only way to survive is by imposing external constraints 
on yourself. Y ou can't trust your intuitions.","If you're one of these people, beware. Fundraising is not 
what will make your company successful. Listening to users complain about bugs in your 
software is what will make you successful. And the big danger of getting addicted to fundraising 
is not merely that you'll spend too long on it or raise too much money . It's that you'll start to think 
of yourself as being already successful, and lose your taste for the schleps you need to 
undertake to actually be successful. Startups can be destroyed by this.
When I see a startup with young founders that is fabulously successful at fundraising, I mentally 
decrease my estimate of the probability that they'll succeed. The press may be writing about 
them as if they'd been anointed as the next Google, but I'm thinking ""this is going to end badly .""
Don't raise too much.","Only raise the price on an investor you're comfortable 
with losing, because some will angrily refuse. [2]
The second reason investors like you more when you've had some success at fundraising is 
that it makes you more confident, and an investors' opinion of you is the foundation of their 
opinion of your company . Founders are often surprised how quickly investors seem to know 
when they start to succeed at raising money . And while there are in fact lots of ways for such 
information to spread among investors, the main vector is probably the founders themselves. 
Though they're often clueless about technology , most investors are pretty good at reading 
people. When fundraising is going well, investors are quick to sense it in your increased 
confidence. (This is one case where the average founder's inability to remain poker-faced works 
to your advantage.)","(Not all unpromising-seeming startups do badly . Some are merely ugly ducklings in the sense that they violate 
current startup fashions.)
[2] One YC founder told me: I think in general we've done ok at fundraising, but I managed to screw up twice at the 
exact same thing â€” trying to focus on building the company and fundraising at the same time. [3] There is one subtle 
danger you have to watch out for here, which I warn about later: beware of getting too high a valuation from an eager 
investor, lest that set an impossibly high target when raising additional money .
[4] If they really need a meeting, then they're not ready to invest, regardless of what they say . They're still deciding, 
which means you're being asked to come in and convince them. Which is fundraising.
[5] Associates at VC firms regularly cold email startups.","[1] But investors are so 
fickle that you can never do more than start to count on them. Sometimes something about your 
business will spook investors even if your growth is great. So no matter how good your growth 
is, you can never safely treat fundraising as more than a plan A. Y ou should always have a plan 
B as well: you should know (as in write down) precisely what you'll need to do to survive if you 
can't raise more money , and precisely when you'll have to switch to plan B if plan A isn't working.
In any case, growing fast versus operating cheaply is far from the sharp dichotomy many 
founders assume it to be. In practice there is surprisingly little connection between how much a 
startup spends and how fast it grows. When a startup grows fast, it's usually because the 
product hits a nerve, in the sense of hitting some big need straight on.","The salesperson asks you this not 
because you're supposed to have a plan to spend a specific amount, but so they can show you 
only things that cost the most you'll pay .
Similarly , when investors ask how much you plan to raise, it's not because you're supposed to 
have a plan. It's to see whether you'd be a suitable recipient for the size of investment they like 
to make, and also to judge your ambition, reasonableness, and how far you are along with 
fundraising.
If you're a wizard at fundraising, you can say ""We plan to raise a $7 million series A round, and 
we'll be accepting termsheets next tuesday ."" I've known a handful of founders who could pull 
that off without having VCs laugh in their faces.",0
"Does Paul Grahamâ€™s startup philosophy apply equally well outside of Silicon Valley, or is it too dependent on the venture capital ecosystem in that region?","And yet whatever argument you use to prove that 
startups don't need to move from London to Silicon Valley could equally well be used to prove 
startups don't need to move from smaller towns to London.
The difference between cities is a matter of degree. And if, as nearly everyone who knows 
agrees, startups are better off in Silicon Valley than Boston, then they're better off in Silicon 
Valley than everywhere else too.
I realize I might seem to have a vested interest in this conclusion, because startups that move 
to the US might do it through Y Combinator. But the American startups we've funded will attest 
that I say the same thing to them.
I'm not claiming of course that every startup has to go to Silicon Valley to succeed. Just that all 
other things being equal, the more of a startup hub a place is, the better startups will do there. 
But other considerations can outweigh the advantages of moving.","The first is that startups may represent a new economic phase, on the scale of the Industrial 
Revolution. I'm not sure of this, but there seems a decent chance it's true. People are 
dramatically more productive as founders or early employees of startupsâ€”imagine how much 
less Larry and Sergey would have achieved if they'd gone to work for a big companyâ€”and that 
scale of improvement can change social customs.
The second idea is that startups are a type of business that flourishes in certain places that 
specialize in itâ€”that Silicon Valley specializes in startups in the same way Los Angeles 
specializes in movies, or New Y ork in finance. [1]
What if both are true? What if startups are both a new economic phase and also a type of 
business that only flourishes in certain centers?
If so, this revolution is going to be particularly revolutionary . All previous revolutions have 
spread.","But ambition is human nature. 
Gradually it will re-emerge. [6]
How T o Do Better
I don't mean to suggest by this list that America is the perfect place for startups. It's the best 
place so far, but the sample size is small, and ""so far"" is not very long. On historical time scales, 
what we have now is just a prototype.
So let's look at Silicon Valley the way you'd look at a product made by a competitor. What 
weaknesses could you exploit? How could you make something users would like better? The 
users in this case are those critical few thousand people you'd like to move to your silicon valley .
T o start with, Silicon Valley is too far from San Francisco. Palo Alto, the original ground zero, is 
about thirty miles away , and the present center more like forty .","And that's why startups thrive in startup hubs like Silicon Valley . Startups are a very specialized 
business, as specialized as diamond cutting. And in startup hubs they understand it.
Notes:
[1] The nationalistic idea is the converse: that startups should stay in a certain city because of the country it's in. If 
you really have a ""one world"" viewpoint, deciding to move from London to Silicon Valley is no different from deciding 
to move from Chicago to Silicon Valley .
[2] An investor who merely seems like he will fund you, however, you can ignore. Seeming like they will fund you one 
day is the way investors say No.
Thanks to Sam Altman, Jessica Livingston, Harjeet T aggar, and Kulveer T aggar for reading drafts of this.
 Comment on this essay .
The Future of Web Startups - # 83
 Want to start a startup?","If I had to narrow that down, I'd say investors are the limiting factor. Not because they contribute 
more to the startup, but simply because they're least willing to move. They're rich. They're not 
going to move to Albuquerque just because there are some smart hackers there they could 
invest in. Whereas hackers will move to the Bay Area to find investors.
2. Angel investors are the most critical.
There are several types of investors. The two main categories are angels and VCs: VCs invest 
other people's money , and angels invest their own.
Though they're less well known, the angel investors are probably the more critical ingredient in 
creating a silicon valley . Most companies that VCs invest in would never have made it that far if 
angels hadn't invested first. VCs say between half and three quarters of companies that raise 
series A rounds have taken some outside investment already .","But even if Silicon Valley's encouraging attitude is rooted in self-interest, it has over time 
actually grown into a sort of benevolence. Encouraging startups has been practiced for so long 
that it has become a custom. Now it just seems that that's what one does with startups.
Maybe Silicon Valley is too optimistic. Maybe it's too easily fooled by impostors. Many less 
optimistic journalists want to believe that. But the lists of impostors they cite are suspiciously 
short, and plagued with asterisks. [2] If you use revenue as the test, Silicon Valley's optimism 
seems better tuned than the rest of the world's. And because it works, it will spread.
There's a lot more to new ideas than new startup ideas, of course. The fear of making 
something lame holds people back in every field. But Silicon Valley shows how quickly customs 
can evolve to support new ideas.","So although a lot of the newest companies in Silicon Valley don't make anything out of silicon, 
there always seem to be multiple links back to Shockley . There's a lesson here: startups beget 
startups. People who work for startups start their own. People who get rich from startups fund 
new ones. I suspect this kind of organic growth is the only way to produce a startup hub, 
because it's the only way to grow the expertise you need.
That has two important implications. The first is that you need time to grow a silicon valley . The 
university you could create in a couple years, but the startup community around it has to grow 
organically . The cycle time is limited by the time it takes a company to succeed, which probably 
averages about five years.
The other implication of the organic growth hypothesis is that you can't be somewhat of a 
startup hub.","So by agreeing to uncapped notes, VCs who don't care about valuations in angel rounds can make offers that super-
angels hate to match.
[7] Obviously signalling risk is also not a problem if you'll never need to raise more money . But startups are often 
mistaken about that.
Thanks to Sam Altman, John Bautista, Patrick Collison, James Lindenbaum, Reid Hoffman, Jessica Livingston and 
Harj T aggar for reading drafts of this.
Where to See Silicon Valley - # 131
 Want to start a startup? Get funded by Y Combinator. 
 October 2010
Silicon Valley proper is mostly suburban sprawl. At first glance it doesn't seem there's anything 
to see. It's not the sort of place that has conspicuous monuments. But if you look, there are 
subtle signs you're in a place that's different from other places.
1.","Boston's case illustrates the difficulty you'd have establishing a new startup hub this late in the 
game. If you wanted to create a startup hub by reproducing the way existing ones happened, 
the way to do it would be to establish a first-rate research university in a place so nice that rich 
people wanted to live there. Then the town would be hospitable to both groups you need: both 
founders and investors. That's the combination that yielded Silicon Valley . But Silicon Valley 
didn't have Silicon Valley to compete with. If you tried now to create a startup hub by planting a 
great university in a nice place, it would have a harder time getting started, because many of 
the best startups it produced would be sucked away to existing startup hubs.
Recently I suggested a potential shortcut: pay startups to move. Once you had enough good 
startups in one place, it would create a self-sustaining chain reaction.","Every other funding cycle is in Boston. And even though Boston is the second 
biggest startup hub in the US (and the world), we tell the startups from those cycles that their 
best bet is to move to Silicon Valley . If that's true of Boston, it's even more true of every other 
city .
This is about cities, not countries.
And I think I can prove I'm right. Y ou can easily reduce the opposing argument ad what most 
people would agree was absurdum. Few would be willing to claim that it doesn't matter at all 
where a startup isâ€”that a startup operating out of a small agricultural town wouldn't benefit 
from moving to a startup hub. Most people could see how it might be helpful to be in a place 
where there was infrastructure for startups, accumulated knowledge about how to make them 
work, and other people trying to do it.",0
"What counterarguments exist against Paul Grahamâ€™s views on economic inequality, and do you think he sufficiently addresses concerns about its negative effects?","If you want to understand economic inequality â€” and more importantly , if you actually want to 
fix the bad aspects of it â€” you have to tease apart the components. And yet the trend in nearly 
everything written about the subject is to do the opposite: to squash together all the aspects of 
economic inequality as if it were a single phenomenon.
Sometimes this is done for ideological reasons. Sometimes it's because the writer only has very 
high-level data and so draws conclusions from that, like the proverbial drunk who looks for his 
keys under the lamppost, instead of where he dropped them, because the light is better there. 
Sometimes it's because the writer doesn't understand critical aspects of inequality , like the role 
of technology in wealth creation. Much of the time, perhaps most of the time, writing about 
economic inequality combines all three.
___
The most common mistake people make about economic inequality is to treat it as a single 
phenomenon.","Nearly everyone who writes about the topic says that economic 
inequality should be decreased.
I'm interested in this question because I was one of the founders of a company called Y 
Combinator that helps people start startups. Almost by definition, if a startup succeeds, its 
founders become rich. Which means by helping startup founders I've been helping to increase 
economic inequality . If economic inequality should be decreased, I shouldn't be helping 
founders. No one should be.
But that doesn't sound right. What's going on here? What's going on is that while economic 
inequality is a single measure (or more precisely , two: variation in income, and variation in 
wealth), it has multiple causes. Many of these causes are bad, like tax loopholes and drug 
addiction. But some are good, like Larry Page and Sergey Brin starting the company you use to 
find things online.","One of the most important principles in Silicon Valley is that ""you make what you measure."" It 
means that if you pick some number to focus on, it will tend to improve, but that you have to 
choose the right number, because only the one you choose will improve; another that seems 
conceptually adjacent might not. For example, if you're a university president and you decide to 
focus on graduation rates, then you'll improve graduation rates. But only graduation rates, not 
how much students learn. Students could learn less, if to improve graduation rates you made 
classes easier.
Economic inequality is sufficiently far from identical with the various problems that have it as a 
symptom that we'll probably only hit whichever of the two we aim at. If we aim at economic 
inequality , we won't fix these problems. So I say let's aim at the problems.","Investors mainly contribute money , which in principle is the same no matter what the source. 
But the founders contribute ideas. Y ou can't replace those.
Let's rehearse the chain of argument so far. I'm heading for a conclusion to which many readers 
will have to be dragged kicking and screaming, so I've tried to make each link unbreakable. 
Decreasing economic inequality means taking money from the rich. Since risk and reward are 
equivalent, decreasing potential rewards automatically decreases people's appetite for risk. 
Startups are intrinsically risky . Without the prospect of rewards proportionate to the risk, 
founders will not invest their time in a startup. Founders are irreplaceable. So eliminating 
economic inequality means eliminating startups.
Economic inequality is not just a consequence of startups. It's the engine that drives them, in 
the same way a fall of water drives a water mill.","But then I realized the 
other meanings are fairly closely related. Bullshit in the sense of things you waste your time on is a lot like intellectual 
bullshit.
[2] I chose this example deliberately as a note to self. I get attacked a lot online. People tell the craziest lies about me. 
And I have so far done a pretty mediocre job of suppressing the natural human inclination to say ""Hey , that's not true!""
Thanks to Jessica Livingston and Geoff Ralston for reading drafts of this.
Economic Inequality - # 173
 --> January 2016
Since the 1970s, economic inequality in the US has increased dramatically . And in particular, 
the rich have gotten a lot richer. Nearly everyone who writes about the topic says that economic 
inequality should be decreased.","But it's a significant 
cause, and it will become as big a cause as it needs to, in the sense that if you ban other ways to get rich, people 
who want to get rich will use this route instead.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Patrick Collison, Ron Conway , Chris Dixon, Benedict Evans, 
Richard Florida, Ben Horowitz, Jessica Livingston, Robert Morris, Tim O'Reilly , Geoff Ralston, Max Roser, Alexia 
Tsotsis, and Qasar Y ounis for reading drafts of this. Max also told me about several valuable sources.
Bibliography
Allen, Frederick Lewis. The Big Change. Harper, 1952.
Averitt, Robert. The Dual Economy . Norton, 1968.
Badger, Anthony . The New Deal. Hill and Wang, 1989.","The problem is not economic inequality , but those specific abuses.
It's a strange task to write an essay about why something isn't the problem, but that's the situation you find yourself in 
when so many people mistakenly think it is.
[9] Particularly since many causes of poverty are only partially driven by people trying to make money from them. For 
example, America's abnormally high incarceration rate is a major cause of poverty . But although for-profit prison 
companies and prison guard unions both spend a lot lobbying for harsh sentencing laws, they are not the original 
source of them.
[10] Incidentally , tax loopholes are definitely not a product of some power shift due to recent increases in economic 
inequality . The golden age of economic equality in the mid 20th century was also the golden age of tax avoidance. 
Indeed, it was so widespread and so effective that I'm skeptical whether economic inequality was really so low then 
as we think.","So let's be clear what reducing economic inequality means. It is identical with taking money 
from the rich.
When you transform a mathematical expression into another form, you often notice new things. 
So it is in this case. T aking money from the rich turns out to have consequences one might not 
foresee when one phrases the same idea in terms of ""reducing inequality .""
The problem is, risk and reward have to be proportionate. A bet with only a 10% chance of 
winning has to pay more than one with a 50% chance of winning, or no one will take it. So if you 
lop off the top of the possible rewards, you thereby decrease people's willingness to take risks.
T ransposing into our original expression, we get: decreasing economic inequality means 
decreasing the risk people are willing to take.","Even people sophisticated enough to know about the pie fallacy are led toward it by the custom 
of describing economic inequality as a ratio of one quantile's income or wealth to another's. It's 
so easy to slip from talking about income shifting from one quantile to another, as a figure of 
speech, into believing that is literally what's happening.
Except in the degenerate case, economic inequality can't be described by a ratio or even a 
curve. In the general case it consists of multiple ways people become poor, and multiple ways 
people become rich. Which means to understand economic inequality in a country , you have to 
go find individual people who are poor or rich and figure out why . [2]
If you want to understand change in economic inequality , you should ask what those people 
would have done when it was different.","So I say let's aim at the problems.
For example, let's attack poverty , and if necessary damage wealth in the process. That's much 
more likely to work than attacking wealth in the hope that you will thereby fix poverty . [9] And if 
there are people getting rich by tricking consumers or lobbying the government for anti-
competitive regulations or tax loopholes, then let's stop them. Not because it's causing 
economic inequality , but because it's stealing. [10]
If all you have is statistics, it seems like that's what you need to fix. But behind a broad 
statistical measure like economic inequality there are some things that are good and some that 
are bad, some that are historical trends with immense momentum and others that are random 
accidents. If we want to fix the world behind the statistics, we have to understand it, and focus 
our efforts where they'll do the most good.",0
"How realistic is Paul Grahamâ€™s claim that anyone can come up with a good startup idea, and what additional factors might influence the success of an idea?","I think this is often the case. I think people believe that coming up with ideas for startups is very 
hard-- that it must be very hard-- and so they don't try do to it. They assume ideas are like 
miracles: they either pop into your head or they don't.
I also have a theory about why people think this. They overvalue ideas. They think creating a 
startup is just a matter of implementing some fabulous initial idea. And since a successful 
startup is worth millions of dollars, a good idea is therefore a million dollar idea.
If coming up with an idea for a startup equals coming up with a million dollar idea, then of 
course it's going to seem hard. T oo hard to bother trying. Our instincts tell us something so 
valuable would not be just lying around for anyone to discover.","But I 
suspect it's the startup world that has changed, not them. The low cost of starting a startup 
means the average good bet is a riskier one, but most existing VC firms still operate as if they 
were investing in hardware startups in 1985.
Howard Aiken said ""Don't worry about people stealing your ideas. If your ideas are any good, 
you'll have to ram them down people's throats."" I have a similar feeling when I'm trying to 
convince VCs to invest in startups Y Combinator has funded. They're terrified of really novel 
ideas, unless the founders are good enough salesmen to compensate.
But it's the bold ideas that generate the biggest returns. Any really good new idea will seem bad 
to most people; otherwise someone would already be doing it.","Our instincts tell us something so 
valuable would not be just lying around for anyone to discover.
Actually , startup ideas are not million dollar ideas, and here's an experiment you can try to 
prove it: just try to sell one. Nothing evolves faster than markets. The fact that there's no market 
for startup ideas suggests there's no demand. Which means, in the narrow sense of the word, 
that startup ideas are worthless.
Questions
The fact is, most startups end up nothing like the initial idea. It would be closer to the truth to 
say the main value of your initial idea is that, in the process of discovering it's broken, you'll 
come up with your real idea.
The initial idea is just a starting point-- not a blueprint, but a question. It might help if they were 
expressed that way .","[8] Within YC when we say it's ipso facto right to do whatever gets you growth, it's implicit that this excludes trickery 
like buying users for more than their lifetime value, counting users as active when they're really not, bleeding out 
invites at a regularly increasing rate to manufacture a perfect growth curve, etc. Even if you were able to fool 
investors with such tricks, you'd ultimately be hurting yourself, because you're throwing off your own compass.
[9] Which is why it's such a dangerous mistake to believe that successful startups are simply the embodiment of 
some brilliant initial idea. What you're looking for initially is not so much a great idea as an idea that could evolve into 
a great one. The danger is that promising ideas are not merely blurry versions of great ones.","One founder put it very succinctly: 
Fast iteration is the key to success. One reason this advice is so hard to follow is that people 
don't realize how hard it is to judge startup ideas, particularly their own. Experienced founders 
learn to keep an open mind: Now I don't laugh at ideas anymore, because I realized how 
terrible I was at knowing if they were good or not. Y ou can never tell what will work. Y ou just 
have to do whatever seems best at each point. We do this with YC itself. We still don't know if it 
will work, but it seems like a decent hypothesis.
11. Don't Worry about Competitors
When you think you've got a great idea, it's sort of like having a guilty conscience about 
something. All someone has to do is look at you funny , and you think ""Oh my God, they know.""","So why did I spend 6 months working on this 
stupid idea? Because I didn't pay attention to users. I invented a model of the world that didn't 
correspond to reality , and worked from that. I didn't notice my model was wrong until I tried to 
convince users to pay for what we'd built. Even then I took embarrassingly long to catch on. I 
was attached to my model of the world, and I'd spent a lot of time on the software. They had to 
want it!
Why do so many founders build things no one wants? Because they begin by trying to think of 
startup ideas. That m.o. is doubly dangerous: it doesn't merely yield few good ideas; it yields 
bad ideas that sound plausible enough to fool you into working on them.
At YC we call these ""made-up"" or ""sitcom"" startup ideas.","We've always 
encouraged founders to see a startup idea as a hypothesis rather than a blueprint. And yet 
they're still surprised how well it works to change the idea. Normally if you complain about 
something being hard, the general advice is to work harder. With a startup, I think you should 
find a problem that's easy for you to solve. Optimizing in solution-space is familiar and 
straightforward, but you can make enormous gains playing around in problem-space. Whereas 
mere determination, without flexibility , is a greedy algorithm that may get you nothing more than 
a mediocre local maximum: When someone is determined, there's still a danger that they'll 
follow a long, hard path that ultimately leads nowhere. Y ou want to push forward, but at the 
same time twist and turn to find the most promising path. One founder put it very succinctly: 
Fast iteration is the key to success.","We've now watched the trajectories of so many 
startups that we're getting better at predicting them. And when we're talking about startups we 
think are likely to succeed, what we find ourselves saying is things like ""Oh, those guys can 
take care of themselves. They'll be fine."" Not ""those guys are really smart"" or ""those guys are 
working on a great idea."" [6] When we predict good outcomes for startups, the qualities that 
come up in the supporting arguments are toughness, adaptability , determination. Which means 
to the extent we're correct, those are the qualities you need to win.
Investors know this, at least unconsciously . The reason they like it when you don't need them is 
not simply that they like what they can't have, but because that quality is what makes founders 
succeed.
Sam Altman has it.","A startup that does all three will probably succeed.
And that's kind of exciting, when you think about it, because all three are doable. Hard, but 
doable. And since a startup that succeeds ordinarily makes its founders rich, that implies 
getting rich is doable too. Hard, but doable.
If there is one message I'd like to get across about startups, that's it. There is no magically 
difficult step that requires brilliance to solve.
The Idea
In particular, you don't need a brilliant idea to start a startup around. The way a startup makes 
money is to offer people better technology than they have now. But what people have now is 
often so bad that it doesn't take brilliance to do better.
Google's plan, for example, was simply to create a search site that didn't suck.","What's special about startup ideas? 
Startup ideas are ideas for companies, and companies have to make money . And the way to 
make money is to make something people want.
Wealth is what people want. I don't mean that as some kind of philosophical statement; I mean 
it as a tautology .
So an idea for a startup is an idea for something people want. Wouldn't any good idea be 
something people want? Unfortunately not. I think new theorems are a fine thing to create, but 
there is no great demand for them. Whereas there appears to be great demand for celebrity 
gossip magazines. Wealth is defined democratically . Good ideas and valuable ideas are not 
quite the same thing; the difference is individual tastes.
But valuable ideas are very close to good ideas, especially in technology .",0
Does Paul Graham sufficiently acknowledge the role of external factors like economic downturns or regulatory challenges in determining startup success or failure?,"Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","Mark Zuckerberg didn't succeed because he was an 
expert on startups. He succeeded despite being a complete noob at startups, because he 
understood his users really well.
If you don't know anything about, say , how to raise an angel round, don't feel bad on that 
account. That sort of thing you can learn when you need to, and forget after you've done it.
In fact, I worry it's not merely unnecessary to learn in great detail about the mechanics of 
startups, but possibly somewhat dangerous. If I met an undergrad who knew all about 
convertible notes and employee agreements and (God forbid) class FF stock, I wouldn't think 
""here is someone who is way ahead of their peers."" It would set off alarms. Because another of 
the characteristic mistakes of young founders is to go through the motions of starting a startup.","I'm sure they find it constraining, but think how 
valuable it will be if it saves them from lapsing into the fatal laziness that afflicted Microsoft and 
IBM.
The curious thing is, this elixir is freely available to any other company . Anyone can adopt ""Don't 
be evil."" The catch is that people will hold you to it. So I don't think you're going to see record 
labels or tobacco companies using this discovery .
Morale
There's a lot of external evidence that benevolence works. But how does it work? One 
advantage of investing in a large number of startups is that you get a lot of data about how they 
work. From what we've seen, being good seems to help startups in three ways: it improves their 
morale, it makes other people want to help them, and above all, it helps them be decisive.","I think it's roughly correct to say that YC's most successful 
companies have never been the fastest to hire, and one of the marks of a great founder is being able to resist this 
urge.""
Paul Buchheit adds:
""A related problem that I see a lot is premature scalingâ€”founders take a small business that isn't really working (bad 
unit economics, typically) and then scale it up because they want impressive growth numbers. This is similar to over-
hiring in that it makes the business much harder to fix once it's big, plus they are bleeding cash really fast.""
Thanks to Sam Altman, Paul Buchheit, Joe Gebbia, Jessica Livingston, and Geoff Ralston for reading drafts of this.
Why It-s Safe for Founders to Be Nice - # 167
August 2015
I recently got an email from a founder that helped me understand something important: why it's 
safe for startup founders to be nice people.","In some fields it might be, but apparently not in the startup world. Though plenty of investors are 
jerks, there is a clear trend among them: the most successful investors are also the most 
upstanding. [1]
It was not always this way . I would not feel confident saying that about investors twenty years 
ago.
What changed? The startup world became more transparent and more unpredictable. Both 
make it harder to seem good without actually being good.
It's obvious why transparency has that effect. When an investor maltreats a founder now, it gets 
out. Maybe not all the way to the press, but other founders hear about it, and that investor starts 
to lose deals. [2]
The effect of unpredictability is more subtle. It increases the work of being inconsistent.","Now he's cofounder of a startup called Friendfeed. It's only a year old, but already everyone in 
the Valley is watching them. Someone responsible for three of the biggest ideas at Google is 
going to come up with more.
5. Sam Altman
I was told I shouldn't mention founders of YC-funded companies in this list. But Sam Altman 
can't be stopped by such flimsy rules. If he wants to be on this list, he's going to be.
Honestly , Sam is, along with Steve Jobs, the founder I refer to most when I'm advising startups. 
On questions of design, I ask ""What would Steve do?"" but on questions of strategy or ambition I 
ask ""What would Sama do?""
What I learned from meeting Sama is that the doctrine of the elect applies to startups.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","This is less true with angels, but 
VCs reject practically everyone. The structure of their business means a partner does at most 2 
new investments a year, no matter how many good startups approach him.
In addition to the odds being terrible, the average investor is, as I mentioned, a pretty bad judge 
of startups. It's harder to judge startups than most other things, because great startup ideas 
tend to seem wrong. A good startup idea has to be not just good but novel. And to be both good 
and novel, an idea probably has to seem bad to most people, or someone would already be 
doing it and it wouldn't be novel.
That makes judging startups harder than most other things one judges. Y ou have to be an 
intellectual contrarian to be a good startup investor. That's a problem for VCs, most of whom 
are not particularly imaginative.","I was surprised recently when I realized that all the worst problems 
we faced in our startup were due not to competitors, but investors. Dealing with competitors 
was easy by comparison.
I don't mean to suggest that our investors were nothing but a drag on us. They were helpful in 
negotiating deals, for example. I mean more that conflicts with investors are particularly nasty . 
Competitors punch you in the jaw, but investors have you by the balls.
Apparently our situation was not unusual. And if trouble with investors is one of the biggest 
threats to a startup, managing them is one of the most important skills founders need to learn.
Let's start by talking about the five sources of startup funding. Then we'll trace the life of a 
hypothetical (very fortunate) startup as it shifts gears through successive rounds.
Friends and Family
A lot of startups get their first funding from friends and family .",0
"Are there potential downsides to strictly following the 'Makerâ€™s Schedule' approach, and could it create inefficiencies or conflicts in certain work environments?","Thanks to Jessica Livingston for reading drafts of this.
Maker-s Schedule- Manager-s Schedule  - # 114
 --> ""...the mere consciousness of an engagement will sometimes worry a whole day .""
Ã¿Ã½ Charles Dickens July 2009
One reason programmers dislike meetings so much is that they're on a different type of 
schedule from other people. Meetings cost them more.
There are two types of schedule, which I'll call the manager's schedule and the maker's 
schedule. The manager's schedule is for bosses. It's embodied in the traditional appointment 
book, with each day cut into one hour intervals. Y ou can block off several hours for a single task 
if you need to, but by default you change what you're doing every hour.
When you use time that way , it's merely a practical problem to meet with someone. Find an 
open slot in your schedule, book them, and you're done.","We just took it 
for granted that we had to either blow our schedules or offend people. But now that I've realized 
what's going on, perhaps there's a third option: to write something explaining the two types of 
schedule. Maybe eventually , if the conflict between the manager's schedule and the maker's 
schedule starts to be more widely understood, it will become less of a problem.
Those of us on the maker's schedule are willing to compromise. We know we have to have 
some number of meetings. All we ask from those on the manager's schedule is that they 
understand the cost.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Jessica Livingston, and Robert Morris 
for reading drafts of this.
Related:
A Local Revolution- - # 113
April 2009
Recently I realized I'd been holding two ideas in my head that would explode if combined.","There's always something coming on the next hour; the only question is 
what. But when someone on the maker's schedule has a meeting, they have to think about it.
For someone on the maker's schedule, having a meeting is like throwing an exception. It 
doesn't merely cause you to switch from one task to another; it changes the mode in which you 
work.
I find one meeting can sometimes affect a whole day . A meeting commonly blows at least half a 
day , by breaking up a morning or afternoon. But in addition there's sometimes a cascading 
effect. If I know the afternoon is going to be broken up, I'm slightly less likely to start something 
ambitious in the morning. I know this may sound oversensitive, but if you're a maker, think of 
your own case.","Find an 
open slot in your schedule, book them, and you're done.
Most powerful people are on the manager's schedule. It's the schedule of command. But there's 
another way of using time that's common among people who make things, like programmers 
and writers. They generally prefer to use time in units of half a day at least. Y ou can't write or 
program well in units of an hour. That's barely enough time to get started.
When you're operating on the maker's schedule, meetings are a disaster. A single meeting can 
blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in. 
Plus you have to remember to go to the meeting. That's no problem for someone on the 
manager's schedule. There's always something coming on the next hour; the only question is 
what.","Then I'd sleep till about 11 am, and come in and work until dinner on 
what I called ""business stuff."" I never thought of it in these terms, but in effect I had two 
workdays each day , one on the manager's schedule and one on the maker's.
When you're operating on the manager's schedule you can do something you'd never want to 
do on the maker's: you can have speculative meetings. Y ou can meet someone just to get to 
know one another. If you have an empty slot in your schedule, why not? Maybe it will turn out 
you can help one another in some way .
Business people in Silicon Valley (and the whole world, for that matter) have speculative 
meetings all the time. They're effectively free if you're on the manager's schedule.","But Y Combinator runs on the maker's schedule. Rtm and T revor and I do 
because we always have, and Jessica does too, mostly , because she's gotten into sync with us.
I wouldn't be surprised if there start to be more companies like us. I suspect founders may 
increasingly be able to resist, or at least postpone, turning into managers, just as a few 
decades ago they started to be able to resist switching from jeans to suits.
How do we manage to advise so many startups on the maker's schedule? By using the classic 
device for simulating the manager's schedule within the maker's: office hours. Several times a 
week I set aside a chunk of time to meet founders we've funded.","Arguably the latter is no worse.
[4] Knowing what you want to work on doesn't mean you'll be able to. Most people have to spend a lot of their time 
working on things they don't want to, especially early on. But if you know what you want to do, you at least know what 
direction to nudge your life in.
[5] The lower time limits for intense work suggest a solution to the problem of having less time to work after you have 
kids: switch to harder problems. In effect I did that, though not deliberately .
[6] Some cultures have a tradition of performative hard work. I don't love this idea, because (a) it makes a parody of 
something important and (b) it causes people to wear themselves out doing things that don't matter. I don't know 
enough to say for sure whether it's net good or bad, but my guess is bad.","This doesn't seem to be the case in most types of work. When I worked in fast food, we 
didn't prefer the busy times. And when I used to mow lawns, I definitely didn't prefer it when the 
grass was long after a week of rain.
Programmers, though, like it better when they write more code. Or more precisely , when they 
release more code. Programmers like to make a difference. Good ones, anyway .
For good programmers, one of the best things about working for a startup is that there are few 
checks on releases. In true startups, there are no external checks at all. If you have an idea for 
a new feature in the morning, you can write it and push it to the production servers before 
lunch. And when you can do that, you have more ideas.
At big companies, software has to go through various approvals before it can be launched.","If employees have to be in the building a certain number of hours 
a day , and are forbidden to do non-work things while there, then they must be working. In 
theory . In practice they spend a lot of their time in a no-man's land, where they're neither 
working nor having fun.
If you could measure how much work people did, many companies wouldn't need any fixed 
workday . Y ou could just say: this is what you have to do. Do it whenever you like, wherever you 
like. If your work requires you to talk to other people in the company , then you may need to be 
here a certain amount. Otherwise we don't care.
That may seem utopian, but it's what we told people who came to work for our company . There 
were no fixed office hours. I never showed up before 11 in the morning.","If you get inspired by some project, it can be a net 
win to blow off everything you were supposed to do for the next few days to work on it. Y es, 
those errands may cost you more time when you finally get around to them. But if you get a lot 
done during those few days, you will be net more productive.
In fact, it may not be a difference in degree, but a difference in kind. There may be types of work 
that can only be done in long, uninterrupted stretches, when inspiration hits, rather than dutifully 
in scheduled little slices. Empirically it seems to be so. When I think of the people I know who've 
done great things, I don't imagine them dutifully crossing items off to-do lists. I imagine them 
sneaking off to work on some new idea.",0
"What contradictions, if any, exist in Paul Grahamâ€™s startup philosophy, and do you think his advice remains consistently applicable in different industries?","Now he's cofounder of a startup called Friendfeed. It's only a year old, but already everyone in 
the Valley is watching them. Someone responsible for three of the biggest ideas at Google is 
going to come up with more.
5. Sam Altman
I was told I shouldn't mention founders of YC-funded companies in this list. But Sam Altman 
can't be stopped by such flimsy rules. If he wants to be on this list, he's going to be.
Honestly , Sam is, along with Steve Jobs, the founder I refer to most when I'm advising startups. 
On questions of design, I ask ""What would Steve do?"" but on questions of strategy or ambition I 
ask ""What would Sama do?""
What I learned from meeting Sama is that the doctrine of the elect applies to startups.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","A startup that does all three will probably succeed.
And that's kind of exciting, when you think about it, because all three are doable. Hard, but 
doable. And since a startup that succeeds ordinarily makes its founders rich, that implies 
getting rich is doable too. Hard, but doable.
If there is one message I'd like to get across about startups, that's it. There is no magically 
difficult step that requires brilliance to solve.
The Idea
In particular, you don't need a brilliant idea to start a startup around. The way a startup makes 
money is to offer people better technology than they have now. But what people have now is 
often so bad that it doesn't take brilliance to do better.
Google's plan, for example, was simply to create a search site that didn't suck.","I grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a 
man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising 
power, and isn't too fussy about how. As I've written before, one of the things that has surprised 
me most about startups is how few of the most successful founders are like that. Maybe 
successful people in other industries are; I don't know; but not startup founders. [1]
I knew this empirically , but I never saw the math of why till I got this founder's email. In it he said 
he worried that he was fundamentally soft-hearted and tended to give away too much for free. 
He thought perhaps he needed ""a little dose of sociopath-ness.""","Mark Zuckerberg didn't succeed because he was an 
expert on startups. He succeeded despite being a complete noob at startups, because he 
understood his users really well.
If you don't know anything about, say , how to raise an angel round, don't feel bad on that 
account. That sort of thing you can learn when you need to, and forget after you've done it.
In fact, I worry it's not merely unnecessary to learn in great detail about the mechanics of 
startups, but possibly somewhat dangerous. If I met an undergrad who knew all about 
convertible notes and employee agreements and (God forbid) class FF stock, I wouldn't think 
""here is someone who is way ahead of their peers."" It would set off alarms. Because another of 
the characteristic mistakes of young founders is to go through the motions of starting a startup.","In some fields it might be, but apparently not in the startup world. Though plenty of investors are 
jerks, there is a clear trend among them: the most successful investors are also the most 
upstanding. [1]
It was not always this way . I would not feel confident saying that about investors twenty years 
ago.
What changed? The startup world became more transparent and more unpredictable. Both 
make it harder to seem good without actually being good.
It's obvious why transparency has that effect. When an investor maltreats a founder now, it gets 
out. Maybe not all the way to the press, but other founders hear about it, and that investor starts 
to lose deals. [2]
The effect of unpredictability is more subtle. It increases the work of being inconsistent.","The 
banks now had to find someone else to lend to, so they made more margin loans.
[15] Even now it's hard to get them to. One of the things I find hardest to get into the heads of would-be startup 
founders is how important it is to do certain kinds of menial work early in the life of a company . Doing things that don't 
scale is to how Henry Ford got started as a high-fiber diet is to the traditional peasant's diet: they had no choice but 
to do the right thing, while we have to make a conscious effort.
[16] Founders weren't celebrated in the press when I was a kid. ""Our founder"" meant a photograph of a severe-
looking man with a walrus mustache and a wing collar who had died decades ago. The thing to be when I was a kid 
was an executive.","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","Y ou should always get a personal introductionâ€”and to a partner, not an associate.
[3] Several people have told us that the most valuable thing about startup school was that they got to see famous 
startup founders and realized they were just ordinary guys. Though we're happy to provide this service, this is not 
generally the way we pitch startup school to potential speakers.
[4] Actually this sounds to me like a VC who got buyer's remorse, then used a technicality to get out of the deal. But 
it's telling that it even seemed a plausible excuse.
Thanks to Sam Altman, Paul Buchheit, Hutch Fishman, and Robert Morris for reading drafts of this, and to Kenneth 
King of ASES for inviting me to speak.
 Comment on this essay .
T wo Kinds of Judgement - # 74
April 2007
There are two different ways people judge you.",0
"What aspects of Paul Grahamâ€™s advice might become outdated in the future, given the rapid evolution of technology, markets, and business models?","Maybe it would be worth starting one that did.
[3] There need to be some number of big companies to acquire the startups, so the number of big companies 
couldn't decrease to zero.
[4] Thought experiment: If doctors did the same work, but as impoverished outcasts, which parents would still want 
their kids to be doctors?
Thanks to T revor Blackwell, Jessica Livingston, and Robert Morris for reading drafts of this, to the founders of Zenter 
for letting me use their web-based PowerPoint killer even though it isn't launched yet, and to Ming-Hay Luk of the 
Berkeley CSUA for inviting me to speak.
 Comment on this essay .
Is It Worth Being Wise- - # 71
February 2007
A few days ago I finally figured out something I've wondered about for 25 years: the relationship 
between wisdom and intelligence.","In 
fact, that's a good sign. That's probably why everyone else has been overlooking the idea. The 
first microcomputers were dismissed as toys. And the first planes, and the first cars. At this 
point, when someone comes to us with something that users like but that we could envision 
forum trolls dismissing as a toy , it makes us especially likely to invest.
While young founders are at a disadvantage when coming up with made-up ideas, they're the 
best source of organic ones, because they're at the forefront of technology . They use the latest 
stuff. They only just decided what to use, so why wouldn't they? And because they use the 
latest stuff, they're in a position to discover valuable types of fixable brokenness first.
There's nothing more valuable than an unmet need that is just becoming fixable.","Bill Gates would probably have ended up pretty rich even if IBM hadn't happened to 
drop the PC standard in his lap.
I've thought a lot about the disagreement between the investors who prefer to bet on people 
and those who prefer to bet on markets. It's kind of surprising that it even exists. Y ou'd expect 
opinions to have converged more.
But I think I've figured out what's going on. The three most prominent people I know who favor 
markets are Marc, Jawed Karim, and Joe Kraus. And all three of them, in their own startups, 
basically flew into a thermal: they hit a market growing so fast that it was all they could do to 
keep up with it. That kind of experience is hard to ignore.","T echnology progresses more or less independently of the stock market. So for any given idea, 
the payoff for acting fast in a bad economy will be higher than for waiting. Microsoft's first 
product was a Basic interpreter for the Altair. That was exactly what the world needed in 1975, 
but if Gates and Allen had decided to wait a few years, it would have been too late.
Of course, the idea you have now won't be the last you have. There are always new ideas. But if 
you have a specific idea you want to act on, act now.
That doesn't mean you can ignore the economy . Both customers and investors will be feeling 
pinched. It's not necessarily a problem if customers feel pinched: you may even be able to 
benefit from it, by making things that save money .","The 
safest plan for him personally is to stick close to the center of the herd.
Within large organizations, the phrase used to describe this approach is ""industry best 
practice."" Its purpose is to shield the pointy-haired boss from responsibility: if he chooses 
something that is ""industry best practice,"" and the company loses, he can't be blamed. He didn't 
choose, the industry did.
I believe this term was originally used to describe accounting methods and so on. What it 
means, roughly , is don't do anything weird. And in accounting that's probably a good idea. The 
terms ""cutting-edge"" and ""accounting"" do not sound good together. But when you import this 
criterion into decisions about technology , you start to get the wrong answers.
T echnology often should be cutting-edge.","Mark Zuckerberg didn't succeed because he was an 
expert on startups. He succeeded despite being a complete noob at startups, because he 
understood his users really well.
If you don't know anything about, say , how to raise an angel round, don't feel bad on that 
account. That sort of thing you can learn when you need to, and forget after you've done it.
In fact, I worry it's not merely unnecessary to learn in great detail about the mechanics of 
startups, but possibly somewhat dangerous. If I met an undergrad who knew all about 
convertible notes and employee agreements and (God forbid) class FF stock, I wouldn't think 
""here is someone who is way ahead of their peers."" It would set off alarms. Because another of 
the characteristic mistakes of young founders is to go through the motions of starting a startup.","Newton's case, at least, suggests that the risk/
reward rule holds here. He's famous for one particular obsession of his that turned out to be 
unprecedentedly fruitful: using math to describe the world. But he had two other obsessions, 
alchemy and theology , that seem to have been complete wastes of time. He ended up net 
ahead. His bet on what we now call physics paid off so well that it more than compensated for 
the other two. But were the other two necessary , in the sense that he had to take big risks to 
make such big discoveries? I don't know.
Here's an even more alarming idea: might one make all bad bets? It probably happens quite 
often. But we don't know how often, because these people don't become famous.
It's not merely that the returns from following a path are hard to predict. They change 
dramatically over time.","(If you're curious why my site looks so old-fashioned, it's because it's still made with this 
software. It may look clunky today , but in 1996 it was the last word in slick.)
In September, Robert rebelled. ""We've been working on this for a month,"" he said, ""and it's still 
not done."" This is funny in retrospect, because he would still be working on it almost 3 years 
later. But I decided it might be prudent to recruit more programmers, and I asked Robert who 
else in grad school with him was really good. He recommended T revor Blackwell, which 
surprised me at first, because at that point I knew T revor mainly for his plan to reduce 
everything in his life to a stack of notecards, which he carried around with him. But Rtm was 
right, as usual.","It is irresponsible not to think about business models. It's just ten times more irresponsible not 
to think about the product.
16. Not Wanting to Get Y our Hands Dirty
Nearly all programmers would rather spend their time writing code and have someone else 
handle the messy business of extracting money from it. And not just the lazy ones. Larry and 
Sergey apparently felt this way too at first. After developing their new search algorithm, the first 
thing they tried was to get some other company to buy it.
Start a company? Y ech. Most hackers would rather just have ideas. But as Larry and Sergey 
found, there's not much of a market for ideas. No one trusts an idea till you embody it in a 
product and use that to grow a user base. Then they'll pay big time.
Maybe this will change, but I doubt it will change much.","In fact that's a very promising starting point. Google was 
that type of idea. Y our thesis has to be more precise than ""we're going to make an x that doesn't 
suck"" though. Y ou have to be able to phrase it in terms of something the incumbents are 
overlooking. Best of all is when you can say that they didn't have the courage of their 
convictions, and that your plan is what they'd have done if they'd followed through on their own 
insights. Google was that type of idea too. The search engines that preceded them shied away 
from the most radical implications of what they were doing â€” particularly that the better a job 
they did, the faster users would leave.
A crowded market is actually a good sign, because it means both that there's demand and that 
none of the existing solutions are good enough.",0
Could Paul Grahamâ€™s emphasis on rapid early growth contribute to an unhealthy startup culture that prioritizes short-term success over long-term sustainability?,"The 
banks now had to find someone else to lend to, so they made more margin loans.
[15] Even now it's hard to get them to. One of the things I find hardest to get into the heads of would-be startup 
founders is how important it is to do certain kinds of menial work early in the life of a company . Doing things that don't 
scale is to how Henry Ford got started as a high-fiber diet is to the traditional peasant's diet: they had no choice but 
to do the right thing, while we have to make a conscious effort.
[16] Founders weren't celebrated in the press when I was a kid. ""Our founder"" meant a photograph of a severe-
looking man with a walrus mustache and a wing collar who had died decades ago. The thing to be when I was a kid 
was an executive.","Those turn out to be questions worth examining.
Plus
If you start a startup soon after college, you'll be a young founder by present standards, so you 
should know what the relative advantages of young founders are. They're not what you might 
think. As a young founder your strengths are: stamina, poverty , rootlessness, colleagues, and 
ignorance.
The importance of stamina shouldn't be surprising. If you've heard anything about startups 
you've probably heard about the long hours. As far as I can tell these are universal. I can't think 
of any successful startups whose founders worked 9 to 5. And it's particularly necessary for 
younger founders to work long hours because they're probably not as efficient as they'll be later.
Y our second advantage, poverty , might not sound like an advantage, but it is a huge one.","But if you look back further, you realize it's actually the default. So what we 
should expect in the future is more of the same. Indeed, we should expect both the number and 
wealth of founders to grow, because every decade it gets easier to start a startup.
Part of the reason it's getting easier to start a startup is social. Society is (re)assimilating the 
concept. If you start one now, your parents won't freak out the way they would have a 
generation ago, and knowledge about how to do it is much more widespread. But the main 
reason it's easier to start a startup now is that it's cheaper. T echnology has driven down the 
cost of both building products and acquiring customers.
The decreasing cost of starting a startup has in turn changed the balance of power between 
founders and investors.","They could end up on a local 
maximum. But in practice that never happens. Having to hit a growth number every week forces 
founders to act, and acting versus not acting is the high bit of succeeding. Nine times out of ten, 
sitting around strategizing is just a form of procrastination. Whereas founders' intuitions about 
which hill to climb are usually better than they realize. Plus the maxima in the space of startup 
ideas are not spiky and isolated. Most fairly good ideas are adjacent to even better ones.
The fascinating thing about optimizing for growth is that it can actually discover startup ideas. 
Y ou can use the need for growth as a form of evolutionary pressure. If you start out with some 
initial plan and modify it as necessary to keep hitting, say , 10% weekly growth, you may end up 
with a quite different company than you meant to start.","But anything that grows consistently at 
10% a week is almost certainly a better idea than you started with.
There's a parallel here to small businesses. Just as the constraint of being located in a 
particular neighborhood helps define a bar, the constraint of growing at a certain rate can help 
define a startup.
Y ou'll generally do best to follow that constraint wherever it leads rather than being influenced 
by some initial vision, just as a scientist is better off following the truth wherever it leads rather 
than being influenced by what he wishes were the case. When Richard Feynman said that the 
imagination of nature was greater than the imagination of man, he meant that if you just keep 
following the truth you'll discover cooler things than you could ever have made up. For startups, 
growth is a constraint much like truth. Every successful startup is at least partly a product of the 
imagination of growth.","And the probability of a group of sufficiently 
smart and determined founders succeeding on that scale might be significantly over 1%. For 
the right people â€” e.g. the young Bill Gates â€” the probability might be 20% or even 50%. So 
it's not surprising that so many want to take a shot at it. In an efficient market, the number of 
failed startups should be proportionate to the size of the successes. And since the latter is huge 
the former should be too. [11]
What this means is that at any given time, the great majority of startups will be working on 
something that's never going to go anywhere, and yet glorifying their doomed efforts with the 
grandiose title of ""startup.""
This doesn't bother me. It's the same with other high-beta vocations, like being an actor or a 
novelist. I've long since gotten used to it.","Get funded by Y Combinator. 
 March 2008, rev. June 2008
T echnology tends to separate normal from natural. Our bodies weren't designed to eat the 
foods that people in rich countries eat, or to get so little exercise. There may be a similar 
problem with the way we work: a normal job may be as bad for us intellectually as white flour or 
sugar is for us physically .
I began to suspect this after spending several years working with startup founders. I've now 
worked with over 200 of them, and I've noticed a definite difference between programmers 
working on their own startups and those working for large organizations. I wouldn't say founders 
seem happier, necessarily; starting a startup can be very stressful.","That's why 
fundraising and the enterprise market kill and maim so many startups. [2]
But I think the reason most founders are surprised by how long it takes is that they're 
overconfident. They think they're going to be an instant success, like Y ouT ube or Facebook. Y ou 
tell them only 1 out of 100 successful startups has a trajectory like that, and they all think ""we're 
going to be that 1.""
Maybe they'll listen to one of the more successful founders: The top thing I didn't understand 
before going into it is that persistence is the name of the game. For the vast majority of startups 
that become successful, it's going to be a really long journey , at least 3 years and probably 5+. 
There is a positive side to thinking longer-term. It's not just that you have to resign yourself to 
everything taking longer than it should.","A startup that grows at 5% a week will in 4 years be making $25 million a 
month. [10]
Our ancestors must rarely have encountered cases of exponential growth, because our 
intuitions are no guide here. What happens to fast growing startups tends to surprise even the 
founders.
Small variations in growth rate produce qualitatively different outcomes. That's why there's a 
separate word for startups, and why startups do things that ordinary companies don't, like 
raising money and getting acquired. And, strangely enough, it's also why they fail so frequently .
Considering how valuable a successful startup can become, anyone familiar with the concept of 
expected value would be surprised if the failure rate weren't high. If a successful startup could 
make a founder $100 million, then even if the chance of succeeding were only 1%, the 
expected value of starting one would be $1 million.","It sounds benevolent to say we ought to reduce economic inequality . When you phrase it that 
way , who can argue with you? Inequality has to be bad, right? It sounds a good deal less 
benevolent to say we ought to reduce the rate at which new companies are founded. And yet 
the one implies the other.
Indeed, it may be that reducing investors' appetite for risk doesn't merely kill off larval startups, 
but kills off the most promising ones especially . Startups yield faster growth at greater risk than 
established companies. Does this trend also hold among startups? That is, are the riskiest 
startups the ones that generate most growth if they succeed? I suspect the answer is yes. And 
that's a chilling thought, because it means that if you cut investors' appetite for risk, the most 
beneficial startups are the first to go.",0
"How does Paul Grahamâ€™s philosophy on startups compare to traditional business theories that emphasize stability, long-term planning, and revenue sustainability?","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","The first is that startups may represent a new economic phase, on the scale of the Industrial 
Revolution. I'm not sure of this, but there seems a decent chance it's true. People are 
dramatically more productive as founders or early employees of startupsâ€”imagine how much 
less Larry and Sergey would have achieved if they'd gone to work for a big companyâ€”and that 
scale of improvement can change social customs.
The second idea is that startups are a type of business that flourishes in certain places that 
specialize in itâ€”that Silicon Valley specializes in startups in the same way Los Angeles 
specializes in movies, or New Y ork in finance. [1]
What if both are true? What if startups are both a new economic phase and also a type of 
business that only flourishes in certain centers?
If so, this revolution is going to be particularly revolutionary . All previous revolutions have 
spread.","But anything that grows consistently at 
10% a week is almost certainly a better idea than you started with.
There's a parallel here to small businesses. Just as the constraint of being located in a 
particular neighborhood helps define a bar, the constraint of growing at a certain rate can help 
define a startup.
Y ou'll generally do best to follow that constraint wherever it leads rather than being influenced 
by some initial vision, just as a scientist is better off following the truth wherever it leads rather 
than being influenced by what he wishes were the case. When Richard Feynman said that the 
imagination of nature was greater than the imagination of man, he meant that if you just keep 
following the truth you'll discover cooler things than you could ever have made up. For startups, 
growth is a constraint much like truth. Every successful startup is at least partly a product of the 
imagination of growth.","These are not startups, except in a few unusual cases. A barbershop isn't designed 
to grow fast. Whereas a search engine, for example, is.
When I say startups are designed to grow fast, I mean it in two senses. Partly I mean designed 
in the sense of intended, because most startups fail. But I also mean startups are different by 
nature, in the same way a redwood seedling has a different destiny from a bean sprout.
That difference is why there's a distinct word, ""startup,"" for companies designed to grow fast. If 
all companies were essentially similar, but some through luck or the efforts of their founders 
ended up growing very fast, we wouldn't need a separate word. We could just talk about super-
successful companies and less successful ones. But in fact startups do have a different sort of 
DNA from other businesses.","A startup that does all three will probably succeed.
And that's kind of exciting, when you think about it, because all three are doable. Hard, but 
doable. And since a startup that succeeds ordinarily makes its founders rich, that implies 
getting rich is doable too. Hard, but doable.
If there is one message I'd like to get across about startups, that's it. There is no magically 
difficult step that requires brilliance to solve.
The Idea
In particular, you don't need a brilliant idea to start a startup around. The way a startup makes 
money is to offer people better technology than they have now. But what people have now is 
often so bad that it doesn't take brilliance to do better.
Google's plan, for example, was simply to create a search site that didn't suck.","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","Investors mainly contribute money , which in principle is the same no matter what the source. 
But the founders contribute ideas. Y ou can't replace those.
Let's rehearse the chain of argument so far. I'm heading for a conclusion to which many readers 
will have to be dragged kicking and screaming, so I've tried to make each link unbreakable. 
Decreasing economic inequality means taking money from the rich. Since risk and reward are 
equivalent, decreasing potential rewards automatically decreases people's appetite for risk. 
Startups are intrinsically risky . Without the prospect of rewards proportionate to the risk, 
founders will not invest their time in a startup. Founders are irreplaceable. So eliminating 
economic inequality means eliminating startups.
Economic inequality is not just a consequence of startups. It's the engine that drives them, in 
the same way a fall of water drives a water mill.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","But you can tell it must be hard by how few startups do it.
Because making something people want is so much harder than making money from it, you 
should leave business models for later, just as you'd leave some trivial but messy feature for 
version 2. In version 1, solve the core problem. And the core problem in a startup is how to 
create wealth (= how much people want something x the number who want it), not how to 
convert that wealth into money .
The companies that win are the ones that put users first. Google, for example. They made 
search work, then worried about how to make money from it. And yet some startup founders 
still think it's irresponsible not to focus on the business model from the beginning. They're often 
encouraged in this by investors whose experience comes from less malleable industries.
It is irresponsible not to think about business models.","I grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a 
man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising 
power, and isn't too fussy about how. As I've written before, one of the things that has surprised 
me most about startups is how few of the most successful founders are like that. Maybe 
successful people in other industries are; I don't know; but not startup founders. [1]
I knew this empirically , but I never saw the math of why till I got this founder's email. In it he said 
he worried that he was fundamentally soft-hearted and tended to give away too much for free. 
He thought perhaps he needed ""a little dose of sociopath-ness.""",0
What are the biggest differences between Paul Grahamâ€™s startup philosophy and Peter Thielâ€™s arguments in 'Zero to One' regarding monopolies and competition?,"They can take their time and copy you instead of buying you. If you want to get market price, 
work on something where there's competition.
If an increasing number of startups are created to do product development on spec, it will be a 
natural counterweight to monopolies. Once some type of technology is captured by a monopoly , 
it will only evolve at big company rates instead of startup rates, whereas alternatives will evolve 
with especial speed. A free market interprets monopoly as damage and routes around it.
The Woz Route
The most productive way to generate startup ideas is also the most unlikely-sounding: by 
accident. If you look at how famous startups got started, a lot of them weren't initially supposed 
to be startups. Lotus began with a program Mitch Kapor wrote for a friend.","[2] It's unlikely that every successful startup improves the world. But their founders, like parents, truly believe they do. 
Successful founders are in love with their companies. And while this sort of love is as blind as the love people have 
for one another, it is genuine.
[3] Peter Thiel would point out that successful founders still get rich from controlling monopolies, just monopolies they 
create rather than ones they capture. And while this is largely true, it means a big change in the sort of person who 
wins.
[4] T o be fair, the Romans didn't mean to kill Archimedes. The Roman commander specifically ordered that he be 
spared. But he got killed in the chaos anyway .
In sufficiently disordered times, even thinking requires control of scarce resources, because living at all is a scarce 
resource.","Notes:
[1] Stiglitz, Joseph. The Price of Inequality . Norton, 2012. p. 32.
[2] Particularly since economic inequality is a matter of outliers, and outliers are disproportionately likely to have 
gotten where they are by ways that have little do with the sort of things economists usually think about, like wages 
and productivity , but rather by , say , ending up on the wrong side of the ""War on Drugs.""
[3] Determination is the most important factor in deciding between success and failure, which in startups tend to be 
sharply differentiated. But it takes more than determination to create one of the hugely successful startups. Though 
most founders start out excited about the idea of getting rich, purely mercenary founders will usually take one of the 
big acquisition offers most successful startups get on the way up.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","People start startups in the hope of becoming 
much richer than they were before. And if your society tries to prevent anyone from being much 
richer than anyone else, it will also prevent one person from being much richer at t2 than t1.
Growth
This argument applies proportionately . It's not just that if you eliminate economic inequality , you 
get no startups. T o the extent you reduce economic inequality , you decrease the number of 
startups. [4] Increase taxes, and willingness to take risks decreases in proportion.
And that seems bad for everyone. New technology and new jobs both come disproportionately 
from new companies. Indeed, if you don't have startups, pretty soon you won't have established 
companies either, just as, if you stop having kids, pretty soon you won't have any adults.
It sounds benevolent to say we ought to reduce economic inequality .","He believes you should get people 
to pay you from the beginning. I think that's too constraining. Facebook didn't, and they've done 
better than most startups. Making money right away was not only unnecessary for them, but 
probably would have been harmful. I do think Joe's rule could be useful for many startups, 
though. When founders seem unfocused, I sometimes suggest they try to get customers to pay 
them for something, in the hope that this constraint will prod them into action.
The difference between Joe's idea and ramen profitability is that a ramen profitable company 
doesn't have to be making money the way it ultimately will. It just has to be making money . The 
most famous example is Google, which initially made money by licensing search to sites like 
Y ahoo.
Is there a downside to ramen profitability? Probably the biggest danger is that it might turn you 
into a consulting firm.","Starting one's own business meant starting a business that would start small and stay small. 
Which in those days of big companies often meant scurrying around trying to avoid being 
trampled by elephants. It was more prestigious to be one of the executive class riding the 
elephant.
By the 1970s, no one stopped to wonder where the big prestigious companies had come from 
in the first place. It seemed like they'd always been there, like the chemical elements. And 
indeed, there was a double wall between ambitious kids in the 20th century and the origins of 
the big companies. Many of the big companies were roll-ups that didn't have clear founders. 
And when they did, the founders didn't seem like us. Nearly all of them had been uneducated, 
in the sense of not having been to college. They were what Shakespeare called rude 
mechanicals.","But it's a significant 
cause, and it will become as big a cause as it needs to, in the sense that if you ban other ways to get rich, people 
who want to get rich will use this route instead.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Patrick Collison, Ron Conway , Chris Dixon, Benedict Evans, 
Richard Florida, Ben Horowitz, Jessica Livingston, Robert Morris, Tim O'Reilly , Geoff Ralston, Max Roser, Alexia 
Tsotsis, and Qasar Y ounis for reading drafts of this. Max also told me about several valuable sources.
Bibliography
Allen, Frederick Lewis. The Big Change. Harper, 1952.
Averitt, Robert. The Dual Economy . Norton, 1968.
Badger, Anthony . The New Deal. Hill and Wang, 1989.","[7] What makes most suburbs so demoralizing is that there's no center to walk to.
Thanks to Justin Kan, Jessica Livingston, Robert Morris, Alexis Ohanian, Emmet Shear, and Fred Wilson for reading 
drafts of this.
 Comment on this essay .
Startups in 13 Sentences - # 104
 Want to start a startup? Get funded by Y Combinator. 
 Watch how this essay was written. 
 February 2009
One of the things I always tell startups is a principle I learned from Paul Buchheit: it's better to 
make a few people really happy than to make a lot of people semi-happy . I was saying recently 
to a reporter that if I could only tell startups 10 things, this would be one of them. Then I 
thought: what would the other 9 be?
When I made the list there turned out to be 13: 1.","""In Russia they just kill you,"" they said, and they were only 
partly joking. Economically , the fact that established companies can't simply eliminate new competitors may be one of 
the most valuable aspects of the rule of law. And so to the extent we see incumbents suppressing competitors via 
regulations or patent suits, we should worry , not because it's a departure from the rule of law per se but from what 
the rule of law is aiming at.
Thanks to Sam Altman, Marc Andreessen, Paul Buchheit, Patrick Collison, Jessica Livingston, Geoff Ralston, and 
Harj T aggar for reading drafts of this.
Black Swan Farming - # 147
 Want to start a startup? Get funded by Y Combinator. 
 September 2012
I've done several types of work over the years but I don't know another as counterintuitive as 
startup investing.",0
How do Paul Grahamâ€™s views on entrepreneurship differ from Elon Muskâ€™s approach to building capital-intensive technology companies like SpaceX and Tesla?,"But the similarities feel greater than the 
differences. John Smith is now John Smith, 22, a software developer at such and such 
corporation.
In fact John Smith's life has changed more than he realizes. Socially , a company looks much 
like college, but the deeper you go into the underlying reality , the more different it gets.
What a company does, and has to do if it wants to continue to exist, is earn money . And the way 
most companies make money is by creating wealth. Companies can be so specialized that this 
similarity is concealed, but it is not only manufacturing companies that create wealth. A big 
component of wealth is location. Remember that magic machine that could make you cars and 
cook you dinner and so on? It would not be so useful if it delivered your dinner to a random 
location in central Asia.","When 
founders can do lots of startups, they can start to look at the world in the same portfolio-
optimizing way as investors. And that means the overall amount of wealth created can be 
greater, because strategies can be riskier.
5. Y ounger, Nerdier Founders
If startups become a cheap commodity , more people will be able to have them, just as more 
people could have computers once microprocessors made them cheap. And in particular, 
younger and more technical founders will be able to start startups than could before.
Back when it cost a lot to start a startup, you had to convince investors to let you do it. And that 
required very different skills from actually doing the startup. If investors were perfect judges, the 
two would require exactly the same skills. But unfortunately most investors are terrible judges.","But that's not relevant to an audience of investors.
Geoff Ralston reports that in Silicon Valley it seemed thinkable to start a startup in the mid 1980s. It would have 
started there. But I know it didn't to undergraduates on the East Coast.
[5] This trend is one of the main causes of the increase in economic inequality in the US since the mid twentieth 
century . The person who would in 1950 have been the general manager of the x division of Megacorp is now the 
founder of the x company , and owns significant equity in it.
[6] If Congress passes the founder visa in a non-broken form, that alone could in principle get us up to 20x, since 
95% of the world's population lives outside the US.
[7] If idea clashes got bad enough, it could change what it means to be a startup.","Perhaps later they step 
back and notice they've found an idea in everyone else's blind spot, and from that point make a 
deliberate effort to stay there. [3] But at the moment when successful startups get started, much 
of the innovation is unconscious.
What's different about successful founders is that they can see different problems. It's a 
particularly good combination both to be good at technology and to face problems that can be 
solved by it, because technology changes so rapidly that formerly bad ideas often become 
good without anyone noticing. Steve Wozniak's problem was that he wanted his own computer. 
That was an unusual problem to have in 1975. But technological change was about to make it a 
much more common one. Because he not only wanted a computer but knew how to build them, 
Wozniak was able to make himself one.","Who do I use as examples when I'm talking to 
companies we fund? Who do I find myself quoting?
1. Steve Jobs
I'd guess Steve is the most influential founder not just for me but for most people you could ask. 
A lot of startup culture is Apple culture. He was the original young founder. And while the 
concept of ""insanely great"" already existed in the arts, it was a novel idea to introduce into a 
company in the 1980s.
More remarkable still, he's stayed interesting for 30 years. People await new Apple products the 
way they'd await new books by a popular novelist. Steve may not literally design them, but they 
wouldn't happen if he weren't CEO.
Steve is clever and driven, but so are a lot of people in the Valley . What makes him unique is his 
sense of design.","Back when starting a startup meant building a factory , you needed 
investors' permission to do it at all. But now investors need founders more than founders need 
investors, and that, combined with the increasing amount of venture capital available, has 
driven up valuations. [8]
So the decreasing cost of starting a startup increases the number of rich people in two ways: it 
means that more people start them, and that those who do can raise money on better terms.
But there's also a third factor at work: the companies themselves are more valuable, because 
newly founded companies grow faster than they used to. T echnology hasn't just made it 
cheaper to build and distribute things, but faster too.
This trend has been running for a long time. IBM, founded in 1896, took 45 years to reach a 
billion 2020 dollars in revenue.","The first is that startups may represent a new economic phase, on the scale of the Industrial 
Revolution. I'm not sure of this, but there seems a decent chance it's true. People are 
dramatically more productive as founders or early employees of startupsâ€”imagine how much 
less Larry and Sergey would have achieved if they'd gone to work for a big companyâ€”and that 
scale of improvement can change social customs.
The second idea is that startups are a type of business that flourishes in certain places that 
specialize in itâ€”that Silicon Valley specializes in startups in the same way Los Angeles 
specializes in movies, or New Y ork in finance. [1]
What if both are true? What if startups are both a new economic phase and also a type of 
business that only flourishes in certain centers?
If so, this revolution is going to be particularly revolutionary . All previous revolutions have 
spread.","Lower taxes are not just a cause of entrepreneurship, but an effect as well: the people getting rich in the mid 20th 
century from real estate and oil exploration lobbied for and got huge tax loopholes that made their effective tax rate 
much lower, and presumably if it had been more common to grow big companies by building new technology , the 
people doing that would have lobbied for their own loopholes as well.
[6] That's why the people who did get rich in the mid 20th century so often got rich from oil exploration or real estate. 
Those were the two big areas of the economy that weren't susceptible to consolidation.
[7] The pure tech companies used to be called ""high technology"" startups. But now that startups can punch through 
the middle of the ice crust, we don't need a separate name for the edges, and the term ""high-tech"" has a decidedly 
retro sound.","They had 
discovered an interesting new idea, and they just couldn't let it go.
Mundane as it sounds, that's the most powerful motivator of all, not just in startups, but in most 
ambitious undertakings: to be genuinely interested in what you're building. This is what really 
drives billionaires, or at least the ones who become billionaires from starting companies. The 
company is their project.
One thing few people realize about billionaires is that all of them could have stopped sooner. 
They could have gotten acquired, or found someone else to run the company . Many founders 
do. The ones who become really rich are the ones who keep working. And what makes them 
keep working is not just money . What keeps them working is the same thing that keeps anyone 
else working when they could stop if they wanted to: that there's nothing else they'd rather do.","That 
describes the way many if not most of the biggest startups got started. Neither Apple nor Y ahoo 
nor Google nor Facebook were even supposed to be companies at first. They grew out of things 
their founders built because there seemed a gap in the world.
If you look at the way successful founders have had their ideas, it's generally the result of some 
external stimulus hitting a prepared mind. Bill Gates and Paul Allen hear about the Altair and 
think ""I bet we could write a Basic interpreter for it."" Drew Houston realizes he's forgotten his 
USB stick and thinks ""I really need to make my files live online."" Lots of people heard about the 
Altair. Lots forgot USB sticks. The reason those stimuli caused those founders to start 
companies was that their experiences had prepared them to notice the opportunities they 
represented.",0
"How does Paul Grahamâ€™s perspective on identifying good startup ideas compare with the Lean Startup methodology developed by Eric Ries, and which approach is better?","We've always 
encouraged founders to see a startup idea as a hypothesis rather than a blueprint. And yet 
they're still surprised how well it works to change the idea. Normally if you complain about 
something being hard, the general advice is to work harder. With a startup, I think you should 
find a problem that's easy for you to solve. Optimizing in solution-space is familiar and 
straightforward, but you can make enormous gains playing around in problem-space. Whereas 
mere determination, without flexibility , is a greedy algorithm that may get you nothing more than 
a mediocre local maximum: When someone is determined, there's still a danger that they'll 
follow a long, hard path that ultimately leads nowhere. Y ou want to push forward, but at the 
same time twist and turn to find the most promising path. One founder put it very succinctly: 
Fast iteration is the key to success.","Thanks to Chris Anderson, T revor Blackwell, Marc Hedlund, Jessica Livingston, Robert Morris, Greg Mcadoo, Fred 
Wilson, and Stephen Wolfram for reading drafts of this, and to Ed Dumbill for inviting me to speak.
(The second part of this talk became Why Startups Condense in America.)
The Hardest Lessons for Startups to Learn - # 60
April 2006
(This essay is derived from a talk at the 2006 Startup School.)
The startups we've funded so far are pretty quick, but they seem quicker to learn some lessons 
than others. I think it's because some things about startups are kind of counterintuitive.
We've now invested in enough companies that I've learned a trick for determining which points 
are the counterintuitive ones: they're the ones I have to keep repeating.","We've now watched the trajectories of so many 
startups that we're getting better at predicting them. And when we're talking about startups we 
think are likely to succeed, what we find ourselves saying is things like ""Oh, those guys can 
take care of themselves. They'll be fine."" Not ""those guys are really smart"" or ""those guys are 
working on a great idea."" [6] When we predict good outcomes for startups, the qualities that 
come up in the supporting arguments are toughness, adaptability , determination. Which means 
to the extent we're correct, those are the qualities you need to win.
Investors know this, at least unconsciously . The reason they like it when you don't need them is 
not simply that they like what they can't have, but because that quality is what makes founders 
succeed.
Sam Altman has it.","One founder put it very succinctly: 
Fast iteration is the key to success. One reason this advice is so hard to follow is that people 
don't realize how hard it is to judge startup ideas, particularly their own. Experienced founders 
learn to keep an open mind: Now I don't laugh at ideas anymore, because I realized how 
terrible I was at knowing if they were good or not. Y ou can never tell what will work. Y ou just 
have to do whatever seems best at each point. We do this with YC itself. We still don't know if it 
will work, but it seems like a decent hypothesis.
11. Don't Worry about Competitors
When you think you've got a great idea, it's sort of like having a guilty conscience about 
something. All someone has to do is look at you funny , and you think ""Oh my God, they know.""","If 
you're at the leading edge of a field that's changing rapidly , your ideas about what's sexy will be 
somewhat correlated with what's valuable in practice. Particularly as you get older and more 
experienced. Plus if you find an idea sexy , you'll work on it more enthusiastically . [13]
Recipes
While the best way to discover startup ideas is to become the sort of person who has them and 
then build whatever interests you, sometimes you don't have that luxury . Sometimes you need 
an idea now. For example, if you're working on a startup and your initial idea turns out to be bad.
For the rest of this essay I'll talk about tricks for coming up with startup ideas on demand. 
Although empirically you're better off using the organic strategy , you could succeed this way . 
Y ou just have to be more disciplined.","The way to come up with good startup ideas is to take a step back. Instead of making a 
conscious effort to think of startup ideas, turn your mind into the type that startup ideas form in 
without any conscious effort. In fact, so unconsciously that you don't even realize at first that 
they're startup ideas.
This is not only possible, it's how Apple, Y ahoo, Google, and Facebook all got started. None of 
these companies were even meant to be companies at first. They were all just side projects. 
The best startups almost have to start as side projects, because great ideas tend to be such 
outliers that your conscious mind would reject them as ideas for companies.
Ok, so how do you turn your mind into the type that startup ideas form in unconsciously?","A startup that does all three will probably succeed.
And that's kind of exciting, when you think about it, because all three are doable. Hard, but 
doable. And since a startup that succeeds ordinarily makes its founders rich, that implies 
getting rich is doable too. Hard, but doable.
If there is one message I'd like to get across about startups, that's it. There is no magically 
difficult step that requires brilliance to solve.
The Idea
In particular, you don't need a brilliant idea to start a startup around. The way a startup makes 
money is to offer people better technology than they have now. But what people have now is 
often so bad that it doesn't take brilliance to do better.
Google's plan, for example, was simply to create a search site that didn't suck.","Vector
The need to do something unscalably laborious to get started is so nearly universal that it might 
be a good idea to stop thinking of startup ideas as scalars. Instead we should try thinking of 
them as pairs of what you're going to build, plus the unscalable thing(s) you're going to do 
initially to get the company going.
It could be interesting to start viewing startup ideas this way , because now that there are two 
components you can try to be imaginative about the second as well as the first. But in most 
cases the second component will be what it usually is â€” recruit users manually and give them 
an overwhelmingly good experience â€” and the main benefit of treating startups as vectors will 
be to remind founders they need to work hard in two dimensions.","Starting startups is not one of them. The stick-
to-your-vision approach works for something like winning an Olympic gold medal, where the 
problem is well-defined. Startups are more like science, where you need to follow the trail 
wherever it leads.
So don't get too attached to your original plan, because it's probably wrong. Most successful 
startups end up doing something different than they originally intended â€” often so different that 
it doesn't even seem like the same company . Y ou have to be prepared to see the better idea 
when it arrives. And the hardest part of that is often discarding your old idea.
But openness to new ideas has to be tuned just right. Switching to a new idea every week will 
be equally fatal. Is there some kind of external test you can use? One is to ask whether the 
ideas represent some kind of progression.","This is less true with angels, but 
VCs reject practically everyone. The structure of their business means a partner does at most 2 
new investments a year, no matter how many good startups approach him.
In addition to the odds being terrible, the average investor is, as I mentioned, a pretty bad judge 
of startups. It's harder to judge startups than most other things, because great startup ideas 
tend to seem wrong. A good startup idea has to be not just good but novel. And to be both good 
and novel, an idea probably has to seem bad to most people, or someone would already be 
doing it and it wouldn't be novel.
That makes judging startups harder than most other things one judges. Y ou have to be an 
intellectual contrarian to be a good startup investor. That's a problem for VCs, most of whom 
are not particularly imaginative.",0
What are the major similarities and differences between Paul Grahamâ€™s Y Combinator model and the philosophies of other successful startup accelerators?,"He, like 
most of his peers, couldn't afford a monitor.
Thanks to Sam Altman, Mike Arrington, Paul Buchheit, John Collison, Patrick Collison, Garry T an, and Harj T aggar 
for reading drafts of this, and Marc Andreessen, Joe Gebbia, Reid Hoffman, Shel Kaphan, Mike Moritz and Kevin 
Systrom for answering my questions about startup history .
The Hardware Renaissance - # 149
 Want to start a startup? Get funded by Y Combinator. 
 October 2012
One advantage of Y Combinator's early , broad focus is that we see trends before most other 
people. And one of the most conspicuous trends in the last batch was the large number of 
hardware startups. Out of 84 companies, 7 were making hardware. On the whole they've done 
better than the companies that weren't.","Y Combinator ends up being more like an older brother than a parent.
I was surprised how much time I spent making introductions. Fortunately I discovered that when 
a startup needed to talk to someone, I could usually get to the right person by at most one hop. 
I remember wondering, how did my friends get to be so eminent? and a second later realizing: 
shit, I'm forty .
Another surprise was that the three-month batch format, which we were forced into by the 
constraints of the summer, turned out to be an advantage. When we started Y Combinator, we 
planned to invest the way other venture firms do: as proposals came in, we'd evaluate them and 
decide yes or no. The SFP was just an experiment to get things started. But it worked so well 
that we plan to do all our investing this way , one cycle in the summer and one in winter.","And in particular, don't be deterred from applying to Y 
Combinator with a hardware idea, because we're especially interested in hardware startups.
We know there's room for the next Steve Jobs. But there's almost certainly also room for the 
first <Y our Name Here>.
Thanks to Sam Altman, T revor Blackwell, David Cann, Sanjay Dastoor, Paul Gerhardt, 
Cameron Robertson, Harj T aggar, and Garry T an for reading drafts of this.
Startup - Growth - # 148
 Want to start a startup? Get funded by Y Combinator. 
 September 2012
A startup is a company designed to grow fast. Being newly founded does not in itself make a 
company a startup. Nor is it necessary for a startup to work on technology , or take venture 
funding, or have some sort of ""exit."" The only essential thing is growth.","(It's oddly nondeterministic.)
The real reason we started Y Combinator is one probably only a hacker would understand. We 
did it because it seems such a great hack. There are thousands of smart people who could 
start companies and don't, and with a relatively small amount of force applied at just the right 
place, we can spring on the world a stream of new startups that might otherwise not have 
existed.
In a way this is virtuous, because I think startups are a good thing. But really what motivates us 
is the completely amoral desire that would motivate any hacker who looked at some complex 
device and realized that with a tiny tweak he could make it run more efficiently . In this case, the 
device is the world's economy , which fortunately happens to be open source.
How to Do What Y ou Love - # 55
 Want to start a startup? Get funded by Y Combinator.","We know, because we've been there, just how vulnerable startups are in the earliest phases. 
Curiously enough, that's why founders tend to get so rich from them. Reward is always 
proportionate to risk, and very early stage startups are insanely risky .
What we really do at Y Combinator is get startups launched straight. One of many metaphors 
you could use for YC is a steam catapult on an aircraft carrier. We get startups airborne. Barely 
airborne, but enough that they can accelerate fast.
When you're launching planes they have to be set up properly or you're just launching 
projectiles. They have to be pointed straight down the deck; the wings have to be trimmed 
properly; the engines have to be at full power; the pilot has to be ready . These are the kind of 
problems we deal with.","They can practically read one 
another's minds. I'm sure they argue, like all founders, but I have never once sensed any 
unresolved tension between them.
Thanks to Jessica Livingston and Chris Steiner for reading drafts of this.
The New Funding Landscape - # 132
 Want to start a startup? Get funded by Y Combinator. 
 October 2010
After barely changing at all for decades, the startup funding business is now in what could, at 
least by comparison, be called turmoil. At Y Combinator we've seen dramatic changes in the 
funding environment for startups. Fortunately one of them is much higher valuations.
The trends we've been seeing are probably not YC-specific.","The founders who are doing it for the money will take the first sufficiently large 
acquisition offer, and the ones who are doing it to seem cool will rapidly discover that there are 
much less painful ways of seeming cool. [3]
Y Combinator certainly sees founders whose m.o. is to exploit people. YC is a magnet for them, 
because they want the YC brand. But when the YC partners detect someone like that, they 
reject them. If bad people made good founders, the YC partners would face a moral dilemma. 
Fortunately they don't, because bad people make bad founders. This exploitative type of 
founder is not going to succeed on a large scale, and in fact probably won't even succeed on a 
small one, because they're always going to be taking shortcuts. They see YC itself as a 
shortcut.","The Age of Giant Corporations. Praeger, 1993.
Thurow, Lester. Generating Inequality: Mechanisms of Distribution. Basic Books, 1975.
Witte, John. The Politics and Development of the Federal Income T ax. Wisconsin, 1985.
Related:
Jessica Livingston - # 171
November 2015
A few months ago an article about Y Combinator said that early on it had been a ""one-man 
show."" It's sadly common to read that sort of thing. But the problem with that description is not 
just that it's unfair. It's also misleading. Much of what's most novel about YC is due to Jessica 
Livingston. If you don't understand her, you don't understand YC. So let me tell you a little about 
Jessica.
YC had 4 founders.","A New Venture Animal - # 87
March 2008, rev May 2013
(This essay grew out of something I wrote for myself to figure out what we do. Even though Y 
Combinator is now 3 years old, we're still trying to understand its implications.)
I was annoyed recently to read a description of Y Combinator that said ""Y Combinator does 
seed funding for startups."" What was especially annoying about it was that I wrote it. This 
doesn't really convey what we do. And the reason it's inaccurate is that, paradoxically , funding 
very early stage startups is not mainly about funding.
Saying YC does seed funding for startups is a description in terms of earlier models. It's like 
calling a car a horseless carriage.
When you scale animals you can't just keep everything in proportion.","At most those are interesting the way puzzles are. There's more going on with 
startups. They may represent one of those rare, historic shifts in the way wealth is created.
That's ultimately what drives us to work on Y Combinator. We want to make money , if only so 
we don't have to stop doing it, but that's not the main goal. There have only been a handful of 
these great economic shifts in human history . It would be an amazing hack to make one happen 
faster.
Notes:
[1] The only people who lost were us. The angels had convertible debt, so they had first claim on the proceeds of the 
auction. Y Combinator only got 38 cents on the dollar.
[2] The best kind of organization for that might be an open source project, but those don't involve a lot of face to face 
meetings.",0
"Which of Paul Grahamâ€™s essays had the most profound impact on your thinking, and how has it changed the way you approach business, technology, or creativity?","What makes him unique is his 
sense of design. Before him, most companies treated design as a frivolous extra. Apple's 
competitors now know better.
2. TJ Rodgers
TJ Rodgers isn't as famous as Steve Jobs, but he may be the best writer among Silicon Valley 
CEOs. I've probably learned more from him about the startup way of thinking than from anyone 
else. Not so much from specific things he's written as by reconstructing the mind that produced 
them: brutally candid; aggressively garbage-collecting outdated ideas; and yet driven by 
pragmatism rather than ideology .
The first essay of his that I read was so electrifying that I remember exactly where I was at the 
time. It was High T echnology Innovation: Free Markets or Government Subsidies? and I was 
downstairs in the Harvard Square T Station.","[29] It may be helpful always to walk or run the same route, because that frees attention for thinking. It feels that way 
to me, and there is some historical evidence for it.
Thanks to T revor Blackwell, Daniel Gackle, Pam Graham, T om Howard, Patrick Hsu, Steve Huffman, Jessica 
Livingston, Henry Lloyd-Baker, Bob Metcalfe, Ben Miller, Robert Morris, Michael Nielsen, Courtenay Pipkin, Joris 
Poort, Mieke Roos, Rajat Suri, Harj T aggar, Garry T an, and my younger son for suggestions and for reading drafts. 
How to Get New Ideas - # 216
January 2023
(Someone fed my essays into GPT to make something that could answer questions based on 
them, then asked it where good ideas come from. The answer was ok, but not what I would 
have said.","Maybe it would be worth starting one that did.
[3] There need to be some number of big companies to acquire the startups, so the number of big companies 
couldn't decrease to zero.
[4] Thought experiment: If doctors did the same work, but as impoverished outcasts, which parents would still want 
their kids to be doctors?
Thanks to T revor Blackwell, Jessica Livingston, and Robert Morris for reading drafts of this, to the founders of Zenter 
for letting me use their web-based PowerPoint killer even though it isn't launched yet, and to Ming-Hay Luk of the 
Berkeley CSUA for inviting me to speak.
 Comment on this essay .
Is It Worth Being Wise- - # 71
February 2007
A few days ago I finally figured out something I've wondered about for 25 years: the relationship 
between wisdom and intelligence.","[3]
Even Newton fell into this trap. After publishing his theory of colors in 1672 he found himself 
distracted by disputes for years, finally concluding that the only solution was to stop publishing: I 
see I have made myself a slave to Philosophy , but if I get free of Mr Linus's business I will 
resolutely bid adew to it eternally , excepting what I do for my privat satisfaction or leave to come 
out after me. For I see a man must either resolve to put out nothing new or become a slave to 
defend it. [4] Linus and his students at Liege were among the more tenacious critics. Newton's 
biographer Westfall seems to feel he was overreacting: Recall that at the time he wrote, 
Newton's ""slavery"" consisted of five replies to Liege, totalling fourteen printed pages, over the 
course of a year.","But since their size made them perfect for use in high school 
classes, we read a lot of them, which gave us the impression the short story was flourishing. 
Mistake number three. And because they were so short, nothing really had to happen; you 
could just show a randomly truncated slice of life, and that was considered advanced. Mistake 
number four. The result was that I wrote a lot of stories in which nothing happened except that 
someone was unhappy in a way that seemed deep.
For most of college I was a philosophy major. I was very impressed by the papers published in 
philosophy journals. They were so beautifully typeset, and their tone was just captivatingâ€”
alternately casual and buffer-overflowingly technical. A fellow would be walking along a street 
and suddenly modality qua modality would spring upon him.","I 
didn't realize this when I began that essay , and even now I find it kind of weird. That's what 
you're looking for.
So if you want to write essays, you need two ingredients: a few topics you've thought about a 
lot, and some ability to ferret out the unexpected.
What should you think about? My guess is that it doesn't matter-- that anything can be 
interesting if you get deeply enough into it. One possible exception might be things that have 
deliberately had all the variation sucked out of them, like working in fast food. In retrospect, was 
there anything interesting about working at Baskin-Robbins? Well, it was interesting how 
important color was to the customers. Kids a certain age would point into the case and say that 
they wanted yellow. Did they want French Vanilla or Lemon? They would just look at you blankly .","As well as being pretty vague, it's shifted half a frame sideways from what we care about: 
it's neither separable from intelligence, nor responsible for all the difference between intelligence and having new 
ideas.
[4] Curiously enough, this essay is an example. It started out as an essay about writing ability . But when I came to the 
distinction between intelligence and having new ideas, that seemed so much more important that I turned the original 
essay inside out, making that the topic and my original topic one of the points in it. As in many other fields, that level 
of reworking is easier to contemplate once you've had a lot of practice.
 Thanks to T revor Blackwell, Patrick Collison, Jessica Livingston, Robert Morris, Michael Nielsen, and Lisa Randall 
for reading drafts of this.","But you couldn't do the equivalent thing for startups, because by definition if the students did well they 
would never come back.
[7] Charles Darwin was 22 when he received an invitation to travel aboard the HMS Beagle as a naturalist. It was 
only because he was otherwise unoccupied, to a degree that alarmed his family , that he could accept it. And yet if he 
hadn't we probably would not know his name.
[8] Parents can sometimes be especially conservative in this department. There are some whose definition of 
important problems includes only those on the critical path to med school.
[9] I did manage to think of a heuristic for detecting whether you have a taste for interesting ideas: whether you find 
known boring ideas intolerable. Could you endure studying literary theory , or working in middle management at a 
large company?","What an opportunity , I thought; these impressive things 
seem easy to me; I must be pretty sharp. Wrong. It was simply a fad. The books the professors 
wrote about expert systems are now ignored. They were not even on a path to anything 
interesting. And the customers paying so much for them were largely the same government 
agencies that paid thousands for screwdrivers and toilet seats.
How do you avoid copying the wrong things? Copy only what you genuinely like. That would 
have saved me in all three cases. I didn't enjoy the short stories we had to read in English 
classes; I didn't learn anything from philosophy papers; I didn't use expert systems myself. I 
believed these things were good because they were admired.
It can be hard to separate the things you like from the things you're impressed with. One trick is 
to ignore presentation.","It's a good exercise for you, too, to sit down and try to figure out how to describe your startup in 
one compelling phrase. If you can't, your plans may not be sufficiently focused.
Copy What Y ou Like - # 65
July 2006
When I was in high school I spent a lot of time imitating bad writers. What we studied in English 
classes was mostly fiction, so I assumed that was the highest form of writing. Mistake number 
one. The stories that seemed to be most admired were ones in which people suffered in 
complicated ways. Anything funny or gripping was ipso facto suspect, unless it was old enough 
to be hard to understand, like Shakespeare or Chaucer. Mistake number two. The ideal medium 
seemed the short story , which I've since learned had quite a brief life, roughly coincident with 
the peak of magazine publishing.",0
"What are three of the most important takeaways from Paul Grahamâ€™s essays that you would apply in your own work, and how would they be beneficial?","I 
didn't realize this when I began that essay , and even now I find it kind of weird. That's what 
you're looking for.
So if you want to write essays, you need two ingredients: a few topics you've thought about a 
lot, and some ability to ferret out the unexpected.
What should you think about? My guess is that it doesn't matter-- that anything can be 
interesting if you get deeply enough into it. One possible exception might be things that have 
deliberately had all the variation sucked out of them, like working in fast food. In retrospect, was 
there anything interesting about working at Baskin-Robbins? Well, it was interesting how 
important color was to the customers. Kids a certain age would point into the case and say that 
they wanted yellow. Did they want French Vanilla or Lemon? They would just look at you blankly .","I had to go back seven paragraphs and start over in another 
direction.
Fundamentally an essay is a train of thought-- but a cleaned-up train of thought, as dialogue is 
cleaned-up conversation. Real thought, like real conversation, is full of false starts. It would be 
exhausting to read. Y ou need to cut and fill to emphasize the central thread, like an illustrator 
inking over a pencil drawing. But don't change so much that you lose the spontaneity of the 
original.
Err on the side of the river. An essay is not a reference work. It's not something you read 
looking for a specific answer, and feel cheated if you don't find it. I'd much rather read an essay 
that went off in an unexpected but interesting direction than one that plodded dutifully along a 
prescribed course.
Surprise
So what's interesting?","[29] It may be helpful always to walk or run the same route, because that frees attention for thinking. It feels that way 
to me, and there is some historical evidence for it.
Thanks to T revor Blackwell, Daniel Gackle, Pam Graham, T om Howard, Patrick Hsu, Steve Huffman, Jessica 
Livingston, Henry Lloyd-Baker, Bob Metcalfe, Ben Miller, Robert Morris, Michael Nielsen, Courtenay Pipkin, Joris 
Poort, Mieke Roos, Rajat Suri, Harj T aggar, Garry T an, and my younger son for suggestions and for reading drafts. 
How to Get New Ideas - # 216
January 2023
(Someone fed my essays into GPT to make something that could answer questions based on 
them, then asked it where good ideas come from. The answer was ok, but not what I would 
have said.","[3]
Even Newton fell into this trap. After publishing his theory of colors in 1672 he found himself 
distracted by disputes for years, finally concluding that the only solution was to stop publishing: I 
see I have made myself a slave to Philosophy , but if I get free of Mr Linus's business I will 
resolutely bid adew to it eternally , excepting what I do for my privat satisfaction or leave to come 
out after me. For I see a man must either resolve to put out nothing new or become a slave to 
defend it. [4] Linus and his students at Liege were among the more tenacious critics. Newton's 
biographer Westfall seems to feel he was overreacting: Recall that at the time he wrote, 
Newton's ""slavery"" consisted of five replies to Liege, totalling fourteen printed pages, over the 
course of a year.","But I don't 
think this is a component of usefulness. It's more a matter of consideration for the reader. And 
it's a practical aid in getting things right; a mistake is more obvious when expressed in simple 
language. But I'll admit that the main reason I write simply is not for the reader's sake or 
because it helps get things right, but because it bothers me to use more or fancier words than I 
need to. It seems inelegant, like a program that's too long.
I realize florid writing works for some people. But unless you're sure you're one of them, the 
best advice is to write as simply as you can.
_____
I believe the formula I've given you, importance + novelty + correctness + strength, is the recipe 
for a good essay . But I should warn you that it's also a recipe for making people mad.
The root of the problem is novelty .","Oy . So I'm going to try to give the other side of the story: what an essay really is, and how you 
write one. Or at least, how I write one.
Mods
The most obvious difference between real essays and the things one has to write in school is 
that real essays are not exclusively about English literature. Certainly schools should teach 
students how to write. But due to a series of historical accidents the teaching of writing has 
gotten mixed together with the study of literature. And so all over the country students are 
writing not about how a baseball team with a small budget might compete with the Y ankees, or 
the role of color in fashion, or what constitutes a good dessert, but about symbolism in Dickens.
With the result that writing is made to seem boring and pointless. Who cares about symbolism 
in Dickens? Dickens himself would be more interested in an essay about color or baseball.","Thanks to Marc Andreessen, Chris Best, T revor Blackwell, Nicholas Christakis, Daniel Gackle, Jonathan Haidt, Claire 
Lehmann, Jessica Livingston, Greg Lukianoff, Robert Morris, and Garry T an for reading drafts of this.
Putting Ideas into Words - # 210
February 2022
Writing about something, even something you know well, usually shows you that you didn't 
know it as well as you thought. Putting ideas into words is a severe test. The first words you 
choose are usually wrong; you have to rewrite sentences over and over to get them exactly 
right. And your ideas won't just be imprecise, but incomplete too. Half the ideas that end up in 
an essay will be ones you thought of while you were writing it. Indeed, that's why I write them.","It's easy to satisfy one if you ignore the 
other. The converse of vaporous academic writing is the bold, but false, rhetoric of 
demagogues. Useful writing is bold, but true.
It's also two other things: it tells people something important, and that at least some of them 
didn't already know.
T elling people something they didn't know doesn't always mean surprising them. Sometimes it 
means telling them something they knew unconsciously but had never put into words. In fact 
those may be the more valuable insights, because they tend to be more fundamental.
Let's put them all together. Useful writing tells people something true and important that they 
didn't already know, and tells them as unequivocally as possible.
Notice these are all a matter of degree. For example, you can't expect an idea to be novel to 
everyone.","Importance has two factors. It's the number of people something matters to, times how much it 
matters to them. Which means of course that it's not a rectangle, but a sort of ragged comb, like 
a Riemann sum.
The way to get novelty is to write about topics you've thought about a lot. Then you can use 
yourself as a proxy for the reader in this department too. Anything you notice that surprises you, 
who've thought about the topic a lot, will probably also surprise a significant number of readers. 
And here, as with correctness and importance, you can use the Morris technique to ensure that 
you will. If you don't learn anything from writing an essay , don't publish it.
Y ou need humility to measure novelty , because acknowledging the novelty of an idea means 
acknowledging your previous ignorance of it.","But I have a legitimate reason for doing this. Y ou don't 
know what the ideas are until you get them down to the fewest words. [3]
The danger of the second paragraph is not merely that it's longer. It's that you start to lie to 
yourself. The ideas start to get mixed together with the spin you've added to get them past the 
readers' misconceptions.
I think the goal of an essay should be to discover surprising things. That's my goal, at least. And 
most surprising means most different from what people currently believe. So writing to 
persuade and writing to discover are diametrically opposed. The more your conclusions 
disagree with readers' present beliefs, the more effort you'll have to expend on selling your 
ideas rather than having them.",0
"If you could ask Paul Graham a single question about his essays, what would it be, and why do you think his response would be valuable?","[3]
Even Newton fell into this trap. After publishing his theory of colors in 1672 he found himself 
distracted by disputes for years, finally concluding that the only solution was to stop publishing: I 
see I have made myself a slave to Philosophy , but if I get free of Mr Linus's business I will 
resolutely bid adew to it eternally , excepting what I do for my privat satisfaction or leave to come 
out after me. For I see a man must either resolve to put out nothing new or become a slave to 
defend it. [4] Linus and his students at Liege were among the more tenacious critics. Newton's 
biographer Westfall seems to feel he was overreacting: Recall that at the time he wrote, 
Newton's ""slavery"" consisted of five replies to Liege, totalling fourteen printed pages, over the 
course of a year.","Princeton professor Robert George recently wrote: I sometimes ask students what their position 
on slavery would have been had they been white and living in the South before abolition. Guess 
what? They all would have been abolitionists! They all would have bravely spoken out against 
slavery , and worked tirelessly against it. He's too polite to say so, but of course they wouldn't. 
And indeed, our default assumption should not merely be that his students would, on average, 
have behaved the same way people did at the time, but that the ones who are aggressively 
conventional-minded today would have been aggressively conventional-minded then too. In 
other words, that they'd not only not have fought against slavery , but that they'd have been 
among its staunchest defenders.","[29] It may be helpful always to walk or run the same route, because that frees attention for thinking. It feels that way 
to me, and there is some historical evidence for it.
Thanks to T revor Blackwell, Daniel Gackle, Pam Graham, T om Howard, Patrick Hsu, Steve Huffman, Jessica 
Livingston, Henry Lloyd-Baker, Bob Metcalfe, Ben Miller, Robert Morris, Michael Nielsen, Courtenay Pipkin, Joris 
Poort, Mieke Roos, Rajat Suri, Harj T aggar, Garry T an, and my younger son for suggestions and for reading drafts. 
How to Get New Ideas - # 216
January 2023
(Someone fed my essays into GPT to make something that could answer questions based on 
them, then asked it where good ideas come from. The answer was ok, but not what I would 
have said.","I had to go back seven paragraphs and start over in another 
direction.
Fundamentally an essay is a train of thought-- but a cleaned-up train of thought, as dialogue is 
cleaned-up conversation. Real thought, like real conversation, is full of false starts. It would be 
exhausting to read. Y ou need to cut and fill to emphasize the central thread, like an illustrator 
inking over a pencil drawing. But don't change so much that you lose the spontaneity of the 
original.
Err on the side of the river. An essay is not a reference work. It's not something you read 
looking for a specific answer, and feel cheated if you don't find it. I'd much rather read an essay 
that went off in an unexpected but interesting direction than one that plodded dutifully along a 
prescribed course.
Surprise
So what's interesting?","Ok, they would say , dutifully . And could you 
introduce us to such-and-such influential person? And remember, we want to launch on 
T uesday .
It would sometimes take founders years to grasp these simple lessons. And not because they 
were lazy or stupid. They just seemed blind to what was right in front of them.
Why , I would ask myself, do they always make things so complicated? And then one day I 
realized this was not a rhetorical question.
Why did founders tie themselves in knots doing the wrong things when the answer was right in 
front of them? Because that was what they'd been trained to do. Their education had taught 
them that the way to win was to hack the test. And without even telling them they were being 
trained to do this. The younger ones, the recent graduates, had never faced a non-artificial test.","And it turned out the idea was on the right side of crazy after all.
4. Naughtiness
Though the most successful founders are usually good people, they tend to have a piratical 
gleam in their eye. They're not Goody T wo-Shoes type good. Morally , they care about getting 
the big questions right, but not about observing proprieties. That's why I'd use the word naughty 
rather than evil. They delight in breaking rules, but not rules that matter. This quality may be 
redundant though; it may be implied by imagination.
Sam Altman of Loopt is one of the most successful alumni, so we asked him what question we 
could put on the Y Combinator application that would help us discover more people like him.","He couldn't build them because he couldn't afford the components. But when Intel 
launched 4K DRAMs in 1975, he was ready .
_____
How many essays are there left to write though? The answer to that question is probably the 
most exciting thing I've learned about essay writing. Nearly all of them are left to write.
Although the essay is an old form, it hasn't been assiduously cultivated. In the print era, 
publication was expensive, and there wasn't enough demand for essays to publish that many . 
Y ou could publish essays if you were already well known for writing something else, like novels. 
Or you could write book reviews that you took over to express your own ideas. But there was 
not really a direct path to becoming an essayist. Which meant few essays got written, and those 
that did tended to be about a narrow range of subjects.","Oy . So I'm going to try to give the other side of the story: what an essay really is, and how you 
write one. Or at least, how I write one.
Mods
The most obvious difference between real essays and the things one has to write in school is 
that real essays are not exclusively about English literature. Certainly schools should teach 
students how to write. But due to a series of historical accidents the teaching of writing has 
gotten mixed together with the study of literature. And so all over the country students are 
writing not about how a baseball team with a small budget might compete with the Y ankees, or 
the role of color in fashion, or what constitutes a good dessert, but about symbolism in Dickens.
With the result that writing is made to seem boring and pointless. Who cares about symbolism 
in Dickens? Dickens himself would be more interested in an essay about color or baseball.","Isaac Newton
Newton has a strange role in my pantheon of heroes: he's the one I reproach myself with. He 
worked on big things, at least for part of his life. It's so easy to get distracted working on small 
stuff. The questions you're answering are pleasantly familiar. Y ou get immediate rewards â€” in 
fact, you get bigger rewards in your time if you work on matters of passing importance. But I'm 
uncomfortably aware that this is the route to well-deserved obscurity .
T o do really great things, you have to seek out questions people didn't even realize were 
questions. There have probably been other people who did this as well as Newton, for their 
time, but Newton is my model of this kind of thought. I can just begin to understand what it must 
have felt like for him.
Y ou only get one life. Why not do something huge?","I 
didn't realize this when I began that essay , and even now I find it kind of weird. That's what 
you're looking for.
So if you want to write essays, you need two ingredients: a few topics you've thought about a 
lot, and some ability to ferret out the unexpected.
What should you think about? My guess is that it doesn't matter-- that anything can be 
interesting if you get deeply enough into it. One possible exception might be things that have 
deliberately had all the variation sucked out of them, like working in fast food. In retrospect, was 
there anything interesting about working at Baskin-Robbins? Well, it was interesting how 
important color was to the customers. Kids a certain age would point into the case and say that 
they wanted yellow. Did they want French Vanilla or Lemon? They would just look at you blankly .",0
"What is the most controversial idea Paul Graham presents in his essays, and how would you argue either in favor of or against his perspective?","[3]
Even Newton fell into this trap. After publishing his theory of colors in 1672 he found himself 
distracted by disputes for years, finally concluding that the only solution was to stop publishing: I 
see I have made myself a slave to Philosophy , but if I get free of Mr Linus's business I will 
resolutely bid adew to it eternally , excepting what I do for my privat satisfaction or leave to come 
out after me. For I see a man must either resolve to put out nothing new or become a slave to 
defend it. [4] Linus and his students at Liege were among the more tenacious critics. Newton's 
biographer Westfall seems to feel he was overreacting: Recall that at the time he wrote, 
Newton's ""slavery"" consisted of five replies to Liege, totalling fourteen printed pages, over the 
course of a year.","And those tend to be the ones who do it well.
Great Hackers - # 29
 Want to start a startup? Get funded by Y Combinator. 
 July 2004
(This essay is derived from a talk at Oscon 2004.)
A few months ago I finished a new book, and in reviews I keep noticing words like ""provocative'' 
and ""controversial.'' T o say nothing of ""idiotic.''
I didn't mean to make the book controversial. I was trying to make it efficient. I didn't want to 
waste people's time telling them things they already knew. It's more efficient just to give them 
the diffs. But I suppose that's bound to yield an alarming book.
Edisons
There's no controversy about which idea is most controversial: the suggestion that variation in 
wealth might not be as big a problem as we think.","[29] It may be helpful always to walk or run the same route, because that frees attention for thinking. It feels that way 
to me, and there is some historical evidence for it.
Thanks to T revor Blackwell, Daniel Gackle, Pam Graham, T om Howard, Patrick Hsu, Steve Huffman, Jessica 
Livingston, Henry Lloyd-Baker, Bob Metcalfe, Ben Miller, Robert Morris, Michael Nielsen, Courtenay Pipkin, Joris 
Poort, Mieke Roos, Rajat Suri, Harj T aggar, Garry T an, and my younger son for suggestions and for reading drafts. 
How to Get New Ideas - # 216
January 2023
(Someone fed my essays into GPT to make something that could answer questions based on 
them, then asked it where good ideas come from. The answer was ok, but not what I would 
have said.","Princeton professor Robert George recently wrote: I sometimes ask students what their position 
on slavery would have been had they been white and living in the South before abolition. Guess 
what? They all would have been abolitionists! They all would have bravely spoken out against 
slavery , and worked tirelessly against it. He's too polite to say so, but of course they wouldn't. 
And indeed, our default assumption should not merely be that his students would, on average, 
have behaved the same way people did at the time, but that the ones who are aggressively 
conventional-minded today would have been aggressively conventional-minded then too. In 
other words, that they'd not only not have fought against slavery , but that they'd have been 
among its staunchest defenders.","I certainly got a strong dose 
of it from my father. [8]
The second component of independent-mindedness, resistance to being told what to think, is 
the most visible of the three. But even this is often misunderstood. The big mistake people 
make about it is to think of it as a merely negative quality . The language we use reinforces that 
idea. Y ou're unconventional. Y ou don't care what other people think. But it's not just a kind of 
immunity . In the most independent-minded people, the desire not to be told what to think is a 
positive force. It's not mere skepticism, but an active delight in ideas that subvert the 
conventional wisdom, the more counterintuitive the better.
Some of the most novel ideas seemed at the time almost like practical jokes. Think how often 
your reaction to a novel idea is to laugh.","So the most successful founders tend to work on ideas that few beside them realize are 
good. Which is not that far from a description of insanity , till you reach the point where you see 
results.
The first time Peter Thiel spoke at YC he drew a Venn diagram that illustrates the situation 
perfectly . He drew two intersecting circles, one labelled ""seems like a bad idea"" and the other 
""is a good idea."" The intersection is the sweet spot for startups.
This concept is a simple one and yet seeing it as a Venn diagram is illuminating. It reminds you 
that there is an intersectionâ€”that there are good ideas that seem bad. It also reminds you that 
the vast majority of ideas that seem bad are bad.
The fact that the best ideas seem like bad ideas makes it even harder to recognize the big 
winners.","But I have a legitimate reason for doing this. Y ou don't 
know what the ideas are until you get them down to the fewest words. [3]
The danger of the second paragraph is not merely that it's longer. It's that you start to lie to 
yourself. The ideas start to get mixed together with the spin you've added to get them past the 
readers' misconceptions.
I think the goal of an essay should be to discover surprising things. That's my goal, at least. And 
most surprising means most different from what people currently believe. So writing to 
persuade and writing to discover are diametrically opposed. The more your conclusions 
disagree with readers' present beliefs, the more effort you'll have to expend on selling your 
ideas rather than having them.","It might actually carry some 
weight. For example, if a senator wrote an article saying senators' salaries should be increased, 
one could respond: Of course he would say that. He's a senator. This wouldn't refute the 
author's argument, but it may at least be relevant to the case. It's still a very weak form of 
disagreement, though. If there's something wrong with the senator's argument, you should say 
what it is; and if there isn't, what difference does it make that he's a senator?
Saying that an author lacks the authority to write about a topic is a variant of ad hominemâ€”and 
a particularly useless sort, because good ideas often come from outsiders. The question is 
whether the author is correct or not. If his lack of authority caused him to make mistakes, point 
those out. And if it didn't, it's not a problem.","Indeed, such crossovers tend to be particularly promising.
[2] I'm not claiming this principle extends much beyond math, engineering, and the hard sciences. In politics, for 
example, crazy-sounding ideas generally are as bad as they sound. Though arguably this is not an exception, 
because the people who propose them are not in fact domain experts; politicians are domain experts in political 
tactics, like how to get elected and how to get legislation passed, but not in the world that policy acts upon. Perhaps 
no one could be.
[3] This sense of ""paradigm"" was defined by Thomas Kuhn in his Structure of Scientific Revolutions, but I also 
recommend his Copernican Revolution, where you can see him at work developing the idea.
[4] This is one reason people with a touch of Asperger's may have an advantage in discovering new ideas. They're 
always flying on instruments.","That would seem offensively curt. Instead he'll spend most of 
his time talking about the noble effort made by the people who worked on it.
The reason these conventions are more dangerous is that they interact with the ideas. Saying 
""pleased to meet you"" is just something you prepend to a conversation, but the sort of spin 
added by politicians is woven through it. We're starting to move from social lies to real lies.
Here's an example of a paragraph from an essay I wrote about labor unions. As written, it tends 
to offend people who like unions. People who think the labor movement was the creation of 
heroic union organizers have a problem to explain: why are unions shrinking now? The best 
they can do is fall back on the default explanation of people living in fallen civilizations. Our 
ancestors were giants.",0
"How has reading Paul Grahamâ€™s essays changed your understanding of innovation, startups, or the broader role of technology in shaping modern society?","Perhaps later they step 
back and notice they've found an idea in everyone else's blind spot, and from that point make a 
deliberate effort to stay there. [3] But at the moment when successful startups get started, much 
of the innovation is unconscious.
What's different about successful founders is that they can see different problems. It's a 
particularly good combination both to be good at technology and to face problems that can be 
solved by it, because technology changes so rapidly that formerly bad ideas often become 
good without anyone noticing. Steve Wozniak's problem was that he wanted his own computer. 
That was an unusual problem to have in 1975. But technological change was about to make it a 
much more common one. Because he not only wanted a computer but knew how to build them, 
Wozniak was able to make himself one.","Which means the ambitious can now do arbitrage on them. It will 
be very valuable to understand precisely which ideas to keep and which can now be discarded.
The place to look is where the spread of smallness began: in the world of startups.
There have always been occasional cases, particularly in the US, of ambitious people who grew 
the ladder under them instead of climbing it. But till recently this was an anomalous route that 
tended to be followed only by outsiders. It was no coincidence that the great industrialists of the 
nineteenth century had so little formal education. As huge as their companies eventually 
became, they were all essentially mechanics and shopkeepers at first. That was a social step 
no one with a college education would take if they could avoid it. Till the rise of technology 
startups, and in particular, Internet startups, it was very unusual for educated people to start 
their own businesses.","Rapid change in one area 
uncovers big, soluble problems in other areas. Sometimes the changes are advances, and what 
they change is solubility . That was the kind of change that yielded Apple; advances in chip 
technology finally let Steve Wozniak design a computer he could afford. But in Google's case 
the most important change was the growth of the web. What changed there was not solubility 
but bigness.
The other connection between startups and technology is that startups create new ways of 
doing things, and new ways of doing things are, in the broader sense of the word, new 
technology . When a startup both begins with an idea exposed by technological change and 
makes a product consisting of technology in the narrower sense (what used to be called ""high 
technology""), it's easy to conflate the two.","What makes him unique is his 
sense of design. Before him, most companies treated design as a frivolous extra. Apple's 
competitors now know better.
2. TJ Rodgers
TJ Rodgers isn't as famous as Steve Jobs, but he may be the best writer among Silicon Valley 
CEOs. I've probably learned more from him about the startup way of thinking than from anyone 
else. Not so much from specific things he's written as by reconstructing the mind that produced 
them: brutally candid; aggressively garbage-collecting outdated ideas; and yet driven by 
pragmatism rather than ideology .
The first essay of his that I read was so electrifying that I remember exactly where I was at the 
time. It was High T echnology Innovation: Free Markets or Government Subsidies? and I was 
downstairs in the Harvard Square T Station.","Maybe it would be worth starting one that did.
[3] There need to be some number of big companies to acquire the startups, so the number of big companies 
couldn't decrease to zero.
[4] Thought experiment: If doctors did the same work, but as impoverished outcasts, which parents would still want 
their kids to be doctors?
Thanks to T revor Blackwell, Jessica Livingston, and Robert Morris for reading drafts of this, to the founders of Zenter 
for letting me use their web-based PowerPoint killer even though it isn't launched yet, and to Ming-Hay Luk of the 
Berkeley CSUA for inviting me to speak.
 Comment on this essay .
Is It Worth Being Wise- - # 71
February 2007
A few days ago I finally figured out something I've wondered about for 25 years: the relationship 
between wisdom and intelligence.","T echnology has 
decreased the cost of starting a startup so much that founders now have the upper hand over 
investors. Founders get less diluted, and it is now common for them to retain board control as 
well. Both further increase economic inequality , the former because founders own more stock, 
and the latter because, as investors have learned, founders tend to be better at running their 
companies than investors.
While the surface manifestations change, the underlying forces are very , very old. The 
acceleration of productivity we see in Silicon Valley has been happening for thousands of years. 
If you look at the history of stone tools, technology was already accelerating in the Mesolithic. 
The acceleration would have been too slow to perceive in one lifetime. Such is the nature of the 
leftmost part of an exponential curve. But it was the same curve.","Unfortunately the constraint probably has to be self-imposed. If you're expected to do more 
with less, then you're being starved, not eating virtuously .
[6] Without the prospect of publication, the closest most people come to writing essays is to write in a journal. I find I 
never get as deeply into subjects as I do in proper essays. As the name implies, you don't go back and rewrite journal 
entries over and over for two weeks.
Thanks to Sam Altman, T revor Blackwell, Paul Buchheit, Sarah Harlin, Jessica Livingston, Jackie McDonough, 
Robert Morris, Olin Shivers, and Chris Small for reading drafts of this, and to Chris Small and Chad Fowler for 
inviting me to speak. 
Why Startups Condense in America - # 62
May 2006
(This essay is derived from a keynote at Xtech.)
Startups happen in clusters.","The first is that startups may represent a new economic phase, on the scale of the Industrial 
Revolution. I'm not sure of this, but there seems a decent chance it's true. People are 
dramatically more productive as founders or early employees of startupsâ€”imagine how much 
less Larry and Sergey would have achieved if they'd gone to work for a big companyâ€”and that 
scale of improvement can change social customs.
The second idea is that startups are a type of business that flourishes in certain places that 
specialize in itâ€”that Silicon Valley specializes in startups in the same way Los Angeles 
specializes in movies, or New Y ork in finance. [1]
What if both are true? What if startups are both a new economic phase and also a type of 
business that only flourishes in certain centers?
If so, this revolution is going to be particularly revolutionary . All previous revolutions have 
spread.","And once you apply that kind of 
brain power to petty but profitable questions, you can create wealth very rapidly .
That's the essence of a startup: having brilliant people do work that's beneath them. Big 
companies try to hire the right person for the job. Startups win because they don'tâ€”because 
they take people so smart that they would in a big company be doing ""research,"" and set them 
to work instead on problems of the most immediate and mundane sort. Think Einstein 
designing refrigerators. [7]
If you want to learn what people want, read Dale Carnegie's How to Win Friends and Influence 
People. [8] When a friend recommended this book, I couldn't believe he was serious. But he 
insisted it was good, so I read it, and he was right.","Who do I use as examples when I'm talking to 
companies we fund? Who do I find myself quoting?
1. Steve Jobs
I'd guess Steve is the most influential founder not just for me but for most people you could ask. 
A lot of startup culture is Apple culture. He was the original young founder. And while the 
concept of ""insanely great"" already existed in the arts, it was a novel idea to introduce into a 
company in the 1980s.
More remarkable still, he's stayed interesting for 30 years. People await new Apple products the 
way they'd await new books by a popular novelist. Steve may not literally design them, but they 
wouldn't happen if he weren't CEO.
Steve is clever and driven, but so are a lot of people in the Valley . What makes him unique is his 
sense of design.",0
